%!PS-Adobe-3.0
%%Title: close6.for
%%Creator: ps-print v7.3.4
%%For: Joshua Wallace
%%CreationDate: 14:53:49 Nov 03 2015
%%Orientation: Portrait
%%DocumentNeededResources: font Times-Roman Times-Italic
%%+ font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%DocumentSuppliedResources: procset PSPrintUserDefinedPrologue-joshuajw 0 0
%%DocumentMedia: Letter 612 792 0 () ()
%%PageOrder: Ascend
%%Pages: (atend)
%%Requirements:
%%EndComments
%%BeginDefaults
%%PageMedia: Letter
%%EndDefaults

%%BeginProlog

/languagelevel where{pop}{/languagelevel 1 def}ifelse
/ErrorMessage  1 def

% === BEGIN ps-print prologue 0
% version: 6.0

% Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
%   Free Software Foundation, Inc.

% This file is part of GNU Emacs.

% GNU Emacs is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.

% GNU Emacs is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.

% You should have received a copy of the GNU General Public License
% along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

% As a special exception, the copyright holders of this module give
% you permission to include the module in a Postscript file generated
% by Emacs or other free software together with the result of
% converting text to be printed, regardless of the license terms of
% that text, and to use under terms of your choice the page images
% resulting from formatting said combination.  If you modify this
% module, you may extend this exception to your version of the module
% but you are not obligated to do so.  If you do not wish to do so,
% delete this exception statement from your version.


%%BeginProcSet: ErrorHandler
% Downloaded Error Break-page handler
% Adapted from:
%     PostScript Language Program Design,
%     Adobe Systems Incorporated.
%     Appendix A, pages 217-219

/ps$brkpage where{pop}
{
 /ps$brkpage 64 dict def
 ps$brkpage begin
  /tx 0 def/ty 0 def/toy 0 def/tox 0 def
  /prnt{
   dup type/stringtype ne{=string cvs}if
   dup length 6 mul
   /tx exch def/ty 10 def
   currentpoint/toy exch def/tox exch def
   1 setgray newpath
   tox toy 2 sub moveto
   0 ty rlineto tx 0 rlineto
   0 ty neg rlineto
   closepath fill
   tox toy moveto 0 setgray show
  }bind def
  /nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
  /=={/cp 0 def typeprint nl}def
  /typeprint{dup type dup currentdict exch known{exec}{unknowntype}ifelse}readonly def
  /lmargin 72 def
  /rmargin 72 def
  /tprint{
   dup length cp add rmargin gt{nl/cp 0 def}if
   dup length cp add/cp exch def
   prnt
  }readonly def
  /cvsprint{=string cvs tprint( )tprint}readonly def
  /unknowntype{exch pop cvlit(??)tprint cvsprint}readonly def
  /integertype{cvsprint}readonly def
  /realtype{cvsprint}readonly def
  /booleantype{cvsprint}readonly def
  /operatortype{(//)tprint cvsprint}readonly def
  /marktype{pop(-mark-)tprint}readonly def
  /dicttype{pop(-dictionary-)tprint}readonly def
  /nulltype{pop(-null-)tprint}readonly def
  /filetype{pop(-filestream-)tprint}readonly def
  /savetype{pop(-savelevel-)tprint}readonly def
  /fonttype{pop(-fontid-)tprint}readonly def
  /nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
  /stringtype{
   dup rcheck
   {(\()tprint tprint(\))tprint}
   {pop(-string-)tprint}ifelse}readonly def
  /arraytype{
   dup rcheck
   {dup xcheck
    {({)tprint{typeprint}forall(})tprint}
    {([)tprint{typeprint}forall(])tprint}ifelse}
   {pop(-array-)tprint}ifelse}readonly def
  /packedarraytype{
   dup rcheck
   {dup xcheck
    {({)tprint{typeprint}forall(})tprint}
    {([)tprint{typeprint}forall(])tprint}ifelse}
   {pop(-packedarray-)tprint}ifelse}readonly def
  /courier/Courier findfont 10 scalefont def
  /OLDhandleerror errordict/handleerror get def
 end %ps$brkpage

 /handleerror{
  systemdict begin $error begin ps$brkpage begin
  newerror
  {/newerror false store vmstatus pop pop 0 ne{grestoreall}if
   initgraphics
   ErrorMessage 1 and 0 ne{ % print on paper
    courier setfont lmargin 720 moveto
    (# ERROR: )prnt errorname prnt nl
    (# OFFENDING COMMAND: )prnt/command load prnt
    $error/ostack known
    {nl nl(# STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if
    $error/errorinfo known
    {nl nl(# ERRORINFO:)prnt nl nl $error/errorinfo get aload length{==}repeat}if
    systemdict/showpage get exec}if
   ErrorMessage 2 and 0 ne{ % send back to printing system
    (\%\%[ Error: )print errorname =print
    (; OffendingCommand: )print/command load =print
    $error/errorinfo known
    {(; ErrorInfo:)print $error/errorinfo get aload length{( )=print =print}repeat}if
    ( ]\%\%)= flush
    (\%\%[ Rest of job is ignored ]\%\%)= flush}if
   /newerror true store}if
  end end end
  stop
 } % handleerror
 dup 0 systemdict put % replace name by actual dict object
 dup 4 ps$brkpage put % replace name by dict object
 bind readonly

 errordict 3 1 roll put % put proc in errordict as /handleerror
}ifelse
%%EndProcSet


% operators for language level 2 only

(<<)cvn where			% << operator
{pop/BMark(<<)cvn load def}
{/BMark{mark}bind def}ifelse
(>>)cvn where			% >> operator
{pop/EMark(>>)cvn load def}
{/EMark{counttomark 2 idiv dup dict begin{def}repeat pop currentdict end}bind def}ifelse
/setpagedevice where		% setpagedevice
{pop}
{/setpagedevice{pop}bind def}ifelse
/packedarray where		% packedarray
{pop}
{/packedarray{array astore readonly}bind def}ifelse


% device dependent operators

/DefOp{
 dup where{pop pop pop}
 {exch dup where{pop}{pop/pop}ifelse load def}ifelse}def

/duplexmode/setduplexmode DefOp
/tumble/settumble DefOp

% === END ps-print prologue 0

%%BeginResource: procset PSPrintUserDefinedPrologue-joshuajw 0 0


%%EndResource

/LandscapeMode       false def
/UpsideDown          false def
/NumberOfColumns     1 def
/LandscapePageHeight 792.0 def
/PrintPageWidth      498.6141732283465 def
/PrintWidth   498.6141732283465 def
/PrintHeight  643.7029732283465 def
/LeftMargin   56.69291338582677 def
/RightMargin  56.69291338582677 def
/InterColumn  56.69291338582677 def
/BottomMargin 42.51968503937008 def
/TopMargin    42.51968503937008 def
/HeaderOffset 28.346456692913385 def
/HeaderPad    2.4276 def
/FooterOffset 28.346456692913385 def
/FooterPad    0 def
/FooterLines  2 def
/ShowNofN           true def
/SwitchHeader       false def
/PrintOnlyOneHeader false def
/PrintHeader        true def
/PrintHeaderFrame   true def
/HeaderFrameProperties [0.000 0.900 0.400 0.000 0.000 ]def
/PrintFooter        false def
/PrintFooterFrame   true def
/FooterFrameProperties [0.000 0.900 0.400 0.000 0.000 ]def
/LineSpacing      0 def
/ParagraphSpacing 0 def
/LineHeight       8.967500000000001 def
/LinesPerColumn   72 def
/WarnPaperSize    true def
/Zebra            false def
/PrintLineNumber  false def
/SyncLineZebra    false def
/ZebraFollow      0 def
/PrintLineStep    1 def
/PrintLineStart   1 def
/LineNumberColor  [0.000 0.000 0.000] def
/ZebraHeight      3 def
/ZebraColor       0.950 def
/BackgroundColor  [1.000 1.000 1.000] def
/UseSetpagedevice false def

/PageWidth PrintPageWidth LeftMargin add RightMargin add def

/N-Up           1 def
/N-Up-Landscape false def
/N-Up-Border    true def
/N-Up-Lines     1 def
/N-Up-Columns   1 def
/N-Up-Missing   0 def
/N-Up-Margin    28.346456692913385 def
/N-Up-Repeat    N-Up-Lines def
/N-Up-End       N-Up-Columns def
/N-Up-XColumn   PageWidth def
/N-Up-YColumn   0 def
/N-Up-XLine     N-Up-End 1 sub PageWidth mul neg def
/N-Up-YLine     LandscapePageHeight neg def
/N-Up-XStart    0 def
/N-Up-YStart    0 def

% === BEGIN ps-print prologue 1
% version: 6.1

% Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
%   Free Software Foundation, Inc.

% This file is part of GNU Emacs.

% GNU Emacs is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.

% GNU Emacs is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.

% You should have received a copy of the GNU General Public License
% along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

% As a special exception, the copyright holders of this module give
% you permission to include the module in a Postscript file generated
% by Emacs or other free software together with the result of
% converting text to be printed, regardless of the license terms of
% that text, and to use under terms of your choice the page images
% resulting from formatting said combination.  If you modify this
% module, you may extend this exception to your version of the module
% but you are not obligated to do so.  If you do not wish to do so,
% delete this exception statement from your version.


% ISOLatin1Encoding stolen from ps_init.ps in GhostScript 2.6.1.4:
/ISOLatin1Encoding where{pop}{
% -- The ISO Latin-1 encoding vector isn't known, so define it.
% -- The first half is the same as the standard encoding,
% -- except for minus instead of hyphen at code 055.
/ISOLatin1Encoding
StandardEncoding 0 45 getinterval aload pop
    /minus
StandardEncoding 46 82 getinterval aload pop
%*** NOTE: the following are missing in the Adobe documentation,
%*** but appear in the displayed table:
%*** macron at 0225, dieresis at 0230, cedilla at 0233, space at 0240.
% 0200 (128)
    /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
    /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
    /dotlessi/grave/acute/circumflex/tilde/macron/breve/dotaccent
    /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
% 0240 (160)
    /space/exclamdown/cent/sterling
	/currency/yen/brokenbar/section
    /dieresis/copyright/ordfeminine/guillemotleft
	/logicalnot/hyphen/registered/macron
    /degree/plusminus/twosuperior/threesuperior
	/acute/mu/paragraph/periodcentered
    /cedilla/onesuperior/ordmasculine/guillemotright
	/onequarter/onehalf/threequarters/questiondown
% 0300 (192)
    /Agrave/Aacute/Acircumflex/Atilde
	/Adieresis/Aring/AE/Ccedilla
    /Egrave/Eacute/Ecircumflex/Edieresis
	/Igrave/Iacute/Icircumflex/Idieresis
    /Eth/Ntilde/Ograve/Oacute
	/Ocircumflex/Otilde/Odieresis/multiply
    /Oslash/Ugrave/Uacute/Ucircumflex
	/Udieresis/Yacute/Thorn/germandbls
% 0340 (224)
    /agrave/aacute/acircumflex/atilde
	/adieresis/aring/ae/ccedilla
    /egrave/eacute/ecircumflex/edieresis
	/igrave/iacute/icircumflex/idieresis
    /eth/ntilde/ograve/oacute
	/ocircumflex/otilde/odieresis/divide
    /oslash/ugrave/uacute/ucircumflex
	/udieresis/yacute/thorn/ydieresis
256 packedarray def
}ifelse

/reencodeFontISO{ %def
  dup
  length 12 add dict	% Make a new font (a new dict the same size
			% as the old one) with room for our new symbols.

  begin			% Make the new font the current dictionary.

    % Copy each of the symbols from the old dictionary
    % to the new one except for the font ID.
    {1 index/FID ne{def}{pop pop}ifelse}forall

    % Override the encoding with the ISOLatin1 encoding.
    currentdict/FontType get 0 ne{/Encoding ISOLatin1Encoding def}if

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.

%          ^    (x2 y2)
%          |       |
%          |       v
%          |  +----+ - -
%          |  |    |   ^
%          |  |    |   | Ascent (usually > 0)
%          |  |    |   |
% (0 0) -> +--+----+-------->
%             |    |   |
%             |    |   v Descent (usually < 0)
% (x1 y1) --> +----+ - -

    currentdict/FontType get 0 ne
    {/FontBBox load aload pop			% -- x1 y1 x2 y2
     FontMatrix transform/Ascent  exch def pop
     FontMatrix transform/Descent exch def pop}
    {/PrimaryFont FDepVector 0 get def
     PrimaryFont/FontBBox get aload pop
     PrimaryFont/FontMatrix get transform/Ascent exch def pop
     PrimaryFont/FontMatrix get transform/Descent exch def pop}ifelse

    /FontHeight Ascent Descent sub def	% use `sub' because descent < 0

    % Define these in case they're not in the FontInfo
    % (also, here they're easier to get to).
    /UnderlinePosition  Descent 0.70 mul def
    /OverlinePosition   Descent UnderlinePosition sub Ascent add def
    /StrikeoutPosition  Ascent 0.30 mul def
    /LineThickness      FontHeight 0.05 mul def
    /Xshadow            FontHeight  0.08 mul def
    /Yshadow            FontHeight -0.09 mul def
    /SpaceBackground    Descent neg UnderlinePosition add def
    /XBox               Descent neg def
    /YBox               LineThickness 0.7 mul def

    currentdict		% Leave the new font on the stack
    end			% Stop using the font as the current dictionary.
    definefont		% Put the font into the font dictionary
    pop			% Discard the returned font.
}bind def

% Font definition
/DefFont{findfont exch scalefont reencodeFontISO}def

% Font selection
/F{
  findfont
  dup/Ascent            get/Ascent            exch def
  dup/Descent           get/Descent           exch def
  dup/FontHeight        get/FontHeight        exch def
  dup/UnderlinePosition get/UnderlinePosition exch def
  dup/OverlinePosition  get/OverlinePosition  exch def
  dup/StrikeoutPosition get/StrikeoutPosition exch def
  dup/LineThickness     get/LineThickness     exch def
  dup/Xshadow           get/Xshadow           exch def
  dup/Yshadow           get/Yshadow           exch def
  dup/SpaceBackground   get/SpaceBackground   exch def
  dup/XBox              get/XBox              exch def
  dup/YBox              get/YBox              exch def
  setfont
}def

/FG/setrgbcolor load def

/bg false def
/BG{
  dup/bg exch def
  {[4 1 roll]}
  {[1.0 1.0 1.0]}
  ifelse
  /bgcolor exch def
}def

%  B    width    C
%   +-----------+
%               | Ascent  (usually > 0)
% A +           +
%               | Descent (usually < 0)
%   +-----------+
%  E    width    D

/dobackground{				% width --
  currentpoint				% -- width x y
  gsave
    newpath
    moveto				% A (x y)
    0 Ascent rmoveto			% B
    dup 0 rlineto			% C
    0 Descent Ascent sub rlineto	% D
    neg 0 rlineto			% E
    closepath
    FillBgColor
  grestore
}def

/eolbg{					% dobackground until right margin
  PrintWidth				% -- x-eol
  currentpoint pop			% -- cur-x
  sub					% -- width until eol
  dobackground
}def

/LineHS LineHeight LineSpacing add def
/ParagraphHS LineHeight ParagraphSpacing add def
/PSL{/h exch def bg{eolbg}if  0  currentpoint exch pop h sub  moveto}def
/PLN{PrintLineNumber{doLineNumber}if}def

/SL{LineHS PSL isLineStep pop}def	% Soft Linefeed

/PHL{ParagraphHS PSL PLN}def		% Paragraph Hard Linefeed
/LHL{LineHS PSL PLN}def			% Hard Linefeed

% Some debug
/dcp{currentpoint exch 40 string cvs print(, )print =}def
/dp{print 2 copy  exch 40 string cvs print(, )print =}def

/W{
  ( )stringwidth	% Get the width of a space in the current font.
  pop			% Discard the Y component.
  mul			% Multiply the width of a space
			% by the number of spaces to plot
  bg{dup dobackground}if
  0 rmoveto
}def

/Effect          0 def
/EffectUnderline false def
/EffectStrikeout false def
/EffectOverline  false def
/EffectShadow    false def
/EffectBox       false def
/EffectOutline   false def

% effect: 1  - underline  2   - strikeout  4  - overline
%         8  - shadow     16  - box        32 - outline
/EF{
  /Effect exch def
  /EffectUnderline Effect 1  and 0 ne def
  /EffectStrikeout Effect 2  and 0 ne def
  /EffectOverline  Effect 4  and 0 ne def
  /EffectShadow    Effect 8  and 0 ne def
  /EffectBox       Effect 16 and 0 ne def
  /EffectOutline   Effect 32 and 0 ne def
}def

% stack:  string  |-  --
/S{
  /xx currentpoint dup Descent add/yy exch def
  Ascent add/YY exch def def
  dup stringwidth pop xx add/XX exch def
  EffectShadow{
    /yy yy Yshadow add def
    /XX XX Xshadow add def
  }if
  bg{
    true
    EffectBox
      {SpaceBackground doBox}
      {xx yy XX YY doRect}
    ifelse
  }if						% background
  EffectBox      {false 0 doBox}if		% box
  EffectShadow   {dup doShadow}if		% shadow
  EffectOutline
    {true doOutline}				% outline
    {show}					% normal text
  ifelse
  EffectUnderline{UnderlinePosition Hline}if	% underline
  EffectStrikeout{StrikeoutPosition Hline}if	% strikeout
  EffectOverline {OverlinePosition  Hline}if	% overline
}bind def

% stack:  position  |-  --
/Hline{
  currentpoint exch pop add dup
  gsave
  newpath
  xx exch moveto
  XX exch lineto
  closepath
  LineThickness setlinewidth stroke
  grestore
}bind def

% stack:  fill-or-not delta  |-  --
/doBox{
  /dd exch def
  xx XBox sub dd sub yy YBox sub dd sub
  XX XBox add dd add YY YBox add dd add
  doRect
}bind def

% stack:  fill-or-not lower-x lower-y upper-x upper-y  |-  --
/doRect{
  /rYY exch def
  /rXX exch def
  /ryy exch def
  /rxx exch def
  gsave
  newpath
  rXX rYY moveto
  rxx rYY lineto
  rxx ryy lineto
  rXX ryy lineto
  closepath
  % top of stack: fill-or-not
  {FillBgColor}
  {LineThickness setlinewidth stroke}ifelse
  grestore
}bind def

% stack:  string  |-  --
/doShadow{
  gsave
  Xshadow Yshadow rmoveto
  false doOutline
  grestore
}bind def

/st 1 string def

% stack:  string fill-or-not  |-  --
/doOutline{
  /-fillp- exch def
  /-ox- currentpoint/-oy- exch def def
  gsave
  LineThickness setlinewidth
  {st 0 3 -1 roll put
   st dup true charpath
   -fillp- {gsave FillBgColor grestore}if
   stroke stringwidth
   -oy- add/-oy- exch def
   -ox- add/-ox- exch def
   -ox- -oy- moveto
  }forall
  grestore
  -ox- -oy- moveto
}bind def

% stack:  --
/FillBgColor{bgcolor aload pop setrgbcolor fill}bind def

% stack:  -- |- boolean
/isLineStep{
  SyncLineZebra
  {PLScounter 0 gt						% or zebra
   {/PLScounter PLScounter 1 sub def PLScounter 0 eq}
   {false}ifelse
   PrintLineStep 1 gt
   {/PrintLineStep PrintLineStep 1 sub def}
   {/PrintLineStep ZebraHeight def
    /PLScounter PrintLineStart def}ifelse}
  {LineNumber PrintLineStart sub PrintLineStep mod 0 eq}ifelse	% or line step
}def

% stack:  --
/doLineNumber{
  /LineNumber where
  {pop
   isLineStep			% or line step
   LineNumber Lines ge or	% or last line
   {currentfont
    gsave
    LineNumberColor SetColor
    /L0 findfont setfont
    LineNumber Lines ge
    {(end      )}
    {LineNumber 6 string cvs(      )strcat}ifelse
    dup stringwidth pop neg 0 rmoveto
    show
    grestore
    setfont}if
    /LineNumber LineNumber 1 add def
  }if
}def

% stack: color-specifier |- --
/SetColor{dup type/realtype eq{setgray}{aload pop setrgbcolor}ifelse}def

% stack: --
/printZebra{
  gsave
  ZebraColor SetColor
  /double-zebra ZebraHeight ZebraHeight add def
  /yiter double-zebra LineHS mul neg def
  /xiter PrintWidth InterColumn add def
  /zebra-line LinesPrinted def
  NumberOfColumns{LinesPerColumn doColumnZebra xiter 0 rmoveto}repeat
  grestore
}def

% stack:  lines-per-column |- --
/doColumnZebra{
  /lpc exch def
  gsave
  ZebraFollow 1 and 0 ne{
    /H ZebraHeight zebra-line ZebraHeight mod sub def
    /lpc lpc H sub def
    zebra-line double-zebra mod ZebraHeight lt
    {H doZebra	% "black" stripe followed by a "white" stripe
     /lpc lpc ZebraHeight sub def
     H ZebraHeight add}
    {H}ifelse	% "white" stripe
    LineHS mul neg 0 exch rmoveto
    /zebra-line zebra-line LinesPerColumn add def
  }if
  /zspacing 0 def
  lpc dup double-zebra idiv{ZebraHeight doZebra 0 yiter rmoveto}repeat
  double-zebra mod dup 0 le{pop}
  {dup ZebraHeight gt
   {pop ZebraHeight}
   {/zspacing LineSpacing def
    ZebraFollow 2 and 0 ne{pop ZebraHeight}if}ifelse
   doZebra}ifelse
  grestore
}def

% stack:  zebra-height (in lines) |- --
/doZebra{
  /zh exch 0.05 sub LineHS mul zspacing sub def
  gsave
  0 LineHeight 0.65 mul rmoveto
  PrintWidth 0 rlineto
  0 zh neg rlineto
  PrintWidth neg 0 rlineto
  0 zh rlineto
  fill
  grestore
}def

% stack: --
/printBackground{
  /BackgroundColor where{
    /LHg LineHeight 0.65 mul def
    /PHg PrintHeight LHg add def
    pop gsave BackgroundColor SetColor
    NumberOfColumns{
     gsave
     0 LHg rmoveto
     PrintWidth 0 rlineto
     0 PHg neg rlineto
     PrintWidth neg 0 rlineto
     0 PHg rlineto
     fill
     grestore
     PrintWidth InterColumn add 0 rmoveto
    }repeat
    grestore
  }if
}def

% tx ty rotation xscale yscale xpos ypos BeginBackImage
/BeginBackImage{
  /-save-image- save def
  /showpage{}def
  translate
  scale
  rotate
  translate
}def

/EndBackImage{-save-image- restore}def

% string fontsize fontname rotation gray xpos ypos ShowBackText
/ShowBackText{
  gsave
  translate
  setgray
  rotate
  findfont exch dup/-offset- exch -0.25 mul def scalefont setfont
  0 -offset- moveto
  /-saveLineThickness- LineThickness def
  /LineThickness 1 def
  false doOutline
  /LineThickness -saveLineThickness- def
  grestore
}def

/SetPageSize{
  BMark/PageSize[PageWidth LandscapePageHeight LandscapeMode{exch}if]EMark setpagedevice
}def

/BeginDoc{
  % ---- Remember space width of the normal text font `f0'.
  /SpaceWidth/f0 findfont setfont( )stringwidth pop def
  % ---- save the state of the document (useful for ghostscript!)
  /docState save def
  % ---- [andrewi] set PageSize based on chosen dimensions
  UseSetpagedevice{
   WarnPaperSize{SetPageSize}{mark{SetPageSize}stopped cleartomark}ifelse
  }if
  /ColumnWidth PrintWidth InterColumn add def
  % ---- define where  printing will start
  /f0 F					% this installs Ascent
  /PrintStartY PrintHeight Ascent sub def
  /ColumnIndex 1 def
  /N-Up-Counter N-Up-End 1 sub def
  /PLScounter PrintLineStart def
}def

/EndDoc{
  % ---- restore the state of the document (useful for ghostscript!)
  docState restore
}def

/BeginDSCPage{
  % ---- when 1st column, save the state of the page
  ColumnIndex 1 eq{/pageState save def}if
  % ---- save the state of the column
  /columnState save def
}def

/PrintHeaderWidth PrintOnlyOneHeader{PrintPageWidth}{PrintWidth}ifelse def

/BeginPage{
  /LinesPrinted exch def
  % ---- when 1st column, print all background effects
  ColumnIndex 1 eq{
    0 PrintStartY moveto		% move to where printing will start
    printBackground
    Zebra{printZebra}if
    printGlobalBackground
    printLocalBackground
  }if
  PrintOnlyOneHeader{ColumnIndex 1 eq}{true}ifelse
  dup PrintHeader and{
    PrintHeaderFrame{HeaderFrame}if
    HeaderText
  }if
  PrintFooter and{
    PrintFooterFrame{FooterFrame}if
    FooterText
  }if
  0 PrintStartY moveto			% move to where printing will start
  /LineNumber where
  {pop
   SyncLineZebra
   {/H PageNumber 1 sub NumberOfColumns mul ColumnIndex 1 sub add
       LinesPerColumn mul ZebraHeight mod def
    /PLScounter H PrintLineStart ge{0}{PrintLineStart H sub}ifelse def
    /PrintLineStep ZebraHeight H sub def}if}if
  PLN
}def

/EndPage{bg{eolbg}if}def

/EndDSCPage{
  ColumnIndex NumberOfColumns eq{
    % ---- restore the state of the page
    pageState restore
    /ColumnIndex 1 def
    % ---- N-up printing
    N-Up 1 gt{
      N-Up-Counter 0 gt
      {% ---- Next page on same row
	/N-Up-Counter N-Up-Counter 1 sub def
	N-Up-XColumn N-Up-YColumn}
      {% ---- Next page on next line
	/N-Up-Counter N-Up-End 1 sub def
	N-Up-XLine N-Up-YLine}ifelse
      translate
    }if
  }{ % else
    % ---- restore the state of the current column
    columnState restore
    % ---- and translate to the next column
    ColumnWidth 0 translate
    /ColumnIndex ColumnIndex 1 add def
  }ifelse
}def

/TextStart{
  LeftMargin BottomMargin
  PrintFooter{
    FooterPad add
    FooterLines FooterLineHeight mul add
    FooterPad add
    FooterOffset add}if
}def

% stack: number-of-pages-per-sheet |- --
/BeginSheet{
  /sheetState save def
  /pages-per-sheet exch def

  % ---- translate to bottom-right corner of Portrait page
  LandscapeMode{
    LandscapePageHeight 0 translate
    90 rotate
  }if
  % ---- [jack] Kludge: my ghostscript window is 21x27.7 instead of 21x29.7
  /JackGhostscript where{pop 1 27.7 29.7 div scale}if
  UpsideDown{PageWidth LandscapePageHeight translate 180 rotate}if
  % ---- N-Up printing
  N-Up 1 gt{
    % ---- landscape
    N-Up-Landscape{
      PageWidth 0 translate
      90 rotate
    }if
    N-Up-Margin dup translate
    % ---- scale
    LandscapeMode{
      /HH PageWidth def
      /WW LandscapePageHeight def
    }{
      /HH LandscapePageHeight def
      /WW PageWidth def
    }ifelse
    /xx 0 def
    N-Up-Landscape{
      /ww WW WW mul N-Up-Lines HH mul div def
      /cc HH N-Up-Columns N-Up-Missing add div def
      ww cc gt{/xx WW def/WW cc ww div WW mul def/xx xx WW sub def}if
    }{
      /hh HH N-Up-Columns N-Up-Missing add div def
      /cc HH N-Up-Lines div def
      hh cc gt{/xx WW def/WW cc hh div WW mul def/xx xx WW sub def}if
    }ifelse
    WW N-Up-Margin sub N-Up-Margin sub
    N-Up-Landscape
    {N-Up-Lines div HH}
    {N-Up-Columns N-Up-Missing add div WW}ifelse
    div dup scale
    LandscapeMode{/yy 0 def}{/yy xx def/xx 0 def}ifelse
    xx N-Up-Repeat 1 sub LandscapePageHeight mul yy add translate
    % ---- go to start position in page matrix
    N-Up-XStart N-Up-Missing 0.5 mul
    LandscapeMode
    {LandscapePageHeight mul N-Up-YStart add}
    {PageWidth mul add N-Up-YStart}ifelse
    translate
  }if
  % ---- translate to lower left corner of TEXT
  TextStart translate

  % ---- N-up printing
  N-Up 1 gt N-Up-Border and pages-per-sheet 0 gt and{
    % ---- page border
    gsave
    0 setgray
    TextStart exch neg exch neg moveto
    N-Up-Repeat
    {N-Up-End
     {gsave
      PageWidth 0 rlineto
      0 LandscapePageHeight rlineto
      PageWidth neg 0 rlineto
      closepath stroke
      grestore
      /pages-per-sheet pages-per-sheet 1 sub def
      pages-per-sheet 0 le{exit}if
      N-Up-XColumn N-Up-YColumn rmoveto
     }repeat
     pages-per-sheet 0 le{exit}if
     N-Up-XLine N-Up-XColumn sub N-Up-YLine rmoveto
    }repeat
    grestore
  }if
}def

/EndSheet{
  showpage
  sheetState restore
}def

/SetHeaderLines{			% nb-lines --
  /HeaderLines exch def
  % ---- bottom up
  HeaderPad
  HeaderLines 1 sub HeaderLineHeight mul add
  HeaderTitleLineHeight add
  HeaderPad add
  /HeaderHeight exch def
}def

/SetFooterLines{			% nb-lines --
  /FooterLines exch def
  % ---- bottom up
  FooterPad
  FooterLines FooterLineHeight mul add
  FooterPad add
  /FooterHeight exch def
}def

% |---------|
% |  tm     |
% |---------|
% |  header |
% |-+-------| <-- (x y)
% |  ho     |
% |---------|
% |  text   |
% |---------|
% |  fo     |
% |---------|
% |  footer |
% |-+-------| <-- (0 0)
% |  bm     |
% |---------|

% -- |- x y
/HeaderFrameStart{0  PrintHeight HeaderOffset add}def
/FooterFrameStart{0  FooterHeight FooterOffset add neg}def

/doFramePath{
  /h exch def
  PrintHeaderWidth	0	rlineto
  0			h	rlineto
  PrintHeaderWidth neg	0	rlineto
  0			h neg	rlineto
}def

/HeaderFramePath{HeaderHeight doFramePath}def
/FooterFramePath{FooterHeight doFramePath}def

% /path-fun /start-fun vector-property doFrame
/doFrame{
  /vecFrame exch def
  /startFrame exch load def
  /pathFrame exch load def
  gsave
    vecFrame 2 get setlinewidth				% frame border width
    % ---- do the shadow of the next rectangle
    startFrame moveto
    1 -1 rmoveto
    pathFrame
    vecFrame 4 get SetColor fill			% frame shadow color
    % ---- do the next rectangle ...
    startFrame moveto
    pathFrame
    gsave vecFrame 1 get SetColor fill grestore		% frame background
    gsave vecFrame 3 get SetColor stroke grestore	% frame border color
  grestore
}def

/HeaderFrame{/HeaderFramePath /HeaderFrameStart HeaderFrameProperties doFrame}def
/FooterFrame{/FooterFramePath /FooterFrameStart FooterFrameProperties doFrame}def

/HeaderStart{
  HeaderFrameStart
  exch HeaderPad add exch	% horizontal pad
  % ---- bottom up
  HeaderPad add			% vertical   pad
  HeaderDescent sub
  HeaderLineHeight HeaderLines 1 sub mul add
}def

/FooterStart{
  FooterFrameStart
  exch FooterPad add exch	% horizontal pad
  % ---- bottom up
  FooterPad add			% vertical   pad
  FooterDescent sub
  FooterLineHeight FooterLines 1 sub mul add
}def

/HeaderClip{HeaderFrameStart moveto HeaderFramePath clip}def
/FooterClip{FooterFrameStart moveto FooterFramePath clip}def

/strcat{
  dup length 3 -1 roll dup length dup 4 -1 roll add string dup
  0 5 -1 roll putinterval
  dup 4 2 roll exch putinterval
}def

/pagenumberstring{
  PageNumber 32 string cvs
  ShowNofN{(/)strcat PageCount 32 string cvs strcat}if
}def

% lines is-right HeaderOrFooterTextLines
/HeaderOrFooterTextLines{
  /is_right exch def
  HFStart moveto
  { % ---- process the lines
   aload pop
   exch F
   gsave
    dup xcheck{exec}if
    is_right{
     dup stringwidth pop
     PrintHeaderWidth exch sub HFPad HFPad add sub 0 rmoveto
    }if
    HFColor SetColor
    show
   grestore
   0 HFLineHeight neg rmoveto
  }forall
}def

% right-lines left-lines /start lineheight pad fore-color HeaderOrFooterText
/HeaderOrFooterText{
  /HFColor exch def
  /HFPad exch def
  /HFLineHeight exch def
  /HFStart exch load def

  % -- rightLines leftLines -- at stack

  % ---- hack: `PN 1 and'  ==  `PN 2 modulo'
  % ---- if even page number and duplex, then exchange left and right
  PageNumber 1 and 0 eq SwitchHeader and{exch}if

  % ---- process the left lines
  false HeaderOrFooterTextLines

  % ---- process the right lines
  true HeaderOrFooterTextLines
}def

/HeaderText{
  gsave HeaderClip
  HeaderLinesRight HeaderLinesLeft
  /HeaderStart HeaderLineHeight HeaderPad
  HeaderFrameProperties 0 get
  HeaderOrFooterText
  grestore
}def

/FooterText{
  gsave FooterClip
  FooterLinesRight FooterLinesLeft
  /FooterStart FooterLineHeight FooterPad
  FooterFrameProperties 0 get
  HeaderOrFooterText
  grestore
}def

/ReportFontInfo{
  2 copy
  /t0 3 1 roll DefFont
  /t0 F
  /lh FontHeight def
  /sw( )stringwidth pop def
  /aw(01234567890abcdefghijklmnopqrstuvwxyz)dup length exch
  stringwidth pop exch div def
  /t1 12/Helvetica-Oblique DefFont
  /t1 F
  gsave
    (languagelevel = )show
    languagelevel 32 string cvs show
  grestore
  0 FontHeight neg rmoveto
  gsave
    (For )show
    128 string cvs show
    ( )show
    32 string cvs show
    ( point, the line height is )show
    lh 32 string cvs show
    (, the space width is )show
    sw 32 string cvs show
    (,)show
  grestore
  0 FontHeight neg rmoveto
  gsave
    (and a crude estimate of average character width is )show
    aw 32 string cvs show
    (.)show
  grestore
  0 FontHeight neg rmoveto
}def

% cm to point
/cm{72 mul 2.54 div}def

/ReportAllFontInfo{
  % key = font name   value = font dictionary
  FontDirectory{pop 10 exch ReportFontInfo}forall
}def

% 3 cm 20 cm moveto  10/Courier ReportFontInfo  showpage
% 3 cm 20 cm moveto  ReportAllFontInfo          showpage

% === END ps-print prologue 1

/printGlobalBackground{
}def
/printLocalBackground{
}def

%%EndProlog

%%BeginSetup

%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-BoldOblique
%%IncludeResource: font Helvetica
%%IncludeResource: font Helvetica-Bold
/h0 14(Helvetica-Bold)cvn DefFont
/h1 12(Helvetica)cvn DefFont
/L0 6(Times-Italic)cvn DefFont
/H0 12(Helvetica)cvn DefFont


% ---- These lines must be kept together because...

/h0 F
/HeaderTitleLineHeight FontHeight def

/h1 F
/HeaderLineHeight FontHeight def
/HeaderDescent    Descent def

/H0 F
/FooterLineHeight FontHeight def
/FooterDescent    Descent def

% ---- ...because `F' has a side-effect on `FontHeight' and `Descent'

/f0 8.5(Courier)cvn DefFont
/f1 8.5(Courier-Bold)cvn DefFont
/f2 8.5(Courier-Oblique)cvn DefFont
/f3 8.5(Courier-BoldOblique)cvn DefFont
/SpaceWidthRatio 0.600000 def

%%BeginFeature: *ManualFeed False
BMark /ManualFeed false EMark setpagedevice
%%EndFeature

%%%% Start of Mule Section

/Latin1Encoding {	% newname fontname  |  font
    findfont dup length dict begin
	{ 1 index /FID ne { def } { pop pop } ifelse } forall
        /Encoding ISOLatin1Encoding def
	currentdict
    end
    definefont
} bind def

%% Redefine fonts for multiple charsets.
/ReDefFont {		     % fontname encoding fdepvector size  |  -
  20 dict begin
  3 index findfont {
    1 index /FID ne 2 index /UniqueID ne and {def} {pop pop} ifelse
  } forall
  /FontType 0 def
  /FMapType 3 def
  /EscChar 0 def
  % FontMatrix ::= [ size 0 0 size 0 0 ]
  /FontMatrix exch [ exch dup 0 exch 0 exch 0 0 ] def
  /FDepVector exch def
  /Encoding exch def
  currentdict
  end			% fontname dic
  definefont pop
} bind def

/EscChar 0 def

%% End of Mule Section

/F00 /Courier findfont def
/ETOP0 256 array def
0 1 255 { ETOP0 exch 0 put } for
ETOP0 0 0 put
/VTOP0 [F00] def
/ETOP1 256 array def
0 1 255 { ETOP1 exch 0 put } for
ETOP1 0 0 put
/VTOP1 [F00] def
/ETOP2 256 array def
0 1 255 { ETOP2 exch 0 put } for
ETOP2 0 0 put
/VTOP2 [F00] def
/ETOP3 256 array def
0 1 255 { ETOP3 exch 0 put } for
ETOP3 0 0 put
/VTOP3 [F00] def
/Vh0 [ VTOP1 aload pop ] def

Vh0 0 /Helvetica-Bold-latin1 /Helvetica-Bold Latin1Encoding put
/h0 ETOP1 Vh0 14.000000 ReDefFont
/Vh1 [ VTOP0 aload pop ] def

Vh1 0 /Helvetica-latin1 /Helvetica Latin1Encoding put
/h1 ETOP0 Vh1 12.000000 ReDefFont
/VH0 [ VTOP0 aload pop ] def

VH0 0 /Helvetica-latin1 /Helvetica Latin1Encoding put
/H0 ETOP0 VH0 12.000000 ReDefFont
/Vf0 [ VTOP0 aload pop ] def

Vf0 0 /Courier-latin1 /Courier Latin1Encoding put
/f0 ETOP0 Vf0 8.500000 ReDefFont
/Vf1 [ VTOP1 aload pop ] def

Vf1 0 /Courier-Bold-latin1 /Courier-Bold Latin1Encoding put
/f1 ETOP1 Vf1 8.500000 ReDefFont
/Vf2 [ VTOP2 aload pop ] def

Vf2 0 /Courier-Oblique-latin1 /Courier-Oblique Latin1Encoding put
/f2 ETOP2 Vf2 8.500000 ReDefFont
/Vf3 [ VTOP3 aload pop ] def

Vf3 0 /Courier-BoldOblique-latin1 /Courier-BoldOblique Latin1Encoding put
/f3 ETOP3 Vf3 8.500000 ReDefFont
BeginDoc
%%EndSetup

%%Page: 1 1
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1 def
/PageNumber 1 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
0 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(CLOSE6.FOR    \(ErikSoft   5 June 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Makes output files containing details of close encounters that occurred) S
LHL
(c) S
( ) S
(during an integration using Mercury6 or higher.) S
LHL
(c) S
LHL
(c) S
( ) S
(The user specifies the names of the required objects in the file close.in) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(itmp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(iclo) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jclo) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(precision) S
0.000 0.000 0.000 FG
(,lenin) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nmaster) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nopen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nwait) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nsml) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nsub) S
0.000 0.000 0.000 FG
(,lim\(2,100\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(year) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(month) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(timestyle) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(line_num) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(lenhead) S
0.000 0.000 0.000 FG
(,lmem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nchar) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(allflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(firstflag) S
0.000 0.000 0.000 FG
(,ninfile) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(unit) S
0.000 0.000 0.000 FG
(\(NMAX\),master_unit\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(t0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(t1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rfac) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dclo) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mcen) S
0.000 0.000 0.000 FG
(,jcen\(3\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mio_c2re) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mio_c2fl) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fr) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(theta) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(phi) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fv) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vtheta) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vphi) S
0.000 0.000 0.000 FG
(,gm) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x1) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(x2) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(v1) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(v2) S
0.000 0.000 0.000 FG
(\(3\),m\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(n1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(n2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(l1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(l2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q1) S
0.000 0.000 0.000 FG
(,q2) S
LHL
(      ) S
0.133 0.545 0.133 FG
(logical) S
0.000 0.000 0.000 FG
( test) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*250 ) S
0.722 0.525 0.043 FG
(string) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fout) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(header) S
0.000 0.000 0.000 FG
(,infile\(50\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(mem) S
0.000 0.000 0.000 FG
(\(NMESS\),) S
0.722 0.525 0.043 FG
(cc) S
0.000 0.000 0.000 FG
(,c\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(master_id) S
0.000 0.000 0.000 FG
(\(NMAX\),id\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*5 fin) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*1 ) S
0.722 0.525 0.043 FG
(check) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(style) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(type) S
0.000 0.000 0.000 FG
(,c1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      allflag = 0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read in output messages) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=) S
0.737 0.561 0.561 FG
('message.in') S
0.000 0.000 0.000 FG
(, exist=test\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.627 0.125 0.941 FG
(.not.) S
0.000 0.000 0.000 FG
(test\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.737 0.561 0.561 FG
(' ERROR: This file is needed to continue: ') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ) S
0.737 0.561 0.561 FG
(' message.in') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(stop) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(14, file=) S
0.737 0.561 0.561 FG
('message.in') S
0.000 0.000 0.000 FG
(, status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(\)) S
LHL
0.373 0.620 0.627 FG
(  10) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(14,) S
0.737 0.561 0.561 FG
('\(i3,1x,i2,1x,a80\)') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(20) S
0.000 0.000 0.000 FG
(\) j,lmem\(j\),mem\(j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
(  20) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(14\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Open file containing parameters for this programme) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=) S
0.737 0.561 0.561 FG
('close.in') S
0.000 0.000 0.000 FG
(, exist=test\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(test\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(10, file=) S
0.737 0.561 0.561 FG
('close.in') S
0.000 0.000 0.000 FG
(, status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),lmem\(81\),mem\(88\),lmem\(88\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ) S
0.737 0.561 0.561 FG
('close.in') S
0.000 0.000 0.000 FG
(,9\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read number of input files) S
LHL
0.373 0.620 0.627 FG
(  30) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(10,) S
0.737 0.561 0.561 FG
('\(a250\)') S
0.000 0.000 0.000 FG
(\) string) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(string\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('\)') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(30) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(250,string,nsub,lim\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(string\(lim\(1,nsub\):lim\(2,nsub\)\),*\) ninfile) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Make sure all the input files exist) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, ninfile) S
LHL
0.373 0.620 0.627 FG
(  40) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(10,) S
0.737 0.561 0.561 FG
('\(a250\)') S
0.000 0.000 0.000 FG
(\) string) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(string\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('\)') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(40) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(250,string,nsub,lim\)) S
LHL
(        infile\(j\)\(1:\(lim\(2,1\)-lim\(1,1\)+1\)\) = string\(lim\(1,1\):lim\(2,1\)\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 2 2
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 73 def
/PageNumber 2 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
72 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=infile\(j\), exist=test\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.627 0.125 0.941 FG
(.not.) S
0.000 0.000 0.000 FG
(test\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),lmem\(81\),mem\(88\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    lmem\(88\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,infile\(j\),80\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read parameters used by this programme) S
LHL
0.000 0.000 0.000 FG
(      timestyle = 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 2) S
LHL
0.373 0.620 0.627 FG
(  50) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(10,) S
0.737 0.561 0.561 FG
('\(a250\)') S
0.000 0.000 0.000 FG
(\) string) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(string\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('\)') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(50) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(250,string,nsub,lim\)) S
LHL
(        c1 = string\(lim\(1,nsub\):lim\(2,nsub\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('d') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('D') S
0.000 0.000 0.000 FG
(\)\) timestyle = 0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('y') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('Y') S
0.000 0.000 0.000 FG
(\)\) timestyle = timestyle+2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read in the names of the objects for which orbital elements are required) S
LHL
0.000 0.000 0.000 FG
(      nopen = 0) S
LHL
(      nwait = 0) S
LHL
(      nmaster = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(m_formce) S
0.000 0.000 0.000 FG
( \(timestyle,fout,header,lenhead\)) S
LHL
0.373 0.620 0.627 FG
(  60) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(10,) S
0.737 0.561 0.561 FG
('\(a250\)') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(70) S
0.000 0.000 0.000 FG
(\) string) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(250,string,nsub,lim\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(string\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('\)') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(lim\(1,1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(60) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Either open an aei file for this object or put it on the waiting list) S
LHL
0.000 0.000 0.000 FG
(        nmaster = nmaster + 1) S
LHL
(        itmp = ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
(\(7,lim\(2,1\)-lim\(1,1\)\)) S
LHL
(        master_id\(nmaster\)=) S
0.737 0.561 0.561 FG
('        ') S
0.000 0.000 0.000 FG
LHL
(        master_id\(nmaster\)\(1:itmp+1\) = string\(lim\(1,1\):lim\(1,1\)+itmp\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nopen) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(NFILES\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          nopen = nopen + 1) S
LHL
(          master_unit\(nmaster\) = 10 + nopen) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_aei) S
0.000 0.000 0.000 FG
( \(master_id\(nmaster\),) S
0.737 0.561 0.561 FG
('.clo') S
0.000 0.000 0.000 FG
(,master_unit\(nmaster\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      header,lenhead,mem,lmem\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          nwait = nwait + 1) S
LHL
(          master_unit\(nmaster\) = -2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(60) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.373 0.620 0.627 FG
(  70) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(If no objects are listed in CLOSE.IN assume that all objects are required) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nopen) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) allflag = 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(10\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(LOOP  OVER  EACH  INPUT  FILE  CONTAINING  INTEGRATION  DATA) S
LHL
(c) S
LHL
0.373 0.620 0.627 FG
(  90) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
(      firstflag = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 1, ninfile) S
LHL
(        line_num = 0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(10, file=infile\(i\), status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Loop over each time slice) S
LHL
0.373 0.620 0.627 FG
( 100) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
(        line_num = line_num + 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(10,) S
0.737 0.561 0.561 FG
('\(3a1\)') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(900) S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(666) S
0.000 0.000 0.000 FG
(\) check,style,type) S
LHL
(        line_num = line_num - 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(backspace) S
0.000 0.000 0.000 FG
( 10) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check if this is an old style input file) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(ichar) S
0.000 0.000 0.000 FG
(\(check\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(12) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(style) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('0') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(style) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('1') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    style) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('2') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(style) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('3') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(style) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('4') S
0.000 0.000 0.000 FG
(\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.737 0.561 0.561 FG
(' ERROR: This is an old style data file') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ) S
0.737 0.561 0.561 FG
('        Try running m_close5.for instead.') S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(stop) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(ichar) S
0.000 0.000 0.000 FG
(\(check\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(12\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(666) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 3 3
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 145 def
/PageNumber 3 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
144 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(IF  SPECIAL  INPUT,  READ  TIME,  PARAMETERS,  NAMES,  MASSES  ETC.) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(type) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('a') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          line_num = line_num + 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(10,) S
0.737 0.561 0.561 FG
('\(3x,i2,a62,i1\)') S
0.000 0.000 0.000 FG
(\) algor,cc\(1:62\),precision) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Decompress the time, number of objects, central mass and J components etc.) S
LHL
0.000 0.000 0.000 FG
(          time = mio_c2fl \(cc\(1:8\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(firstflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            t0 = time) S
LHL
(            firstflag = 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          nbig = ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
(\(.5d0 + mio_c2re\(cc\(9:16\), 0.d0, 11239424.d0, 3\)\)) S
LHL
(          nsml = ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
(\(.5d0 + mio_c2re\(cc\(12:19\),0.d0, 11239424.d0, 3\)\)) S
LHL
(          mcen = mio_c2fl \(cc\(15:22\)\) * K2) S
LHL
(          jcen\(1\) = mio_c2fl \(cc\(23:30\)\)) S
LHL
(          jcen\(2\) = mio_c2fl \(cc\(31:38\)\)) S
LHL
(          jcen\(3\) = mio_c2fl \(cc\(39:46\)\)) S
LHL
(          rcen = mio_c2fl \(cc\(47:54\)\)) S
LHL
(          rmax = mio_c2fl \(cc\(55:62\)\)) S
LHL
(          rfac = ) S
0.855 0.439 0.839 FG
(log10) S
0.000 0.000 0.000 FG
( \(rmax / rcen\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read in strings containing compressed data for each object) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nbig + nsml) S
LHL
(            line_num = line_num + 1) S
LHL
(            ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(10,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(666) S
0.000 0.000 0.000 FG
(\) c\(j\)\(1:51\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Create input format list) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(precision) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) nchar = 2) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(precision) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) nchar = 4) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(precision) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) nchar = 7) S
LHL
(          lenin = 3  +  6 * nchar) S
LHL
(          fin\(1:5\) = ) S
0.737 0.561 0.561 FG
('\(a00\)') S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(fin\(3:4\),) S
0.737 0.561 0.561 FG
('\(i2\)') S
0.000 0.000 0.000 FG
(\) lenin) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(For each object decompress its name, code number, mass, spin and density) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nbig + nsml) S
LHL
(            k = ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
(\(.5d0 + mio_c2re\(c\(j\)\(1:8\),0.d0,11239424.d0,3\)\)) S
LHL
(            id\(k\) = c\(j\)\(4:11\)) S
LHL
(            m\(k\)  = mio_c2fl \(c\(j\)\(12:19\)\) * K2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Find the object on the master list) S
LHL
0.000 0.000 0.000 FG
(            unit\(k\) = 0) S
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( l = 1, nmaster) S
LHL
(              ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(id\(k\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(master_id\(l\)\) unit\(k\) = master_unit\(l\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If object is not on the master list, add it to the list now) S
LHL
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(unit\(k\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              nmaster = nmaster + 1) S
LHL
(              master_id\(nmaster\) = id\(k\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Either open an aei file for this object or put it on the waiting list) S
LHL
0.000 0.000 0.000 FG
(              ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(allflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(                ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nopen) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(NFILES\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(                  nopen = nopen + 1) S
LHL
(                  master_unit\(nmaster\) = 10 + nopen) S
LHL
(                  ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_aei) S
0.000 0.000 0.000 FG
( \(master_id\(nmaster\),) S
0.737 0.561 0.561 FG
('.clo') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(              master_unit\(nmaster\),header,lenhead,mem,lmem\)) S
LHL
(                ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(                  nwait = nwait + 1) S
LHL
(                  master_unit\(nmaster\) = -2) S
LHL
(                ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(              ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(                master_unit\(nmaster\) = -1) S
LHL
(              ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(              unit\(k\) = master_unit\(nmaster\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 4 4
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 217 def
/PageNumber 4 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
216 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(IF  NORMAL  INPUT,  READ  COMPRESSED  DATA  ON  THE  CLOSE  ENCOUNTER) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(type) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('b') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          line_num = line_num + 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(10,) S
0.737 0.561 0.561 FG
('\(3x,a70\)') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(666) S
0.000 0.000 0.000 FG
(\) cc\(1:70\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Decompress time, distance and orbital variables for each object) S
LHL
0.000 0.000 0.000 FG
(          time = mio_c2fl \(cc\(1:8\)\)) S
LHL
(          iclo = ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
(\(.5d0 + mio_c2re\(cc\(9:16\),  0.d0, 11239424.d0, 3\)\)) S
LHL
(          jclo = ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
(\(.5d0 + mio_c2re\(cc\(12:19\), 0.d0, 11239424.d0, 3\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(iclo) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(NMAX) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jclo) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(NMAX\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) mem\(81\)\(1:lmem\(81\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        mem\(90\)\(1:lmem\(90\)\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(stop) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          dclo = mio_c2fl \(cc\(15:22\)\)) S
LHL
(          fr     = mio_c2re \(cc\(23:30\), 0.d0, rfac,  4\)) S
LHL
(          theta  = mio_c2re \(cc\(27:34\), 0.d0, PI,    4\)) S
LHL
(          phi    = mio_c2re \(cc\(31:38\), 0.d0, TWOPI, 4\)) S
LHL
(          fv     = mio_c2re \(cc\(35:42\), 0.d0, 1.d0,  4\)) S
LHL
(          vtheta = mio_c2re \(cc\(39:46\), 0.d0, PI,    4\)) S
LHL
(          vphi   = mio_c2re \(cc\(43:50\), 0.d0, TWOPI, 4\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_ov2x) S
0.000 0.000 0.000 FG
( \(rcen,rmax,mcen,m\(iclo\),fr,theta,phi,fv,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vtheta,vphi,x1\(1\),x1\(2\),x1\(3\),v1\(1\),v1\(2\),v1\(3\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(          fr     = mio_c2re \(cc\(47:54\), 0.d0, rfac,  4\)) S
LHL
(          theta  = mio_c2re \(cc\(51:58\), 0.d0, PI,    4\)) S
LHL
(          phi    = mio_c2re \(cc\(55:62\), 0.d0, TWOPI, 4\)) S
LHL
(          fv     = mio_c2re \(cc\(59:66\), 0.d0, 1.d0,  4\)) S
LHL
(          vtheta = mio_c2re \(cc\(63:70\), 0.d0, PI,    4\)) S
LHL
(          vphi   = mio_c2re \(cc\(67:74\), 0.d0, TWOPI, 4\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_ov2x) S
0.000 0.000 0.000 FG
( \(rcen,rmax,mcen,m\(jclo\),fr,theta,phi,fv,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vtheta,vphi,x2\(1\),x2\(2\),x2\(3\),v2\(1\),v2\(2\),v2\(3\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Convert to Keplerian elements) S
LHL
0.000 0.000 0.000 FG
(          gm = mcen + m\(iclo\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2el) S
0.000 0.000 0.000 FG
( \(gm,x1\(1\),x1\(2\),x1\(3\),v1\(1\),v1\(2\),v1\(3\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      q1,e1,i1,p1,n1,l1\)) S
LHL
(          a1 = q1 / \(1.d0 - e1\)) S
LHL
(          gm = mcen + m\(jclo\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2el) S
0.000 0.000 0.000 FG
( \(gm,x2\(1\),x2\(2\),x2\(3\),v2\(1\),v2\(2\),v2\(3\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      q2,e2,i2,p2,n2,l2\)) S
LHL
(          a2 = q2 / \(1.d0 - e2\)) S
LHL
(          i1 = i1 / DR) S
LHL
(          i2 = i2 / DR) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Convert time to desired format) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(timestyle) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) t1 = time) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(timestyle) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_jd_y) S
0.000 0.000 0.000 FG
( \(time,year,month,t1\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(timestyle) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) t1 = time - t0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(timestyle) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) t1 = \(time - t0\) / 365.25d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write encounter details to appropriate files) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(timestyle) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(unit\(iclo\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(10\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(unit\(iclo\),fout\) year,month,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        t1,id\(jclo\),dclo,a1,e1,i1,a2,e2,i2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(unit\(jclo\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(10\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(unit\(jclo\),fout\) year,month,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        t1,id\(iclo\),dclo,a2,e2,i2,a1,e1,i1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(unit\(iclo\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(10\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(unit\(iclo\),fout\) t1,id\(jclo\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        dclo,a1,e1,i1,a2,e2,i2) S
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(unit\(jclo\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(10\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(unit\(jclo\),fout\) t1,id\(iclo\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        dclo,a2,e2,i2,a1,e1,i1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 5 5
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 289 def
/PageNumber 5 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
288 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(  ) S
(IF  TYPE  IS  NOT  'a'  OR  'b',  THE  INPUT  FILE  IS  CORRUPTED) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(666) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Move on to the next time slice) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If input file is corrupted, try to continue from next uncorrupted time slice) S
LHL
0.373 0.620 0.627 FG
( 666) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(2a,/,a,i10\)') S
0.000 0.000 0.000 FG
(\) mem\(121\)\(1:lmem\(121\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    infile\(i\)\(1:60\),mem\(104\)\(1:lmem\(104\)\),line_num) S
LHL
(        c1 = ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(while) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(ichar) S
0.000 0.000 0.000 FG
(\(c1\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(12\)) S
LHL
(          line_num = line_num + 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(10,) S
0.737 0.561 0.561 FG
('\(a1\)') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(900) S
0.000 0.000 0.000 FG
(\) c1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        line_num = line_num - 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(backspace) S
0.000 0.000 0.000 FG
( 10) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Move on to the next file containing close encounter data) S
LHL
0.373 0.620 0.627 FG
( 900) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(10\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Close clo files) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nopen) S
LHL
(        ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(10+j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      nopen = 0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If some objects remain on waiting list, read through input files again) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nwait) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nmaster) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(master_unit\(j\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(10\) master_unit\(j\) = -1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(master_unit\(j\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-2) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(nopen) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(NFILES\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            nopen = nopen + 1) S
LHL
(            nwait = nwait - 1) S
LHL
(            master_unit\(j\) = 10 + nopen) S
LHL
(            ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_aei) S
0.000 0.000 0.000 FG
( \(master_id\(j\),) S
0.737 0.561 0.561 FG
('.clo') S
0.000 0.000 0.000 FG
(,master_unit\(j\),header,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        lenhead,mem,lmem\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(90) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(M_FORMCE.FOR    \(ErikSoft  30 November 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(m_formce) S
0.000 0.000 0.000 FG
( \(timestyle,fout,header,lenhead\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(timestyle) S
0.000 0.000 0.000 FG
(,lenhead) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*250 ) S
0.722 0.525 0.043 FG
(fout) S
0.000 0.000 0.000 FG
(,header) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(timestyle) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(timestyle) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        header\(1:19\) = ) S
0.737 0.561 0.561 FG
('    Time \(days\)    ') S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 6 6
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 361 def
/PageNumber 6 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
360 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        header\(20:58\) = ) S
0.737 0.561 0.561 FG
('  Object   dmin \(AU\)     a1       e1    ') S
0.000 0.000 0.000 FG
LHL
(        header\(59:90\) = ) S
0.737 0.561 0.561 FG
('   i1       a2       e2       i2') S
0.000 0.000 0.000 FG
LHL
(        lenhead = 90) S
LHL
(        fout = ) S
0.737 0.561 0.561 FG
('\(1x,f18.5,1x,a8,1x,f10.8,2\(1x,f9.4,1x,f8.6,1x,f7.3\)\)') S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(timestyle) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          header\(1:23\) = ) S
0.737 0.561 0.561 FG
('     Year/Month/Day    ') S
0.000 0.000 0.000 FG
LHL
(          header\(24:62\) = ) S
0.737 0.561 0.561 FG
('  Object   dmin \(AU\)     a1       e1    ') S
0.000 0.000 0.000 FG
LHL
(          header\(63:94\) = ) S
0.737 0.561 0.561 FG
('   i1       a2       e2       i2') S
0.000 0.000 0.000 FG
LHL
(          lenhead = 94) S
LHL
(          fout\(1:37\) = ) S
0.737 0.561 0.561 FG
('\(1x,i10,1x,i2,1x,f8.5,1x,a8,1x,f10.8,') S
0.000 0.000 0.000 FG
LHL
(          fout\(38:64\) = ) S
0.737 0.561 0.561 FG
('2\(1x,f9.4,1x,f8.6,1x,f7.3\)\)') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          header\(1:19\) = ) S
0.737 0.561 0.561 FG
('    Time \(years\)   ') S
0.000 0.000 0.000 FG
LHL
(          header\(20:58\) = ) S
0.737 0.561 0.561 FG
('  Object   dmin \(AU\)     a1       e1    ') S
0.000 0.000 0.000 FG
LHL
(          header\(59:90\) = ) S
0.737 0.561 0.561 FG
('   i1       a2       e2       i2') S
0.000 0.000 0.000 FG
LHL
(          fout = ) S
0.737 0.561 0.561 FG
('\(1x,f18.7,1x,a8,1x,f10.8,2\(1x,f9.4,1x,f8.6,1x,f7.3\)\)') S
0.000 0.000 0.000 FG
LHL
(          lenhead = 90) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_OV2X.FOR    \(ErikSoft   28 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts output variables for an object to coordinates and velocities.) S
LHL
(c) S
( ) S
(The output variables are:) S
LHL
(c) S
(  ) S
(r = the radial distance) S
LHL
(c) S
(  ) S
(theta = polar angle) S
LHL
(c) S
(  ) S
(phi = azimuthal angle) S
LHL
(c) S
(  ) S
(fv = 1 / [1 + 2\(ke/be\)^2], where be and ke are the object's binding and) S
LHL
(c) S
(                             ) S
(kinetic energies. \(Note that 0 < fv < 1\).) S
LHL
(c) S
(  ) S
(vtheta = polar angle of velocity vector) S
LHL
(c) S
(  ) S
(vphi = azimuthal angle of the velocity vector) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_ov2x) S
0.000 0.000 0.000 FG
( \(rcen,rmax,mcen,m,fr,theta,phi,fv,vtheta,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  vphi,x,y,z,u,v,w\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(w) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fr) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(theta) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(phi) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fv) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vtheta) S
0.000 0.000 0.000 FG
(,vphi) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v1) S
0.000 0.000 0.000 FG
(,temp) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(        r = rcen * 10.d0**fr) S
LHL
(        temp = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(.5d0*\(1.d0/fv - 1.d0\)\)) S
LHL
(        v1 = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(2.d0 * temp * \(mcen + m\) / r\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        x = r * ) S
0.855 0.439 0.839 FG
(sin) S
0.000 0.000 0.000 FG
(\(theta\) * ) S
0.855 0.439 0.839 FG
(cos) S
0.000 0.000 0.000 FG
(\(phi\)) S
LHL
(        y = r * ) S
0.855 0.439 0.839 FG
(sin) S
0.000 0.000 0.000 FG
(\(theta\) * ) S
0.855 0.439 0.839 FG
(sin) S
0.000 0.000 0.000 FG
(\(phi\)) S
LHL
(        z = r * ) S
0.855 0.439 0.839 FG
(cos) S
0.000 0.000 0.000 FG
(\(theta\)) S
LHL
(        u = v1 * ) S
0.855 0.439 0.839 FG
(sin) S
0.000 0.000 0.000 FG
(\(vtheta\) * ) S
0.855 0.439 0.839 FG
(cos) S
0.000 0.000 0.000 FG
(\(vphi\)) S
LHL
(        v = v1 * ) S
0.855 0.439 0.839 FG
(sin) S
0.000 0.000 0.000 FG
(\(vtheta\) * ) S
0.855 0.439 0.839 FG
(sin) S
0.000 0.000 0.000 FG
(\(vphi\)) S
LHL
(        w = v1 * ) S
0.855 0.439 0.839 FG
(cos) S
0.000 0.000 0.000 FG
(\(vtheta\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
EndPage
EndDSCPage
EndSheet

%%Page: 7 7
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 433 def
/PageNumber 7 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
432 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_EL2X.FOR    \(ErikSoft  7 July 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates Cartesian coordinates and velocities given Keplerian orbital) S
LHL
(c) S
( ) S
(elements \(for elliptical, parabolic or hyperbolic orbits\).) S
LHL
(c) S
LHL
(c) S
( ) S
(Based on a routine from Levison and Duncan's SWIFT integrator.) S
LHL
(c) S
LHL
(c) S
(  ) S
(mu = grav const * \(central + secondary mass\)) S
LHL
(c) S
(  ) S
(q = perihelion distance) S
LHL
(c) S
(  ) S
(e = eccentricity) S
LHL
(c) S
(  ) S
(i = inclination                 \)) S
LHL
(c) S
(  ) S
(p = longitude of perihelion !!! \)   in) S
LHL
(c) S
(  ) S
(n = longitude of ascending node \) radians) S
LHL
(c) S
(  ) S
(l = mean anomaly                \)) S
LHL
(c) S
LHL
(c) S
(  ) S
(x,y,z = Cartesian positions  \( units the same as a \)) S
LHL
(c) S
(  ) S
(u,v,w =     "     velocities \( units the same as sqrt\(mu/a\) \)) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_el2x) S
0.000 0.000 0.000 FG
( \(mu,q,e,i,p,n,l,x,y,z,u,v,w\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(n) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(,w) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(g) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ci) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(si) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(cn) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sn) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(cg) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sg) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(se) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(romes) S
0.000 0.000 0.000 FG
(,temp) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(z1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d11) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d12) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d13) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d21) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d22) S
0.000 0.000 0.000 FG
(,d23) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mco_kep) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(orbel_fhybrid) S
0.000 0.000 0.000 FG
(, orbel_zget) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Change from longitude of perihelion to argument of perihelion) S
LHL
0.000 0.000 0.000 FG
(      g = p - n) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Rotation factors) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(i,si,ci\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(g,sg,cg\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(n,sn,cn\)) S
LHL
(      z1 = cg * cn) S
LHL
(      z2 = cg * sn) S
LHL
(      z3 = sg * cn) S
LHL
(      z4 = sg * sn) S
LHL
(      d11 =  z1 - z4*ci) S
LHL
(      d12 =  z2 + z3*ci) S
LHL
(      d13 = sg * si) S
LHL
(      d21 = -z3 - z2*ci) S
LHL
(      d22 = -z4 + z1*ci) S
LHL
(      d23 = cg * si) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Semi-major axis) S
LHL
0.000 0.000 0.000 FG
(      a = q / \(1.d0 - e\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Ellipse) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        romes = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(1.d0 - e*e\)) S
LHL
(        temp = mco_kep \(e,l\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(temp,se,ce\)) S
LHL
(        z1 = a * \(ce - e\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 8 8
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 505 def
/PageNumber 8 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
504 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        z2 = a * romes * se) S
LHL
(        temp = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(mu/a\) / \(1.d0 - e*ce\)) S
LHL
(        z3 = -se * temp) S
LHL
(        z4 = romes * ce * temp) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Parabola) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(e) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ce = orbel_zget\(l\)) S
LHL
(          z1 = q * \(1.d0 - ce*ce\)) S
LHL
(          z2 = 2.d0 * q * ce) S
LHL
(          z4 = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(2.d0*mu/q\) / \(1.d0 + ce*ce\)) S
LHL
(          z3 = -ce * z4) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Hyperbola) S
LHL
0.000 0.000 0.000 FG
(          romes = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(e*e - 1.d0\)) S
LHL
(          temp = orbel_fhybrid\(e,l\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sinh) S
0.000 0.000 0.000 FG
( \(temp,se,ce\)) S
LHL
(          z1 = a * \(ce - e\)) S
LHL
(          z2 = -a * romes * se) S
LHL
(          temp = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(mu/) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(a\)\) / \(e*ce - 1.d0\)) S
LHL
(          z3 = -se * temp) S
LHL
(          z4 = romes * ce * temp) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      x = d11*z1 + d21*z2) S
LHL
(      y = d12*z1 + d22*z2) S
LHL
(      z = d13*z1 + d23*z2) S
LHL
(      u = d11*z3 + d21*z4) S
LHL
(      v = d12*z3 + d22*z4) S
LHL
(      w = d13*z3 + d23*z4) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_KEP.FOR    \(ErikSoft  7 July 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Solves Kepler's equation for eccentricities less than one.) S
LHL
(c) S
( ) S
(Algorithm from A. Nijenhuis \(1991\) Cel. Mech. Dyn. Astron. 51, 319-330.) S
LHL
(c) S
LHL
(c) S
(  ) S
(e = eccentricity) S
LHL
(c) S
(  ) S
(l = mean anomaly      \(radians\)) S
LHL
(c) S
(  ) S
(u = eccentric anomaly \(   "   \)) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_kep) S
0.000 0.000 0.000 FG
( \(e,oldl\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Outout) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(oldl) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,mco_kep) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(pi) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(twopi) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(piby2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ome) S
0.000 0.000 0.000 FG
(,sign) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sn) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dsn) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f2) S
0.000 0.000 0.000 FG
(,f3) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(p) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ss) S
0.000 0.000 0.000 FG
(,cc) S
LHL
(      ) S
0.133 0.545 0.133 FG
(logical) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(flag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(big) S
0.000 0.000 0.000 FG
(,bigg) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      pi = 3.141592653589793d0) S
LHL
(      twopi = 2.d0 * pi) S
LHL
(      piby2 = .5d0 * pi) S
LHL
0.698 0.133 0.133 FG
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 9 9
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 577 def
/PageNumber 9 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
576 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Reduce mean anomaly to lie in the range 0 < l < pi) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(oldl) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        l = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(oldl, twopi\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        l = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(oldl, twopi\) + twopi) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      sign = 1.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(pi\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        l = twopi - l) S
LHL
(        sign = -1.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ome = 1.d0 - e) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(.45d0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(.55d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Regions A,B or C in Nijenhuis) S
LHL
(c) S
( ) S
(-----------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Rough starting value for eccentric anomaly) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(ome\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          u1 = ome) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(\(pi-1.d0-e\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            u1 = \(l+e*pi\)/\(1.d0+e\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            u1 = l + e) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Improved value using Halley's method) S
LHL
0.000 0.000 0.000 FG
(        flag = u1) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(piby2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(flag\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          x = pi - u1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          x = u1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        x2 = x*x) S
LHL
(        sn = x*\(1.d0 + x2*\(-.16605 + x2*.00761\) \)) S
LHL
(        dsn = 1.d0 + x2*\(-.49815 + x2*.03805\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(flag\) dsn = -dsn) S
LHL
(        f2 = e*sn) S
LHL
(        f0 = u1 - f2 - l) S
LHL
(        f1 = 1.d0 - e*dsn) S
LHL
(        u2 = u1 - f0/\(f1 - .5d0*f0*f2/f1\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Region D in Nijenhuis) S
LHL
(c) S
( ) S
(---------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Rough starting value for eccentric anomaly) S
LHL
0.000 0.000 0.000 FG
(        z1 = 4.d0*e + .5d0) S
LHL
(        p = ome / z1) S
LHL
(        q = .5d0 * l / z1) S
LHL
(        p2 = p*p) S
LHL
(        z2 = ) S
0.855 0.439 0.839 FG
(exp) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(log) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dsqrt) S
0.000 0.000 0.000 FG
(\( p2*p + q*q \) + q \)/1.5 \)) S
LHL
(        u1 = 2.d0*q / \( z2 + p + p2/z2 \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Improved value using Newton's method) S
LHL
0.000 0.000 0.000 FG
(        z2 = u1*u1) S
LHL
(        z3 = z2*z2) S
LHL
(        u2 = u1 - .075d0*u1*z3 / \(ome + z1*z2 + .375d0*z3\)) S
LHL
(        u2 = l + e*u2*\( 3.d0 - 4.d0*u2*u2 \)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Accurate value using 3rd-order version of Newton's method) S
LHL
(c) S
( ) S
(N.B. Keep cos\(u2\) rather than sqrt\( 1-sin^2\(u2\) \) to maintain accuracy!) S
LHL
(c) S
LHL
(c) S
( ) S
(First get accurate values for u2 - sin\(u2\) and 1 - cos\(u2\)) S
LHL
0.000 0.000 0.000 FG
(      bigg = \(u2) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(piby2\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(bigg\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        z3 = pi - u2) S
EndPage
EndDSCPage
EndSheet

%%Page: 10 10
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 649 def
/PageNumber 10 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
648 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        z3 = u2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      big = \(z3) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(\(.5d0*piby2\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(big\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        x = piby2 - z3) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        x = z3) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      x2 = x*x) S
LHL
(      ss = 1.d0) S
LHL
(      cc = 1.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ss = x*x2/6.*\(1. - x2/20.*\(1. - x2/42.*\(1. - x2/72.*\(1. -) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   x2/110.*\(1. - x2/156.*\(1. - x2/210.*\(1. - x2/272.\)\)\)\)\)\)\)) S
LHL
(      cc =   x2/2.*\(1. - x2/12.*\(1. - x2/30.*\(1. - x2/56.*\(1. -) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   x2/ 90.*\(1. - x2/132.*\(1. - x2/182.*\(1. - x2/240.*\(1. -) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   x2/306.\)\)\)\)\)\)\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(big\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        z1 = cc + z3 - 1.d0) S
LHL
(        z2 = ss + z3 + 1.d0 - piby2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        z1 = ss) S
LHL
(        z2 = cc) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(bigg\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        z1 = 2.d0*u2 + z1 - pi) S
LHL
(        z2 = 2.d0 - z2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      f0 = l - u2*ome - e*z1) S
LHL
(      f1 = ome + e*z2) S
LHL
(      f2 = .5d0*e*\(u2-z1\)) S
LHL
(      f3 = e/6.d0*\(1.d0-z2\)) S
LHL
(      z1 = f0/f1) S
LHL
(      z2 = f0/\(f2*z1+f1\)) S
LHL
(      mco_kep = sign*\( u2 + f0/\(\(f3*z1+f2\)*z2+f1\) \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_SINE.FOR    \(ErikSoft  17 April 1997\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates sin and cos of an angle X \(in radians\).) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(x,sx,cx\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sx) S
0.000 0.000 0.000 FG
(,cx) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(pi) S
0.000 0.000 0.000 FG
(,twopi) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      pi = 3.141592653589793d0) S
EndPage
EndDSCPage
EndSheet

%%Page: 11 11
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 721 def
/PageNumber 11 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
720 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      twopi = 2.d0 * pi) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(x) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        x = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(x,twopi\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        x = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(x,twopi\) + twopi) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      cx = ) S
0.855 0.439 0.839 FG
(cos) S
0.000 0.000 0.000 FG
(\(x\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(x) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(pi\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        sx = -) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(1.d0 - cx*cx\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        sx =  ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(1.d0 - cx*cx\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_SINH.FOR    \(ErikSoft  12 June 1998\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates sinh and cosh of an angle X \(in radians\)) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sinh) S
0.000 0.000 0.000 FG
( \(x,sx,cx\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sx) S
0.000 0.000 0.000 FG
(,cx) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      sx = ) S
0.855 0.439 0.839 FG
(sinh) S
0.000 0.000 0.000 FG
(\(x\)) S
LHL
(      cx = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
( \(1.d0 + sx*sx\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_AEI.FOR    \(ErikSoft   31 January 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Creates a filename and opens a file to store aei information for an object.) S
LHL
(c) S
( ) S
(The filename is based on the name of the object.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_aei) S
0.000 0.000 0.000 FG
( \(id,extn,unitnum,header,lenhead,mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(unitnum) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(lenhead) S
0.000 0.000 0.000 FG
(,lmem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*4 extn) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*250 header) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 mem\(NMESS\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 12 12
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 793 def
/PageNumber 12 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
792 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(itmp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nsub) S
0.000 0.000 0.000 FG
(,lim\(2,4\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(logical) S
0.000 0.000 0.000 FG
( test) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*1 bad\(5\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*250 filename) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(data) S
0.000 0.000 0.000 FG
( bad/ ) S
0.737 0.561 0.561 FG
('*') S
0.000 0.000 0.000 FG
(, ) S
0.737 0.561 0.561 FG
('/') S
0.000 0.000 0.000 FG
(, ) S
0.737 0.561 0.561 FG
('.') S
0.000 0.000 0.000 FG
(, ) S
0.737 0.561 0.561 FG
(':') S
0.000 0.000 0.000 FG
(, ) S
0.737 0.561 0.561 FG
('&') S
0.000 0.000 0.000 FG
(/) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Create a filename based on the object's name) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(8,id,nsub,lim\)) S
LHL
(      itmp = ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
(\(7,lim\(2,1\)-lim\(1,1\)\)) S
LHL
(      filename\(1:itmp+1\) = id\(1:itmp+1\)) S
LHL
(      filename\(itmp+2:itmp+5\) = extn) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = itmp + 6, 250) S
LHL
(        filename\(j:j\) = ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check for inappropriate characters in the filename) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, itmp + 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 5) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(filename\(j:j\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(bad\(k\)\) filename\(j:j\) = ) S
0.737 0.561 0.561 FG
('_') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If the file exists already, give a warning and don't overwrite it) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=filename, exist=test\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(test\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(/,3a\)') S
0.000 0.000 0.000 FG
(\) mem\(121\)\(1:lmem\(121\)\),mem\(87\)\(1:lmem\(87\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    filename\(1:80\)) S
LHL
(        unitnum = -1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(unitnum, file=filename, status=) S
0.737 0.561 0.561 FG
('new') S
0.000 0.000 0.000 FG
(\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(unitnum, ) S
0.737 0.561 0.561 FG
('\(/,30x,a8,//,a\)') S
0.000 0.000 0.000 FG
(\) id,header\(1:lenhead\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_C2FL.FOR    \(ErikSoft   5 June 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(CHARACTER*8 ASCII string into a REAL*8 variable.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. X will lie in the range -1.e112 < X < 1.e112) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_c2fl) S
0.000 0.000 0.000 FG
( \(c\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 mio_c2fl) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,mio_c2re) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ex) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      x = mio_c2re \(c\(1:8\), 0.d0, 1.d0, 7\)) S
LHL
(      x = x * 2.d0 - 1.d0) S
EndPage
EndDSCPage
EndSheet

%%Page: 13 13
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 865 def
/PageNumber 13 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
864 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ex = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(ichar) S
0.000 0.000 0.000 FG
(\(c\(8:8\)\) + 256, 256\) - 32 - 112) S
LHL
(      mio_c2fl = x * \(10.d0**) S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(ex\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_C2RE.FOR    \(ErikSoft   5 June 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts an ASCII string into a REAL*8 variable X, where XMIN <= X < XMAX,) S
LHL
(c) S
( ) S
(using the new format compression:) S
LHL
(c) S
LHL
(c) S
( ) S
(X is assumed to be made up of NCHAR base-224 digits, each one represented) S
LHL
(c) S
( ) S
(by a character in the ASCII string. Each digit is given by the ASCII) S
LHL
(c) S
( ) S
(number of the character minus 32.) S
LHL
(c) S
( ) S
(The first 32 ASCII characters \(CTRL characters\) are avoided, because they) S
LHL
(c) S
( ) S
(cause problems when using some operating systems.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_c2re) S
0.000 0.000 0.000 FG
( \(c,xmin,xmax,nchar\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( nchar) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(xmin) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(xmax) S
0.000 0.000 0.000 FG
(,mio_c2re) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 y) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      y = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nchar, 1, -1) S
LHL
(        y = \(y + ) S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(ichar) S
0.000 0.000 0.000 FG
(\(c\(j:j\)\) + 256, 256\) - 32\)\) / 224.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      mio_c2re = xmin  +  y * \(xmax - xmin\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_ERR.FOR    \(ErikSoft  6 December 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Writes out an error message and terminates Mercury.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(unit,s1,ls1,s2,ls2,s3,ls3,s4,ls4\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(unit) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ls1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ls2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ls3) S
0.000 0.000 0.000 FG
(,ls4) S
EndPage
EndDSCPage
EndSheet

%%Page: 14 14
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 937 def
/PageNumber 14 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
936 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(s1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s3) S
0.000 0.000 0.000 FG
(,s4) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.737 0.561 0.561 FG
(' ERROR: Programme terminated.') S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(unit,) S
0.737 0.561 0.561 FG
('\(/,3a,/,2a\)') S
0.000 0.000 0.000 FG
(\) s1\(1:ls1\),s2\(1:ls2\),s3\(1:ls3\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,s4\(1:ls4\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(stop) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_H2B.FOR    \(ErikSoft   2 November 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts coordinates with respect to the central body to barycentric) S
LHL
(c) S
( ) S
(coordinates.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2b) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,h,m,xh,vh,x,v\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,nbig) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),v\(3,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mtot) S
0.000 0.000 0.000 FG
(,temp) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      mtot = 0.d0) S
LHL
(      x\(1,1\) = 0.d0) S
LHL
(      x\(2,1\) = 0.d0) S
LHL
(      x\(3,1\) = 0.d0) S
LHL
(      v\(1,1\) = 0.d0) S
LHL
(      v\(2,1\) = 0.d0) S
LHL
(      v\(3,1\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate coordinates and velocities of the central body) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        mtot = mtot  +  m\(j\)) S
LHL
(        x\(1,1\) = x\(1,1\)  +  m\(j\) * xh\(1,j\)) S
LHL
(        x\(2,1\) = x\(2,1\)  +  m\(j\) * xh\(2,j\)) S
LHL
(        x\(3,1\) = x\(3,1\)  +  m\(j\) * xh\(3,j\)) S
LHL
(        v\(1,1\) = v\(1,1\)  +  m\(j\) * vh\(1,j\)) S
LHL
(        v\(2,1\) = v\(2,1\)  +  m\(j\) * vh\(2,j\)) S
LHL
(        v\(3,1\) = v\(3,1\)  +  m\(j\) * vh\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      temp = -1.d0 / \(mtot + m\(1\)\)) S
LHL
(      x\(1,1\) = temp * x\(1,1\)) S
LHL
(      x\(2,1\) = temp * x\(2,1\)) S
LHL
(      x\(3,1\) = temp * x\(3,1\)) S
LHL
(      v\(1,1\) = temp * v\(1,1\)) S
LHL
(      v\(2,1\) = temp * v\(2,1\)) S
LHL
(      v\(3,1\) = temp * v\(3,1\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate the barycentric coordinates and velocities) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        x\(1,j\) = xh\(1,j\) + x\(1,1\)) S
LHL
(        x\(2,j\) = xh\(2,j\) + x\(2,1\)) S
LHL
(        x\(3,j\) = xh\(3,j\) + x\(3,1\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 15 15
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1009 def
/PageNumber 15 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1008 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        v\(1,j\) = vh\(1,j\) + v\(1,1\)) S
LHL
(        v\(2,j\) = vh\(2,j\) + v\(2,1\)) S
LHL
(        v\(3,j\) = vh\(3,j\) + v\(3,1\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_H2CB.FOR    \(ErikSoft   2 November 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Convert coordinates with respect to the central body to close-binary) S
LHL
(c) S
( ) S
(coordinates.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2cb) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,h,m,xh,vh,x,v\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,nbig) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),v\(3,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(msum) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mvsum) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mbin) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mbin_1) S
0.000 0.000 0.000 FG
(,mtot_1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      msum = 0.d0) S
LHL
(      mvsum\(1\) = 0.d0) S
LHL
(      mvsum\(2\) = 0.d0) S
LHL
(      mvsum\(3\) = 0.d0) S
LHL
(      mbin = m\(1\) + m\(2\)) S
LHL
(      mbin_1 = 1.d0 / mbin) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      x\(1,2\) = xh\(1,2\)) S
LHL
(      x\(2,2\) = xh\(2,2\)) S
LHL
(      x\(3,2\) = xh\(3,2\)) S
LHL
(      temp = m\(1\) * mbin_1) S
LHL
(      v\(1,2\) = temp * vh\(1,2\)) S
LHL
(      v\(2,2\) = temp * vh\(2,2\)) S
LHL
(      v\(3,2\) = temp * vh\(3,2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 3, nbod) S
LHL
(        msum = msum + m\(j\)) S
LHL
(        mvsum\(1\) = mvsum\(1\)  +  m\(j\) * vh\(1,j\)) S
LHL
(        mvsum\(2\) = mvsum\(2\)  +  m\(j\) * vh\(2,j\)) S
LHL
(        mvsum\(3\) = mvsum\(3\)  +  m\(j\) * vh\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      mtot_1 = 1.d0 / \(msum + mbin\)) S
LHL
(      mvsum\(1\) = mtot_1 * \(mvsum\(1\) + m\(2\)*vh\(1,2\)\)) S
LHL
(      mvsum\(2\) = mtot_1 * \(mvsum\(2\) + m\(2\)*vh\(2,2\)\)) S
LHL
(      mvsum\(3\) = mtot_1 * \(mvsum\(3\) + m\(2\)*vh\(3,2\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      temp = m\(2\) * mbin_1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 3, nbod) S
LHL
(        x\(1,j\) = xh\(1,j\)  -  temp * xh\(1,2\)) S
LHL
(        x\(2,j\) = xh\(2,j\)  -  temp * xh\(2,2\)) S
LHL
(        x\(3,j\) = xh\(3,j\)  -  temp * xh\(3,2\)) S
LHL
(        v\(1,j\) = vh\(1,j\)  -  mvsum\(1\)) S
LHL
(        v\(2,j\) = vh\(2,j\)  -  mvsum\(2\)) S
LHL
(        v\(3,j\) = vh\(3,j\)  -  mvsum\(3\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 16 16
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1081 def
/PageNumber 16 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1080 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_H2J.FOR    \(ErikSoft   2 November 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts coordinates with respect to the central body to Jacobi coordinates.) S
LHL
(c) S
( ) S
(Note that the Jacobi coordinates of all small bodies are assumed to be the) S
LHL
(c) S
( ) S
(same as their coordinates with respect to the central body.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2j) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,h,m,xh,vh,x,v\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,nbig) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbig\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbig\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbig\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbig\),v\(3,nbig\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mtot) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mx) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(my) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mz) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mv) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mw) S
0.000 0.000 0.000 FG
(, temp) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
(c) S
LHL
0.000 0.000 0.000 FG
(      mtot = m\(2\)) S
LHL
(      x\(1,2\) = xh\(1,2\)) S
LHL
(      x\(2,2\) = xh\(2,2\)) S
LHL
(      x\(3,2\) = xh\(3,2\)) S
LHL
(      v\(1,2\) = vh\(1,2\)) S
LHL
(      v\(2,2\) = vh\(2,2\)) S
LHL
(      v\(3,2\) = vh\(3,2\)) S
LHL
(      mx = m\(2\) * xh\(1,2\)) S
LHL
(      my = m\(2\) * xh\(2,2\)) S
LHL
(      mz = m\(2\) * xh\(3,2\)) S
LHL
(      mu = m\(2\) * vh\(1,2\)) S
LHL
(      mv = m\(2\) * vh\(2,2\)) S
LHL
(      mw = m\(2\) * vh\(3,2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 3, nbig - 1) S
LHL
(        temp = 1.d0 / \(mtot + m\(1\)\)) S
LHL
(        mtot = mtot + m\(j\)) S
LHL
(        x\(1,j\) = xh\(1,j\)  -  temp * mx) S
LHL
(        x\(2,j\) = xh\(2,j\)  -  temp * my) S
LHL
(        x\(3,j\) = xh\(3,j\)  -  temp * mz) S
LHL
(        v\(1,j\) = vh\(1,j\)  -  temp * mu) S
LHL
(        v\(2,j\) = vh\(2,j\)  -  temp * mv) S
LHL
(        v\(3,j\) = vh\(3,j\)  -  temp * mw) S
LHL
(        mx = mx  +  m\(j\) * xh\(1,j\)) S
LHL
(        my = my  +  m\(j\) * xh\(2,j\)) S
LHL
(        mz = mz  +  m\(j\) * xh\(3,j\)) S
LHL
(        mu = mu  +  m\(j\) * vh\(1,j\)) S
LHL
(        mv = mv  +  m\(j\) * vh\(2,j\)) S
LHL
(        mw = mw  +  m\(j\) * vh\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nbig) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        temp = 1.d0 / \(mtot + m\(1\)\)) S
LHL
(        x\(1,nbig\) = xh\(1,nbig\)  -  temp * mx) S
LHL
(        x\(2,nbig\) = xh\(2,nbig\)  -  temp * my) S
LHL
(        x\(3,nbig\) = xh\(3,nbig\)  -  temp * mz) S
LHL
(        v\(1,nbig\) = vh\(1,nbig\)  -  temp * mu) S
LHL
(        v\(2,nbig\) = vh\(2,nbig\)  -  temp * mv) S
LHL
(        v\(3,nbig\) = vh\(3,nbig\)  -  temp * mw) S
EndPage
EndDSCPage
EndSheet

%%Page: 17 17
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1153 def
/PageNumber 17 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1152 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(        x\(1,j\) = xh\(1,j\)) S
LHL
(        x\(2,j\) = xh\(2,j\)) S
LHL
(        x\(3,j\) = xh\(3,j\)) S
LHL
(        v\(1,j\) = vh\(1,j\)) S
LHL
(        v\(2,j\) = vh\(2,j\)) S
LHL
(        v\(3,j\) = vh\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_IDEN.FOR    \(ErikSoft   2 November 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Makes a new copy of a set of coordinates.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,h,m,xh,vh,x,v\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,nbig) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),vh\(3,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nbod) S
LHL
(        x\(1,j\) = xh\(1,j\)) S
LHL
(        x\(2,j\) = xh\(2,j\)) S
LHL
(        x\(3,j\) = xh\(3,j\)) S
LHL
(        v\(1,j\) = vh\(1,j\)) S
LHL
(        v\(2,j\) = vh\(2,j\)) S
LHL
(        v\(3,j\) = vh\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_X2EL.FOR    \(ErikSoft  20 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates Keplerian orbital elements given relative coordinates and) S
LHL
(c) S
( ) S
(velocities, and GM = G times the sum of the masses.) S
LHL
(c) S
LHL
(c) S
( ) S
(The elements are: q = perihelion distance) S
LHL
(c) S
(                   ) S
(e = eccentricity) S
LHL
(c) S
(                   ) S
(i = inclination) S
LHL
(c) S
(                   ) S
(p = longitude of perihelion \(NOT argument of perihelion!!\)) S
LHL
(c) S
(                   ) S
(n = longitude of ascending node) S
LHL
(c) S
(                   ) S
(l = mean anomaly \(or mean longitude if e < 1.e-8\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 18 18
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1225 def
/PageNumber 18 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1224 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2el) S
0.000 0.000 0.000 FG
( \(gm,x,y,z,u,v,w,q,e,i,p,n,l\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(gm) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(n) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(,w) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(hx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hz) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rv) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(,true) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ci) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(to) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(bige) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(cf) S
0.000 0.000 0.000 FG
(,ce) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      hx = y * w  -  z * v) S
LHL
(      hy = z * u  -  x * w) S
LHL
(      hz = x * v  -  y * u) S
LHL
(      h2 = hx*hx + hy*hy + hz*hz) S
LHL
(      v2 = u * u  +  v * v  +  w * w) S
LHL
(      rv = x * u  +  y * v  +  z * w) S
LHL
(      r = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(x*x + y*y + z*z\)) S
LHL
(      h = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(h2\)) S
LHL
(      s = h2 / gm) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Inclination and node) S
LHL
0.000 0.000 0.000 FG
(      ci = hz / h) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(ci\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        i = ) S
0.855 0.439 0.839 FG
(acos) S
0.000 0.000 0.000 FG
( \(ci\)) S
LHL
(        n = ) S
0.855 0.439 0.839 FG
(atan2) S
0.000 0.000 0.000 FG
( \(hx,-hy\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(n) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) n = n + TWOPI) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ci) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) i = 0.d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ci) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) i = PI) S
LHL
(        n = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Eccentricity and perihelion distance) S
LHL
0.000 0.000 0.000 FG
(      temp = 1.d0  +  s * \(v2 / gm  -  2.d0 / r\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(temp) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        e = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        e = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
( \(temp\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      q = s / \(1.d0 + e\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(True longitude) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(hy) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        to = -hx/hy) S
LHL
(        temp = \(1.d0 - ci\) * to) S
LHL
(        tmp2 = to * to) S
LHL
(        true = ) S
0.855 0.439 0.839 FG
(atan2) S
0.000 0.000 0.000 FG
(\(\(y*\(1.d0+tmp2*ci\)-x*temp\),\(x*\(tmp2+ci\)-y*temp\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        true = ) S
0.855 0.439 0.839 FG
(atan2) S
0.000 0.000 0.000 FG
(\(y * ci, x\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ci) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) true = true + PI) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(3.d-8\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        p = 0.d0) S
LHL
(        l = true) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ce = \(v2*r - gm\) / \(e*gm\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Mean anomaly for ellipse) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(ce\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(1\) ce = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\(1.d0,ce\)) S
LHL
(          bige = ) S
0.855 0.439 0.839 FG
(acos) S
0.000 0.000 0.000 FG
(\(ce\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(rv) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) bige = TWOPI - bige) S
LHL
(          l = bige - e*) S
0.855 0.439 0.839 FG
(sin) S
0.000 0.000 0.000 FG
(\(bige\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 19 19
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1297 def
/PageNumber 19 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1296 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Mean anomaly for hyperbola) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ce) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) ce = 1.d0) S
LHL
(          bige = ) S
0.855 0.439 0.839 FG
(log) S
0.000 0.000 0.000 FG
(\( ce + ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(ce*ce-1.d0\) \)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(rv) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) bige = - bige) S
LHL
(          l = e*) S
0.855 0.439 0.839 FG
(sinh) S
0.000 0.000 0.000 FG
(\(bige\) - bige) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Longitude of perihelion) S
LHL
0.000 0.000 0.000 FG
(        cf = \(s - r\) / \(e*r\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(cf\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(1\) cf = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\(1.d0,cf\)) S
LHL
(        f = ) S
0.855 0.439 0.839 FG
(acos) S
0.000 0.000 0.000 FG
(\(cf\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(rv) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) f = TWOPI - f) S
LHL
(        p = true - f) S
LHL
(        p = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \(p + TWOPI + TWOPI, TWOPI\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) l = l + TWOPI) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(TWOPI) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) l = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \(l, TWOPI\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_JD_Y.FOR    \(ErikSoft  2 June 1998\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts from Julian day number to Julian/Gregorian Calendar dates, assuming) S
LHL
(c) S
( ) S
(the dates are those used by the English calendar.) S
LHL
(c) S
LHL
(c) S
( ) S
(Algorithm taken from `Practical Astronomy with your calculator' \(1988\)) S
LHL
(c) S
( ) S
(by Peter Duffett-Smith, 3rd edition, C.U.P.) S
LHL
(c) S
LHL
(c) S
( ) S
(Algorithm for negative Julian day numbers \(Julian calendar assumed\) by) S
LHL
(c) S
( ) S
(J. E. Chambers.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. The output date is with respect to the Julian Calendar on or before) S
LHL
(c) S
( ) S
(===  4th October 1582, and with respect to the Gregorian Calendar on or ) S
LHL
(c) S
(      ) S
(after 15th October 1582.) S
LHL
(c) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_jd_y) S
0.000 0.000 0.000 FG
( \(jd0,year,month,day\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jd0) S
0.000 0.000 0.000 FG
(,day) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(year) S
0.000 0.000 0.000 FG
(,month) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,g) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jd) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,z) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(jd0) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(50) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      jd = jd0 + 0.5d0) S
LHL
(      i = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(jd\)\), jd \)) S
LHL
(      f = jd - 1.d0*i) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If on or after 15th October 1582) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(2299160\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        temp = \(1.d0*i-1867216.25d0\) / 36524.25d0) S
EndPage
EndDSCPage
EndSheet

%%Page: 20 20
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1369 def
/PageNumber 20 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1368 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        a = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
(        temp = .25d0 * a) S
LHL
(        b = i + 1 + a - ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        b = i) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      c = b + 1524) S
LHL
(      temp = \(1.d0*c - 122.1d0\) / 365.25d0) S
LHL
(      d = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
(      temp = 365.25d0 * d) S
LHL
(      e = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
(      temp = \(c-e\) / 30.6001d0) S
LHL
(      g = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      temp = 30.6001d0 * g) S
LHL
(      day = 1.d0*\(c-e\) + f - 1.d0*) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(g) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(13\) month = g - 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(g) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(13\) month = g - 13) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(month) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(2\) year = d - 4716) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(month) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(2\) year = d - 4715) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(day) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(32\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        day = day - 32) S
LHL
(        month = month + 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(month) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(12\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        month = month - 12) S
LHL
(        year = year + 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.373 0.620 0.627 FG
(  50) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Algorithm for negative Julian day numbers \(Duffett-Smith won't work\)) S
LHL
0.000 0.000 0.000 FG
(      x = jd0 - 2232101.5) S
LHL
(      f = x - ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\(x\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(f) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) f = f + 1.d0) S
LHL
(      y = ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(x,1461.d0\) + 1461.d0\)) S
LHL
(      z = ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(y,365.25d0\)\)) S
LHL
(      month = ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
(\(\(z + 0.5d0\) / 30.61d0\)) S
LHL
(      day = ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\(z + 1.5d0 - 30.61d0*) S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(month\)\) + f) S
LHL
(      month = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(month + 2, 12\) + 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      year = 1399 + ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
( \(x / 365.25d0\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(x) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) year = year - 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(month) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(3\) year = year + 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_SPL.FOR    \(ErikSoft  14 November 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Given a character string STRING, of length LEN bytes, the routine finds ) S
LHL
(c) S
( ) S
(the beginnings and ends of NSUB substrings present in the original, and ) S
LHL
(c) S
( ) S
(delimited by spaces. The positions of the extremes of each substring are ) S
LHL
(c) S
( ) S
(returned in the array DELIMIT.) S
LHL
(c) S
( ) S
(Substrings are those which are separated by spaces or the = symbol.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 21 21
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1441 def
/PageNumber 21 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1440 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(len,string,nsub,delimit\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(len) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nsub) S
0.000 0.000 0.000 FG
(,delimit\(2,100\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*1 string\(len\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,k) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*1 c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      nsub = 0) S
LHL
(      j = 0) S
LHL
(      c = ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
LHL
(      delimit\(1,1\) = -1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Find the start of string) S
LHL
0.373 0.620 0.627 FG
(  10) S
0.000 0.000 0.000 FG
(  j = j + 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(len\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(99) S
0.000 0.000 0.000 FG
LHL
(      c = string\(j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
(' ') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('=') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Find the end of string) S
LHL
0.000 0.000 0.000 FG
(      k = j) S
LHL
0.373 0.620 0.627 FG
(  20) S
0.000 0.000 0.000 FG
(  k = k + 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(k) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(len\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(30) S
0.000 0.000 0.000 FG
LHL
(      c = string\(k\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c) S
0.627 0.125 0.941 FG
(.ne.) S
0.737 0.561 0.561 FG
(' ') S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(c) S
0.627 0.125 0.941 FG
(.ne.) S
0.737 0.561 0.561 FG
('=') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(20) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Store details for this string) S
LHL
0.373 0.620 0.627 FG
(  30) S
0.000 0.000 0.000 FG
(  nsub = nsub + 1) S
LHL
(      delimit\(1,nsub\) = j) S
LHL
(      delimit\(2,nsub\) = k - 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(k) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(len\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        j = k) S
LHL
(        ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.373 0.620 0.627 FG
(  99) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(*) S
(**********************************************************************) S
LHL
(c) S
(                    ) S
(ORBEL_FHYBRID.F) S
LHL
(*) S
(**********************************************************************) S
LHL
(*) S
(     ) S
(PURPOSE:  Solves Kepler's eqn. for hyperbola using hybrid approach.  ) S
LHL
(*) S
LHL
(*) S
(             ) S
(Input:) S
LHL
(*) S
(                           ) S
(e ==> eccentricity anomaly. \(real scalar\)) S
LHL
(*) S
(                           ) S
(n ==> hyperbola mean anomaly. \(real scalar\)) S
LHL
(*) S
(             ) S
(Returns:) S
LHL
(*) S
(               ) S
(orbel_fhybrid ==>  eccentric anomaly. \(real scalar\)) S
LHL
(*) S
LHL
(*) S
(     ) S
(ALGORITHM: For abs\(N\) < 0.636*ecc -0.6 , use FLON ) S
LHL
(*) S
16 W
(For larger N, uses FGET) S
LHL
(*) S
(     ) S
(REMARKS: ) S
LHL
(*) S
(     ) S
(AUTHOR: M. Duncan ) S
LHL
(*) S
(     ) S
(DATE WRITTEN: May 26,1992.) S
LHL
(*) S
(     ) S
(REVISIONS: ) S
LHL
(*) S
(     ) S
(REVISIONS: 2/26/93 hfl) S
LHL
(*) S
(**********************************************************************) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(orbel_fhybrid) S
0.000 0.000 0.000 FG
(\(e,n\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 22 22
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1513 def
/PageNumber 22 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1512 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs Only: ) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,n) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 abn) S
LHL
(        ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(orbel_flon) S
0.000 0.000 0.000 FG
(,orbel_fget) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
(abn = n) S
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(n) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0.d0\) abn = -abn) S
PHL
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(abn ) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
( 0.636d0*e -0.6d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
10 W
(orbel_fhybrid = orbel_flon\(e,n\)) S
LHL
8 W
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
LHL
10 W
(orbel_fhybrid = orbel_fget\(e,n\)) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
(   ) S
PHL
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(  ) S
0.698 0.133 0.133 FG
(! ) S
(orbel_fhybrid) S
LHL
(c) S
(-------------------------------------------------------------------) S
LHL
(c) S
LHL
(*) S
(**********************************************************************) S
LHL
(c) S
(                    ) S
(ORBEL_FGET.F) S
LHL
(*) S
(**********************************************************************) S
LHL
(*) S
(     ) S
(PURPOSE:  Solves Kepler's eqn. for hyperbola using hybrid approach.  ) S
LHL
(*) S
LHL
(*) S
(             ) S
(Input:) S
LHL
(*) S
(                           ) S
(e ==> eccentricity anomaly. \(real scalar\)) S
LHL
(*) S
(                        ) S
(capn ==> hyperbola mean anomaly. \(real scalar\)) S
LHL
(*) S
(             ) S
(Returns:) S
LHL
(*) S
(                  ) S
(orbel_fget ==>  eccentric anomaly. \(real scalar\)) S
LHL
(*) S
LHL
(*) S
(     ) S
(ALGORITHM: Based on pp. 70-72 of Fitzpatrick's book "Principles of) S
LHL
(*) S
(           ) S
(Cel. Mech. ".  Quartic convergence from Danby's book.) S
LHL
(*) S
(     ) S
(REMARKS: ) S
LHL
(*) S
(     ) S
(AUTHOR: M. Duncan ) S
LHL
(*) S
(     ) S
(DATE WRITTEN: May 11, 1992.) S
LHL
(*) S
(     ) S
(REVISIONS: 2/26/93 hfl) S
LHL
(c) S
(     ) S
(Modified by JEC) S
LHL
(*) S
(**********************************************************************) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(orbel_fget) S
0.000 0.000 0.000 FG
(\(e,capn\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs Only: ) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,capn) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,IMAX) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tmp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(shx) S
0.000 0.000 0.000 FG
(,chx) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(esh) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ech) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fpp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fppp) S
0.000 0.000 0.000 FG
(,dx) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(IMAX) S
0.000 0.000 0.000 FG
( = 10\)) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Function to solve "Kepler's eqn" for F \(here called) S
LHL
(c) S
( ) S
(x\) for given e and CAPN. ) S
PHL
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(  ) S
(begin with a guess proposed by Danby) S
1 W
LHL
0.000 0.000 0.000 FG
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\( capn ) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
( 0.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(tmp = -2.d0*capn/e + 1.8d0) S
LHL
11 W
(x = -) S
0.855 0.439 0.839 FG
(log) S
0.000 0.000 0.000 FG
(\(tmp\)) S
LHL
8 W
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
11 W
(tmp = +2.d0*capn/e + 1.8d0) S
LHL
11 W
(x = ) S
0.855 0.439 0.839 FG
(log) S
0.000 0.000 0.000 FG
(\( tmp\)) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
EndPage
EndDSCPage
EndSheet

%%Page: 23 23
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1585 def
/PageNumber 23 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1584 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
8 W
(orbel_fget = x) S
PHL
LHL
8 W
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 1,IMAX) S
LHL
10 W
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sinh) S
0.000 0.000 0.000 FG
( \(x,shx,chx\)) S
LHL
10 W
(esh = e*shx) S
LHL
10 W
(ech = e*chx) S
LHL
10 W
(f = esh - x - capn) S
LHL
0.698 0.133 0.133 FG
(c) S
9 W
(write\(6,*\) 'i,x,f : ',i,x,f) S
LHL
0.000 0.000 0.000 FG
10 W
(fp = ech - 1.d0  ) S
LHL
10 W
(fpp = esh ) S
LHL
10 W
(fppp = ech ) S
LHL
10 W
(dx = -f/fp) S
LHL
10 W
(dx = -f/\(fp + dx*fpp/2.d0\)) S
LHL
10 W
(dx = -f/\(fp + dx*fpp/2.d0 + dx*dx*fppp/6.d0\)) S
LHL
10 W
(orbel_fget = x + dx) S
LHL
0.698 0.133 0.133 FG
(c) S
(   ) S
(If we have converged here there's no point in going on) S
LHL
0.000 0.000 0.000 FG
10 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dx\) ) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
( TINY\) ) S
0.627 0.125 0.941 FG
(RETURN) S
0.000 0.000 0.000 FG
LHL
10 W
(x = orbel_fget) S
LHL
8 W
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
3 W
PHL
LHL
8 W
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
(\(6,*\) ) S
0.737 0.561 0.561 FG
('FGET : RETURNING WITHOUT COMPLETE CONVERGENCE') S
0.000 0.000 0.000 FG
( ) S
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(   ) S
0.698 0.133 0.133 FG
(! ) S
(orbel_fget) S
LHL
(c) S
(------------------------------------------------------------------) S
LHL
(c) S
LHL
(*) S
(**********************************************************************) S
LHL
(c) S
(                    ) S
(ORBEL_FLON.F) S
LHL
(*) S
(**********************************************************************) S
LHL
(*) S
(     ) S
(PURPOSE:  Solves Kepler's eqn. for hyperbola using hybrid approach.  ) S
LHL
(*) S
LHL
(*) S
(             ) S
(Input:) S
LHL
(*) S
(                           ) S
(e ==> eccentricity anomaly. \(real scalar\)) S
LHL
(*) S
(                        ) S
(capn ==> hyperbola mean anomaly. \(real scalar\)) S
LHL
(*) S
(             ) S
(Returns:) S
LHL
(*) S
(                  ) S
(orbel_flon ==>  eccentric anomaly. \(real scalar\)) S
LHL
(*) S
LHL
(*) S
(     ) S
(ALGORITHM: Uses power series for N in terms of F and Newton,s method) S
LHL
(*) S
(     ) S
(REMARKS: ONLY GOOD FOR LOW VALUES OF N \(N < 0.636*e -0.6\)) S
LHL
(*) S
(     ) S
(AUTHOR: M. Duncan ) S
LHL
(*) S
(     ) S
(DATE WRITTEN: May 26, 1992.) S
LHL
(*) S
(     ) S
(REVISIONS: ) S
LHL
(*) S
(**********************************************************************) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(orbel_flon) S
0.000 0.000 0.000 FG
(\(e,capn\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs Only: ) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,capn) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(iflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,IMAX) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sq) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(biga) S
0.000 0.000 0.000 FG
(,bigb) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,x2) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fp) S
0.000 0.000 0.000 FG
(,dx) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 diff) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a5) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a7) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a9) S
0.000 0.000 0.000 FG
(,a11) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(b1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b5) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b7) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b9) S
0.000 0.000 0.000 FG
(,b11) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(IMAX) S
0.000 0.000 0.000 FG
( = 10\)) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(a11) S
0.000 0.000 0.000 FG
( = 156.d0,) S
0.722 0.525 0.043 FG
(a9) S
0.000 0.000 0.000 FG
( = 17160.d0,) S
0.722 0.525 0.043 FG
(a7) S
0.000 0.000 0.000 FG
( = 1235520.d0\)) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(a5) S
0.000 0.000 0.000 FG
( = 51891840.d0,) S
0.722 0.525 0.043 FG
(a3) S
0.000 0.000 0.000 FG
( = 1037836800.d0\)) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(b11) S
0.000 0.000 0.000 FG
( = 11.d0*a11,) S
0.722 0.525 0.043 FG
(b9) S
0.000 0.000 0.000 FG
( = 9.d0*a9,) S
0.722 0.525 0.043 FG
(b7) S
0.000 0.000 0.000 FG
( = 7.d0*a7\)) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(b5) S
0.000 0.000 0.000 FG
( = 5.d0*a5, ) S
0.722 0.525 0.043 FG
(b3) S
0.000 0.000 0.000 FG
( = 3.d0*a3\)) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Function to solve "Kepler's eqn" for F \(here called) S
LHL
(c) S
( ) S
(x\) for given e and CAPN. Only good for smallish CAPN ) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
(iflag = 0) S
EndPage
EndDSCPage
EndSheet

%%Page: 24 24
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1657 def
/PageNumber 24 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1656 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\( capn ) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
( 0.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(iflag = 1) S
LHL
11 W
(capn = -capn) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
(a1 = 6227020800.d0 * \(1.d0 - 1.d0/e\)) S
LHL
8 W
(a0 = -6227020800.d0*capn/e) S
LHL
8 W
(b1 = a1) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(  ) S
(Set iflag nonzero if capn < 0., in which case solve for -capn) S
LHL
(c) S
(  ) S
(and change the sign of the final answer for F.) S
LHL
(c) S
(  ) S
(Begin with a reasonable guess based on solving the cubic for small F) S
1 W
PHL
0.000 0.000 0.000 FG
PHL
LHL
8 W
(a = 6.d0*\(e-1.d0\)/e) S
LHL
8 W
(b = -6.d0*capn/e) S
LHL
8 W
(sq = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(0.25*b*b +a*a*a/27.d0\)) S
LHL
8 W
(biga = \(-0.5*b + sq\)**0.3333333333333333d0) S
LHL
8 W
(bigb = -\(+0.5*b + sq\)**0.3333333333333333d0) S
LHL
8 W
(x = biga + bigb) S
LHL
0.698 0.133 0.133 FG
(c) S
7 W
(write\(6,*\) 'cubic = ',x**3 +a*x +b) S
LHL
0.000 0.000 0.000 FG
8 W
(orbel_flon = x) S
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(If capn is tiny \(or zero\) no need to go further than cubic even for) S
LHL
(c) S
( ) S
(e =1.) S
LHL
0.000 0.000 0.000 FG
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\( capn ) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
( TINY\) ) S
0.627 0.125 0.941 FG
(go to) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 1,IMAX) S
LHL
10 W
(x2 = x*x) S
LHL
10 W
(f = a0 +x*\(a1+x2*\(a3+x2*\(a5+x2*\(a7+x2*\(a9+x2*\(a11+x2\)\)\)\)\)\)) S
LHL
10 W
(fp = b1 +x2*\(b3+x2*\(b5+x2*\(b7+x2*\(b9+x2*\(b11 + 13.d0*x2\)\)\)\)\)   ) S
LHL
10 W
(dx = -f/fp) S
LHL
0.698 0.133 0.133 FG
(c) S
9 W
(write\(6,*\) 'i,dx,x,f : ') S
LHL
(c) S
9 W
(write\(6,432\) i,dx,x,f) S
LHL
0.373 0.620 0.627 FG
(432) S
0.000 0.000 0.000 FG
7 W
0.627 0.125 0.941 FG
(format) S
0.000 0.000 0.000 FG
(\(1x,i3,3\(2x,1p1e22.15\)\)) S
LHL
10 W
(orbel_flon = x + dx) S
LHL
0.698 0.133 0.133 FG
(c) S
(   ) S
(If we have converged here there's no point in going on) S
LHL
0.000 0.000 0.000 FG
10 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dx\) ) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
( TINY\) ) S
0.627 0.125 0.941 FG
(go to) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
LHL
10 W
(x = orbel_flon) S
LHL
8 W
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
3 W
PHL
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Abnormal return here - we've gone thru the loop ) S
LHL
(c) S
( ) S
(IMAX times without convergence) S
LHL
0.000 0.000 0.000 FG
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflag ) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
( 1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(orbel_flon = -orbel_flon) S
LHL
11 W
(capn = -capn) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
(\(6,*\) ) S
0.737 0.561 0.561 FG
('FLON : RETURNING WITHOUT COMPLETE CONVERGENCE') S
0.000 0.000 0.000 FG
( ) S
LHL
10 W
(diff = e*) S
0.855 0.439 0.839 FG
(sinh) S
0.000 0.000 0.000 FG
(\(orbel_flon\) - orbel_flon - capn) S
LHL
10 W
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
(\(6,*\) ) S
0.737 0.561 0.561 FG
('N, F, ecc*sinh\(F\) - F - N : ') S
0.000 0.000 0.000 FG
LHL
10 W
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
(\(6,*\) capn,orbel_flon,diff) S
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(  ) S
(Normal return here, but check if capn was originally negative) S
LHL
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
5 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflag ) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
( 1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(orbel_flon = -orbel_flon) S
LHL
11 W
(capn = -capn) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(     ) S
0.698 0.133 0.133 FG
(! ) S
(orbel_flon) S
LHL
(c) S
(------------------------------------------------------------------) S
LHL
(c) S
LHL
(*) S
(**********************************************************************) S
LHL
(c) S
(                    ) S
(ORBEL_ZGET.F) S
LHL
(*) S
(**********************************************************************) S
LHL
(*) S
(     ) S
(PURPOSE:  Solves the equivalent of Kepler's eqn. for a parabola ) S
LHL
(*) S
(          ) S
(given Q \(Fitz. notation.\)) S
LHL
(*) S
LHL
(*) S
(             ) S
(Input:) S
LHL
(*) S
(                           ) S
(q ==>  parabola mean anomaly. \(real scalar\)) S
LHL
(*) S
(             ) S
(Returns:) S
LHL
(*) S
(                  ) S
(orbel_zget ==>  eccentric anomaly. \(real scalar\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 25 25
/Lines 1776 def
/PageCount 25 def
1 BeginSheet
BeginDSCPage
/LineNumber 1729 def
/PageNumber 25 def
/HeaderLinesLeft[
 [/h0 (close6.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1728 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(*) S
LHL
(*) S
(     ) S
(ALGORITHM: p. 70-72 of Fitzpatrick's book "Princ. of Cel. Mech.") S
LHL
(*) S
(     ) S
(REMARKS: For a parabola we can solve analytically.) S
LHL
(*) S
(     ) S
(AUTHOR: M. Duncan ) S
LHL
(*) S
(     ) S
(DATE WRITTEN: May 11, 1992.) S
LHL
(*) S
(     ) S
(REVISIONS: May 27 - corrected it for negative Q and use power) S
LHL
(*) S
13 W
(series for small Q.) S
LHL
(*) S
(**********************************************************************) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(orbel_zget) S
0.000 0.000 0.000 FG
(\(q\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs Only: ) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 q) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( iflag) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,tmp) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
(iflag = 0) S
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(q) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
10 W
(iflag = 1) S
LHL
10 W
(q = -q) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(q) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1.d-3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(orbel_zget = q*\(1.d0 - \(q*q/3.d0\)*\(1.d0 -q*q\)\)) S
LHL
8 W
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
11 W
(x = 0.5d0*\(3.d0*q + ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(9.d0*\(q**2\) +4.d0\)\)) S
LHL
11 W
(tmp = x**\(1.d0/3.d0\)) S
LHL
11 W
(orbel_zget = tmp - 1.d0/tmp) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflag ) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(           orbel_zget = -orbel_zget) S
LHL
11 W
(q = -q) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
8 W
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(    ) S
0.698 0.133 0.133 FG
(! ) S
(orbel_zget) S
LHL
(c) S
(----------------------------------------------------------------------) S
PHL
0.000 0.000 0.000 FG
PHL
PHL
EndPage
EndDSCPage
EndSheet

%%Trailer
%%Pages: 25

EndDoc

%%EOF
