%!PS-Adobe-3.0
%%Title: mercury6_2.for
%%Creator: ps-print v7.3.4
%%For: Joshua Wallace
%%CreationDate: 14:53:15 Nov 03 2015
%%Orientation: Portrait
%%DocumentNeededResources: font Times-Roman Times-Italic
%%+ font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%DocumentSuppliedResources: procset PSPrintUserDefinedPrologue-joshuajw 0 0
%%DocumentMedia: Letter 612 792 0 () ()
%%PageOrder: Ascend
%%Pages: (atend)
%%Requirements:
%%EndComments
%%BeginDefaults
%%PageMedia: Letter
%%EndDefaults

%%BeginProlog

/languagelevel where{pop}{/languagelevel 1 def}ifelse
/ErrorMessage  1 def

% === BEGIN ps-print prologue 0
% version: 6.0

% Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
%   Free Software Foundation, Inc.

% This file is part of GNU Emacs.

% GNU Emacs is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.

% GNU Emacs is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.

% You should have received a copy of the GNU General Public License
% along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

% As a special exception, the copyright holders of this module give
% you permission to include the module in a Postscript file generated
% by Emacs or other free software together with the result of
% converting text to be printed, regardless of the license terms of
% that text, and to use under terms of your choice the page images
% resulting from formatting said combination.  If you modify this
% module, you may extend this exception to your version of the module
% but you are not obligated to do so.  If you do not wish to do so,
% delete this exception statement from your version.


%%BeginProcSet: ErrorHandler
% Downloaded Error Break-page handler
% Adapted from:
%     PostScript Language Program Design,
%     Adobe Systems Incorporated.
%     Appendix A, pages 217-219

/ps$brkpage where{pop}
{
 /ps$brkpage 64 dict def
 ps$brkpage begin
  /tx 0 def/ty 0 def/toy 0 def/tox 0 def
  /prnt{
   dup type/stringtype ne{=string cvs}if
   dup length 6 mul
   /tx exch def/ty 10 def
   currentpoint/toy exch def/tox exch def
   1 setgray newpath
   tox toy 2 sub moveto
   0 ty rlineto tx 0 rlineto
   0 ty neg rlineto
   closepath fill
   tox toy moveto 0 setgray show
  }bind def
  /nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
  /=={/cp 0 def typeprint nl}def
  /typeprint{dup type dup currentdict exch known{exec}{unknowntype}ifelse}readonly def
  /lmargin 72 def
  /rmargin 72 def
  /tprint{
   dup length cp add rmargin gt{nl/cp 0 def}if
   dup length cp add/cp exch def
   prnt
  }readonly def
  /cvsprint{=string cvs tprint( )tprint}readonly def
  /unknowntype{exch pop cvlit(??)tprint cvsprint}readonly def
  /integertype{cvsprint}readonly def
  /realtype{cvsprint}readonly def
  /booleantype{cvsprint}readonly def
  /operatortype{(//)tprint cvsprint}readonly def
  /marktype{pop(-mark-)tprint}readonly def
  /dicttype{pop(-dictionary-)tprint}readonly def
  /nulltype{pop(-null-)tprint}readonly def
  /filetype{pop(-filestream-)tprint}readonly def
  /savetype{pop(-savelevel-)tprint}readonly def
  /fonttype{pop(-fontid-)tprint}readonly def
  /nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
  /stringtype{
   dup rcheck
   {(\()tprint tprint(\))tprint}
   {pop(-string-)tprint}ifelse}readonly def
  /arraytype{
   dup rcheck
   {dup xcheck
    {({)tprint{typeprint}forall(})tprint}
    {([)tprint{typeprint}forall(])tprint}ifelse}
   {pop(-array-)tprint}ifelse}readonly def
  /packedarraytype{
   dup rcheck
   {dup xcheck
    {({)tprint{typeprint}forall(})tprint}
    {([)tprint{typeprint}forall(])tprint}ifelse}
   {pop(-packedarray-)tprint}ifelse}readonly def
  /courier/Courier findfont 10 scalefont def
  /OLDhandleerror errordict/handleerror get def
 end %ps$brkpage

 /handleerror{
  systemdict begin $error begin ps$brkpage begin
  newerror
  {/newerror false store vmstatus pop pop 0 ne{grestoreall}if
   initgraphics
   ErrorMessage 1 and 0 ne{ % print on paper
    courier setfont lmargin 720 moveto
    (# ERROR: )prnt errorname prnt nl
    (# OFFENDING COMMAND: )prnt/command load prnt
    $error/ostack known
    {nl nl(# STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if
    $error/errorinfo known
    {nl nl(# ERRORINFO:)prnt nl nl $error/errorinfo get aload length{==}repeat}if
    systemdict/showpage get exec}if
   ErrorMessage 2 and 0 ne{ % send back to printing system
    (\%\%[ Error: )print errorname =print
    (; OffendingCommand: )print/command load =print
    $error/errorinfo known
    {(; ErrorInfo:)print $error/errorinfo get aload length{( )=print =print}repeat}if
    ( ]\%\%)= flush
    (\%\%[ Rest of job is ignored ]\%\%)= flush}if
   /newerror true store}if
  end end end
  stop
 } % handleerror
 dup 0 systemdict put % replace name by actual dict object
 dup 4 ps$brkpage put % replace name by dict object
 bind readonly

 errordict 3 1 roll put % put proc in errordict as /handleerror
}ifelse
%%EndProcSet


% operators for language level 2 only

(<<)cvn where			% << operator
{pop/BMark(<<)cvn load def}
{/BMark{mark}bind def}ifelse
(>>)cvn where			% >> operator
{pop/EMark(>>)cvn load def}
{/EMark{counttomark 2 idiv dup dict begin{def}repeat pop currentdict end}bind def}ifelse
/setpagedevice where		% setpagedevice
{pop}
{/setpagedevice{pop}bind def}ifelse
/packedarray where		% packedarray
{pop}
{/packedarray{array astore readonly}bind def}ifelse


% device dependent operators

/DefOp{
 dup where{pop pop pop}
 {exch dup where{pop}{pop/pop}ifelse load def}ifelse}def

/duplexmode/setduplexmode DefOp
/tumble/settumble DefOp

% === END ps-print prologue 0

%%BeginResource: procset PSPrintUserDefinedPrologue-joshuajw 0 0


%%EndResource

/LandscapeMode       false def
/UpsideDown          false def
/NumberOfColumns     1 def
/LandscapePageHeight 792.0 def
/PrintPageWidth      498.6141732283465 def
/PrintWidth   498.6141732283465 def
/PrintHeight  643.7029732283465 def
/LeftMargin   56.69291338582677 def
/RightMargin  56.69291338582677 def
/InterColumn  56.69291338582677 def
/BottomMargin 42.51968503937008 def
/TopMargin    42.51968503937008 def
/HeaderOffset 28.346456692913385 def
/HeaderPad    2.4276 def
/FooterOffset 28.346456692913385 def
/FooterPad    0 def
/FooterLines  2 def
/ShowNofN           true def
/SwitchHeader       false def
/PrintOnlyOneHeader false def
/PrintHeader        true def
/PrintHeaderFrame   true def
/HeaderFrameProperties [0.000 0.900 0.400 0.000 0.000 ]def
/PrintFooter        false def
/PrintFooterFrame   true def
/FooterFrameProperties [0.000 0.900 0.400 0.000 0.000 ]def
/LineSpacing      0 def
/ParagraphSpacing 0 def
/LineHeight       8.967500000000001 def
/LinesPerColumn   72 def
/WarnPaperSize    true def
/Zebra            false def
/PrintLineNumber  false def
/SyncLineZebra    false def
/ZebraFollow      0 def
/PrintLineStep    1 def
/PrintLineStart   1 def
/LineNumberColor  [0.000 0.000 0.000] def
/ZebraHeight      3 def
/ZebraColor       0.950 def
/BackgroundColor  [1.000 1.000 1.000] def
/UseSetpagedevice false def

/PageWidth PrintPageWidth LeftMargin add RightMargin add def

/N-Up           1 def
/N-Up-Landscape false def
/N-Up-Border    true def
/N-Up-Lines     1 def
/N-Up-Columns   1 def
/N-Up-Missing   0 def
/N-Up-Margin    28.346456692913385 def
/N-Up-Repeat    N-Up-Lines def
/N-Up-End       N-Up-Columns def
/N-Up-XColumn   PageWidth def
/N-Up-YColumn   0 def
/N-Up-XLine     N-Up-End 1 sub PageWidth mul neg def
/N-Up-YLine     LandscapePageHeight neg def
/N-Up-XStart    0 def
/N-Up-YStart    0 def

% === BEGIN ps-print prologue 1
% version: 6.1

% Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
%   Free Software Foundation, Inc.

% This file is part of GNU Emacs.

% GNU Emacs is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.

% GNU Emacs is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.

% You should have received a copy of the GNU General Public License
% along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

% As a special exception, the copyright holders of this module give
% you permission to include the module in a Postscript file generated
% by Emacs or other free software together with the result of
% converting text to be printed, regardless of the license terms of
% that text, and to use under terms of your choice the page images
% resulting from formatting said combination.  If you modify this
% module, you may extend this exception to your version of the module
% but you are not obligated to do so.  If you do not wish to do so,
% delete this exception statement from your version.


% ISOLatin1Encoding stolen from ps_init.ps in GhostScript 2.6.1.4:
/ISOLatin1Encoding where{pop}{
% -- The ISO Latin-1 encoding vector isn't known, so define it.
% -- The first half is the same as the standard encoding,
% -- except for minus instead of hyphen at code 055.
/ISOLatin1Encoding
StandardEncoding 0 45 getinterval aload pop
    /minus
StandardEncoding 46 82 getinterval aload pop
%*** NOTE: the following are missing in the Adobe documentation,
%*** but appear in the displayed table:
%*** macron at 0225, dieresis at 0230, cedilla at 0233, space at 0240.
% 0200 (128)
    /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
    /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
    /dotlessi/grave/acute/circumflex/tilde/macron/breve/dotaccent
    /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
% 0240 (160)
    /space/exclamdown/cent/sterling
	/currency/yen/brokenbar/section
    /dieresis/copyright/ordfeminine/guillemotleft
	/logicalnot/hyphen/registered/macron
    /degree/plusminus/twosuperior/threesuperior
	/acute/mu/paragraph/periodcentered
    /cedilla/onesuperior/ordmasculine/guillemotright
	/onequarter/onehalf/threequarters/questiondown
% 0300 (192)
    /Agrave/Aacute/Acircumflex/Atilde
	/Adieresis/Aring/AE/Ccedilla
    /Egrave/Eacute/Ecircumflex/Edieresis
	/Igrave/Iacute/Icircumflex/Idieresis
    /Eth/Ntilde/Ograve/Oacute
	/Ocircumflex/Otilde/Odieresis/multiply
    /Oslash/Ugrave/Uacute/Ucircumflex
	/Udieresis/Yacute/Thorn/germandbls
% 0340 (224)
    /agrave/aacute/acircumflex/atilde
	/adieresis/aring/ae/ccedilla
    /egrave/eacute/ecircumflex/edieresis
	/igrave/iacute/icircumflex/idieresis
    /eth/ntilde/ograve/oacute
	/ocircumflex/otilde/odieresis/divide
    /oslash/ugrave/uacute/ucircumflex
	/udieresis/yacute/thorn/ydieresis
256 packedarray def
}ifelse

/reencodeFontISO{ %def
  dup
  length 12 add dict	% Make a new font (a new dict the same size
			% as the old one) with room for our new symbols.

  begin			% Make the new font the current dictionary.

    % Copy each of the symbols from the old dictionary
    % to the new one except for the font ID.
    {1 index/FID ne{def}{pop pop}ifelse}forall

    % Override the encoding with the ISOLatin1 encoding.
    currentdict/FontType get 0 ne{/Encoding ISOLatin1Encoding def}if

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.

%          ^    (x2 y2)
%          |       |
%          |       v
%          |  +----+ - -
%          |  |    |   ^
%          |  |    |   | Ascent (usually > 0)
%          |  |    |   |
% (0 0) -> +--+----+-------->
%             |    |   |
%             |    |   v Descent (usually < 0)
% (x1 y1) --> +----+ - -

    currentdict/FontType get 0 ne
    {/FontBBox load aload pop			% -- x1 y1 x2 y2
     FontMatrix transform/Ascent  exch def pop
     FontMatrix transform/Descent exch def pop}
    {/PrimaryFont FDepVector 0 get def
     PrimaryFont/FontBBox get aload pop
     PrimaryFont/FontMatrix get transform/Ascent exch def pop
     PrimaryFont/FontMatrix get transform/Descent exch def pop}ifelse

    /FontHeight Ascent Descent sub def	% use `sub' because descent < 0

    % Define these in case they're not in the FontInfo
    % (also, here they're easier to get to).
    /UnderlinePosition  Descent 0.70 mul def
    /OverlinePosition   Descent UnderlinePosition sub Ascent add def
    /StrikeoutPosition  Ascent 0.30 mul def
    /LineThickness      FontHeight 0.05 mul def
    /Xshadow            FontHeight  0.08 mul def
    /Yshadow            FontHeight -0.09 mul def
    /SpaceBackground    Descent neg UnderlinePosition add def
    /XBox               Descent neg def
    /YBox               LineThickness 0.7 mul def

    currentdict		% Leave the new font on the stack
    end			% Stop using the font as the current dictionary.
    definefont		% Put the font into the font dictionary
    pop			% Discard the returned font.
}bind def

% Font definition
/DefFont{findfont exch scalefont reencodeFontISO}def

% Font selection
/F{
  findfont
  dup/Ascent            get/Ascent            exch def
  dup/Descent           get/Descent           exch def
  dup/FontHeight        get/FontHeight        exch def
  dup/UnderlinePosition get/UnderlinePosition exch def
  dup/OverlinePosition  get/OverlinePosition  exch def
  dup/StrikeoutPosition get/StrikeoutPosition exch def
  dup/LineThickness     get/LineThickness     exch def
  dup/Xshadow           get/Xshadow           exch def
  dup/Yshadow           get/Yshadow           exch def
  dup/SpaceBackground   get/SpaceBackground   exch def
  dup/XBox              get/XBox              exch def
  dup/YBox              get/YBox              exch def
  setfont
}def

/FG/setrgbcolor load def

/bg false def
/BG{
  dup/bg exch def
  {[4 1 roll]}
  {[1.0 1.0 1.0]}
  ifelse
  /bgcolor exch def
}def

%  B    width    C
%   +-----------+
%               | Ascent  (usually > 0)
% A +           +
%               | Descent (usually < 0)
%   +-----------+
%  E    width    D

/dobackground{				% width --
  currentpoint				% -- width x y
  gsave
    newpath
    moveto				% A (x y)
    0 Ascent rmoveto			% B
    dup 0 rlineto			% C
    0 Descent Ascent sub rlineto	% D
    neg 0 rlineto			% E
    closepath
    FillBgColor
  grestore
}def

/eolbg{					% dobackground until right margin
  PrintWidth				% -- x-eol
  currentpoint pop			% -- cur-x
  sub					% -- width until eol
  dobackground
}def

/LineHS LineHeight LineSpacing add def
/ParagraphHS LineHeight ParagraphSpacing add def
/PSL{/h exch def bg{eolbg}if  0  currentpoint exch pop h sub  moveto}def
/PLN{PrintLineNumber{doLineNumber}if}def

/SL{LineHS PSL isLineStep pop}def	% Soft Linefeed

/PHL{ParagraphHS PSL PLN}def		% Paragraph Hard Linefeed
/LHL{LineHS PSL PLN}def			% Hard Linefeed

% Some debug
/dcp{currentpoint exch 40 string cvs print(, )print =}def
/dp{print 2 copy  exch 40 string cvs print(, )print =}def

/W{
  ( )stringwidth	% Get the width of a space in the current font.
  pop			% Discard the Y component.
  mul			% Multiply the width of a space
			% by the number of spaces to plot
  bg{dup dobackground}if
  0 rmoveto
}def

/Effect          0 def
/EffectUnderline false def
/EffectStrikeout false def
/EffectOverline  false def
/EffectShadow    false def
/EffectBox       false def
/EffectOutline   false def

% effect: 1  - underline  2   - strikeout  4  - overline
%         8  - shadow     16  - box        32 - outline
/EF{
  /Effect exch def
  /EffectUnderline Effect 1  and 0 ne def
  /EffectStrikeout Effect 2  and 0 ne def
  /EffectOverline  Effect 4  and 0 ne def
  /EffectShadow    Effect 8  and 0 ne def
  /EffectBox       Effect 16 and 0 ne def
  /EffectOutline   Effect 32 and 0 ne def
}def

% stack:  string  |-  --
/S{
  /xx currentpoint dup Descent add/yy exch def
  Ascent add/YY exch def def
  dup stringwidth pop xx add/XX exch def
  EffectShadow{
    /yy yy Yshadow add def
    /XX XX Xshadow add def
  }if
  bg{
    true
    EffectBox
      {SpaceBackground doBox}
      {xx yy XX YY doRect}
    ifelse
  }if						% background
  EffectBox      {false 0 doBox}if		% box
  EffectShadow   {dup doShadow}if		% shadow
  EffectOutline
    {true doOutline}				% outline
    {show}					% normal text
  ifelse
  EffectUnderline{UnderlinePosition Hline}if	% underline
  EffectStrikeout{StrikeoutPosition Hline}if	% strikeout
  EffectOverline {OverlinePosition  Hline}if	% overline
}bind def

% stack:  position  |-  --
/Hline{
  currentpoint exch pop add dup
  gsave
  newpath
  xx exch moveto
  XX exch lineto
  closepath
  LineThickness setlinewidth stroke
  grestore
}bind def

% stack:  fill-or-not delta  |-  --
/doBox{
  /dd exch def
  xx XBox sub dd sub yy YBox sub dd sub
  XX XBox add dd add YY YBox add dd add
  doRect
}bind def

% stack:  fill-or-not lower-x lower-y upper-x upper-y  |-  --
/doRect{
  /rYY exch def
  /rXX exch def
  /ryy exch def
  /rxx exch def
  gsave
  newpath
  rXX rYY moveto
  rxx rYY lineto
  rxx ryy lineto
  rXX ryy lineto
  closepath
  % top of stack: fill-or-not
  {FillBgColor}
  {LineThickness setlinewidth stroke}ifelse
  grestore
}bind def

% stack:  string  |-  --
/doShadow{
  gsave
  Xshadow Yshadow rmoveto
  false doOutline
  grestore
}bind def

/st 1 string def

% stack:  string fill-or-not  |-  --
/doOutline{
  /-fillp- exch def
  /-ox- currentpoint/-oy- exch def def
  gsave
  LineThickness setlinewidth
  {st 0 3 -1 roll put
   st dup true charpath
   -fillp- {gsave FillBgColor grestore}if
   stroke stringwidth
   -oy- add/-oy- exch def
   -ox- add/-ox- exch def
   -ox- -oy- moveto
  }forall
  grestore
  -ox- -oy- moveto
}bind def

% stack:  --
/FillBgColor{bgcolor aload pop setrgbcolor fill}bind def

% stack:  -- |- boolean
/isLineStep{
  SyncLineZebra
  {PLScounter 0 gt						% or zebra
   {/PLScounter PLScounter 1 sub def PLScounter 0 eq}
   {false}ifelse
   PrintLineStep 1 gt
   {/PrintLineStep PrintLineStep 1 sub def}
   {/PrintLineStep ZebraHeight def
    /PLScounter PrintLineStart def}ifelse}
  {LineNumber PrintLineStart sub PrintLineStep mod 0 eq}ifelse	% or line step
}def

% stack:  --
/doLineNumber{
  /LineNumber where
  {pop
   isLineStep			% or line step
   LineNumber Lines ge or	% or last line
   {currentfont
    gsave
    LineNumberColor SetColor
    /L0 findfont setfont
    LineNumber Lines ge
    {(end      )}
    {LineNumber 6 string cvs(      )strcat}ifelse
    dup stringwidth pop neg 0 rmoveto
    show
    grestore
    setfont}if
    /LineNumber LineNumber 1 add def
  }if
}def

% stack: color-specifier |- --
/SetColor{dup type/realtype eq{setgray}{aload pop setrgbcolor}ifelse}def

% stack: --
/printZebra{
  gsave
  ZebraColor SetColor
  /double-zebra ZebraHeight ZebraHeight add def
  /yiter double-zebra LineHS mul neg def
  /xiter PrintWidth InterColumn add def
  /zebra-line LinesPrinted def
  NumberOfColumns{LinesPerColumn doColumnZebra xiter 0 rmoveto}repeat
  grestore
}def

% stack:  lines-per-column |- --
/doColumnZebra{
  /lpc exch def
  gsave
  ZebraFollow 1 and 0 ne{
    /H ZebraHeight zebra-line ZebraHeight mod sub def
    /lpc lpc H sub def
    zebra-line double-zebra mod ZebraHeight lt
    {H doZebra	% "black" stripe followed by a "white" stripe
     /lpc lpc ZebraHeight sub def
     H ZebraHeight add}
    {H}ifelse	% "white" stripe
    LineHS mul neg 0 exch rmoveto
    /zebra-line zebra-line LinesPerColumn add def
  }if
  /zspacing 0 def
  lpc dup double-zebra idiv{ZebraHeight doZebra 0 yiter rmoveto}repeat
  double-zebra mod dup 0 le{pop}
  {dup ZebraHeight gt
   {pop ZebraHeight}
   {/zspacing LineSpacing def
    ZebraFollow 2 and 0 ne{pop ZebraHeight}if}ifelse
   doZebra}ifelse
  grestore
}def

% stack:  zebra-height (in lines) |- --
/doZebra{
  /zh exch 0.05 sub LineHS mul zspacing sub def
  gsave
  0 LineHeight 0.65 mul rmoveto
  PrintWidth 0 rlineto
  0 zh neg rlineto
  PrintWidth neg 0 rlineto
  0 zh rlineto
  fill
  grestore
}def

% stack: --
/printBackground{
  /BackgroundColor where{
    /LHg LineHeight 0.65 mul def
    /PHg PrintHeight LHg add def
    pop gsave BackgroundColor SetColor
    NumberOfColumns{
     gsave
     0 LHg rmoveto
     PrintWidth 0 rlineto
     0 PHg neg rlineto
     PrintWidth neg 0 rlineto
     0 PHg rlineto
     fill
     grestore
     PrintWidth InterColumn add 0 rmoveto
    }repeat
    grestore
  }if
}def

% tx ty rotation xscale yscale xpos ypos BeginBackImage
/BeginBackImage{
  /-save-image- save def
  /showpage{}def
  translate
  scale
  rotate
  translate
}def

/EndBackImage{-save-image- restore}def

% string fontsize fontname rotation gray xpos ypos ShowBackText
/ShowBackText{
  gsave
  translate
  setgray
  rotate
  findfont exch dup/-offset- exch -0.25 mul def scalefont setfont
  0 -offset- moveto
  /-saveLineThickness- LineThickness def
  /LineThickness 1 def
  false doOutline
  /LineThickness -saveLineThickness- def
  grestore
}def

/SetPageSize{
  BMark/PageSize[PageWidth LandscapePageHeight LandscapeMode{exch}if]EMark setpagedevice
}def

/BeginDoc{
  % ---- Remember space width of the normal text font `f0'.
  /SpaceWidth/f0 findfont setfont( )stringwidth pop def
  % ---- save the state of the document (useful for ghostscript!)
  /docState save def
  % ---- [andrewi] set PageSize based on chosen dimensions
  UseSetpagedevice{
   WarnPaperSize{SetPageSize}{mark{SetPageSize}stopped cleartomark}ifelse
  }if
  /ColumnWidth PrintWidth InterColumn add def
  % ---- define where  printing will start
  /f0 F					% this installs Ascent
  /PrintStartY PrintHeight Ascent sub def
  /ColumnIndex 1 def
  /N-Up-Counter N-Up-End 1 sub def
  /PLScounter PrintLineStart def
}def

/EndDoc{
  % ---- restore the state of the document (useful for ghostscript!)
  docState restore
}def

/BeginDSCPage{
  % ---- when 1st column, save the state of the page
  ColumnIndex 1 eq{/pageState save def}if
  % ---- save the state of the column
  /columnState save def
}def

/PrintHeaderWidth PrintOnlyOneHeader{PrintPageWidth}{PrintWidth}ifelse def

/BeginPage{
  /LinesPrinted exch def
  % ---- when 1st column, print all background effects
  ColumnIndex 1 eq{
    0 PrintStartY moveto		% move to where printing will start
    printBackground
    Zebra{printZebra}if
    printGlobalBackground
    printLocalBackground
  }if
  PrintOnlyOneHeader{ColumnIndex 1 eq}{true}ifelse
  dup PrintHeader and{
    PrintHeaderFrame{HeaderFrame}if
    HeaderText
  }if
  PrintFooter and{
    PrintFooterFrame{FooterFrame}if
    FooterText
  }if
  0 PrintStartY moveto			% move to where printing will start
  /LineNumber where
  {pop
   SyncLineZebra
   {/H PageNumber 1 sub NumberOfColumns mul ColumnIndex 1 sub add
       LinesPerColumn mul ZebraHeight mod def
    /PLScounter H PrintLineStart ge{0}{PrintLineStart H sub}ifelse def
    /PrintLineStep ZebraHeight H sub def}if}if
  PLN
}def

/EndPage{bg{eolbg}if}def

/EndDSCPage{
  ColumnIndex NumberOfColumns eq{
    % ---- restore the state of the page
    pageState restore
    /ColumnIndex 1 def
    % ---- N-up printing
    N-Up 1 gt{
      N-Up-Counter 0 gt
      {% ---- Next page on same row
	/N-Up-Counter N-Up-Counter 1 sub def
	N-Up-XColumn N-Up-YColumn}
      {% ---- Next page on next line
	/N-Up-Counter N-Up-End 1 sub def
	N-Up-XLine N-Up-YLine}ifelse
      translate
    }if
  }{ % else
    % ---- restore the state of the current column
    columnState restore
    % ---- and translate to the next column
    ColumnWidth 0 translate
    /ColumnIndex ColumnIndex 1 add def
  }ifelse
}def

/TextStart{
  LeftMargin BottomMargin
  PrintFooter{
    FooterPad add
    FooterLines FooterLineHeight mul add
    FooterPad add
    FooterOffset add}if
}def

% stack: number-of-pages-per-sheet |- --
/BeginSheet{
  /sheetState save def
  /pages-per-sheet exch def

  % ---- translate to bottom-right corner of Portrait page
  LandscapeMode{
    LandscapePageHeight 0 translate
    90 rotate
  }if
  % ---- [jack] Kludge: my ghostscript window is 21x27.7 instead of 21x29.7
  /JackGhostscript where{pop 1 27.7 29.7 div scale}if
  UpsideDown{PageWidth LandscapePageHeight translate 180 rotate}if
  % ---- N-Up printing
  N-Up 1 gt{
    % ---- landscape
    N-Up-Landscape{
      PageWidth 0 translate
      90 rotate
    }if
    N-Up-Margin dup translate
    % ---- scale
    LandscapeMode{
      /HH PageWidth def
      /WW LandscapePageHeight def
    }{
      /HH LandscapePageHeight def
      /WW PageWidth def
    }ifelse
    /xx 0 def
    N-Up-Landscape{
      /ww WW WW mul N-Up-Lines HH mul div def
      /cc HH N-Up-Columns N-Up-Missing add div def
      ww cc gt{/xx WW def/WW cc ww div WW mul def/xx xx WW sub def}if
    }{
      /hh HH N-Up-Columns N-Up-Missing add div def
      /cc HH N-Up-Lines div def
      hh cc gt{/xx WW def/WW cc hh div WW mul def/xx xx WW sub def}if
    }ifelse
    WW N-Up-Margin sub N-Up-Margin sub
    N-Up-Landscape
    {N-Up-Lines div HH}
    {N-Up-Columns N-Up-Missing add div WW}ifelse
    div dup scale
    LandscapeMode{/yy 0 def}{/yy xx def/xx 0 def}ifelse
    xx N-Up-Repeat 1 sub LandscapePageHeight mul yy add translate
    % ---- go to start position in page matrix
    N-Up-XStart N-Up-Missing 0.5 mul
    LandscapeMode
    {LandscapePageHeight mul N-Up-YStart add}
    {PageWidth mul add N-Up-YStart}ifelse
    translate
  }if
  % ---- translate to lower left corner of TEXT
  TextStart translate

  % ---- N-up printing
  N-Up 1 gt N-Up-Border and pages-per-sheet 0 gt and{
    % ---- page border
    gsave
    0 setgray
    TextStart exch neg exch neg moveto
    N-Up-Repeat
    {N-Up-End
     {gsave
      PageWidth 0 rlineto
      0 LandscapePageHeight rlineto
      PageWidth neg 0 rlineto
      closepath stroke
      grestore
      /pages-per-sheet pages-per-sheet 1 sub def
      pages-per-sheet 0 le{exit}if
      N-Up-XColumn N-Up-YColumn rmoveto
     }repeat
     pages-per-sheet 0 le{exit}if
     N-Up-XLine N-Up-XColumn sub N-Up-YLine rmoveto
    }repeat
    grestore
  }if
}def

/EndSheet{
  showpage
  sheetState restore
}def

/SetHeaderLines{			% nb-lines --
  /HeaderLines exch def
  % ---- bottom up
  HeaderPad
  HeaderLines 1 sub HeaderLineHeight mul add
  HeaderTitleLineHeight add
  HeaderPad add
  /HeaderHeight exch def
}def

/SetFooterLines{			% nb-lines --
  /FooterLines exch def
  % ---- bottom up
  FooterPad
  FooterLines FooterLineHeight mul add
  FooterPad add
  /FooterHeight exch def
}def

% |---------|
% |  tm     |
% |---------|
% |  header |
% |-+-------| <-- (x y)
% |  ho     |
% |---------|
% |  text   |
% |---------|
% |  fo     |
% |---------|
% |  footer |
% |-+-------| <-- (0 0)
% |  bm     |
% |---------|

% -- |- x y
/HeaderFrameStart{0  PrintHeight HeaderOffset add}def
/FooterFrameStart{0  FooterHeight FooterOffset add neg}def

/doFramePath{
  /h exch def
  PrintHeaderWidth	0	rlineto
  0			h	rlineto
  PrintHeaderWidth neg	0	rlineto
  0			h neg	rlineto
}def

/HeaderFramePath{HeaderHeight doFramePath}def
/FooterFramePath{FooterHeight doFramePath}def

% /path-fun /start-fun vector-property doFrame
/doFrame{
  /vecFrame exch def
  /startFrame exch load def
  /pathFrame exch load def
  gsave
    vecFrame 2 get setlinewidth				% frame border width
    % ---- do the shadow of the next rectangle
    startFrame moveto
    1 -1 rmoveto
    pathFrame
    vecFrame 4 get SetColor fill			% frame shadow color
    % ---- do the next rectangle ...
    startFrame moveto
    pathFrame
    gsave vecFrame 1 get SetColor fill grestore		% frame background
    gsave vecFrame 3 get SetColor stroke grestore	% frame border color
  grestore
}def

/HeaderFrame{/HeaderFramePath /HeaderFrameStart HeaderFrameProperties doFrame}def
/FooterFrame{/FooterFramePath /FooterFrameStart FooterFrameProperties doFrame}def

/HeaderStart{
  HeaderFrameStart
  exch HeaderPad add exch	% horizontal pad
  % ---- bottom up
  HeaderPad add			% vertical   pad
  HeaderDescent sub
  HeaderLineHeight HeaderLines 1 sub mul add
}def

/FooterStart{
  FooterFrameStart
  exch FooterPad add exch	% horizontal pad
  % ---- bottom up
  FooterPad add			% vertical   pad
  FooterDescent sub
  FooterLineHeight FooterLines 1 sub mul add
}def

/HeaderClip{HeaderFrameStart moveto HeaderFramePath clip}def
/FooterClip{FooterFrameStart moveto FooterFramePath clip}def

/strcat{
  dup length 3 -1 roll dup length dup 4 -1 roll add string dup
  0 5 -1 roll putinterval
  dup 4 2 roll exch putinterval
}def

/pagenumberstring{
  PageNumber 32 string cvs
  ShowNofN{(/)strcat PageCount 32 string cvs strcat}if
}def

% lines is-right HeaderOrFooterTextLines
/HeaderOrFooterTextLines{
  /is_right exch def
  HFStart moveto
  { % ---- process the lines
   aload pop
   exch F
   gsave
    dup xcheck{exec}if
    is_right{
     dup stringwidth pop
     PrintHeaderWidth exch sub HFPad HFPad add sub 0 rmoveto
    }if
    HFColor SetColor
    show
   grestore
   0 HFLineHeight neg rmoveto
  }forall
}def

% right-lines left-lines /start lineheight pad fore-color HeaderOrFooterText
/HeaderOrFooterText{
  /HFColor exch def
  /HFPad exch def
  /HFLineHeight exch def
  /HFStart exch load def

  % -- rightLines leftLines -- at stack

  % ---- hack: `PN 1 and'  ==  `PN 2 modulo'
  % ---- if even page number and duplex, then exchange left and right
  PageNumber 1 and 0 eq SwitchHeader and{exch}if

  % ---- process the left lines
  false HeaderOrFooterTextLines

  % ---- process the right lines
  true HeaderOrFooterTextLines
}def

/HeaderText{
  gsave HeaderClip
  HeaderLinesRight HeaderLinesLeft
  /HeaderStart HeaderLineHeight HeaderPad
  HeaderFrameProperties 0 get
  HeaderOrFooterText
  grestore
}def

/FooterText{
  gsave FooterClip
  FooterLinesRight FooterLinesLeft
  /FooterStart FooterLineHeight FooterPad
  FooterFrameProperties 0 get
  HeaderOrFooterText
  grestore
}def

/ReportFontInfo{
  2 copy
  /t0 3 1 roll DefFont
  /t0 F
  /lh FontHeight def
  /sw( )stringwidth pop def
  /aw(01234567890abcdefghijklmnopqrstuvwxyz)dup length exch
  stringwidth pop exch div def
  /t1 12/Helvetica-Oblique DefFont
  /t1 F
  gsave
    (languagelevel = )show
    languagelevel 32 string cvs show
  grestore
  0 FontHeight neg rmoveto
  gsave
    (For )show
    128 string cvs show
    ( )show
    32 string cvs show
    ( point, the line height is )show
    lh 32 string cvs show
    (, the space width is )show
    sw 32 string cvs show
    (,)show
  grestore
  0 FontHeight neg rmoveto
  gsave
    (and a crude estimate of average character width is )show
    aw 32 string cvs show
    (.)show
  grestore
  0 FontHeight neg rmoveto
}def

% cm to point
/cm{72 mul 2.54 div}def

/ReportAllFontInfo{
  % key = font name   value = font dictionary
  FontDirectory{pop 10 exch ReportFontInfo}forall
}def

% 3 cm 20 cm moveto  10/Courier ReportFontInfo  showpage
% 3 cm 20 cm moveto  ReportAllFontInfo          showpage

% === END ps-print prologue 1

/printGlobalBackground{
}def
/printLocalBackground{
}def

%%EndProlog

%%BeginSetup

%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-BoldOblique
%%IncludeResource: font Helvetica
%%IncludeResource: font Helvetica-Bold
/h0 14(Helvetica-Bold)cvn DefFont
/h1 12(Helvetica)cvn DefFont
/L0 6(Times-Italic)cvn DefFont
/H0 12(Helvetica)cvn DefFont


% ---- These lines must be kept together because...

/h0 F
/HeaderTitleLineHeight FontHeight def

/h1 F
/HeaderLineHeight FontHeight def
/HeaderDescent    Descent def

/H0 F
/FooterLineHeight FontHeight def
/FooterDescent    Descent def

% ---- ...because `F' has a side-effect on `FontHeight' and `Descent'

/f0 8.5(Courier)cvn DefFont
/f1 8.5(Courier-Bold)cvn DefFont
/f2 8.5(Courier-Oblique)cvn DefFont
/f3 8.5(Courier-BoldOblique)cvn DefFont
/SpaceWidthRatio 0.600000 def

%%BeginFeature: *ManualFeed False
BMark /ManualFeed false EMark setpagedevice
%%EndFeature

%%%% Start of Mule Section

/Latin1Encoding {	% newname fontname  |  font
    findfont dup length dict begin
	{ 1 index /FID ne { def } { pop pop } ifelse } forall
        /Encoding ISOLatin1Encoding def
	currentdict
    end
    definefont
} bind def

%% Redefine fonts for multiple charsets.
/ReDefFont {		     % fontname encoding fdepvector size  |  -
  20 dict begin
  3 index findfont {
    1 index /FID ne 2 index /UniqueID ne and {def} {pop pop} ifelse
  } forall
  /FontType 0 def
  /FMapType 3 def
  /EscChar 0 def
  % FontMatrix ::= [ size 0 0 size 0 0 ]
  /FontMatrix exch [ exch dup 0 exch 0 exch 0 0 ] def
  /FDepVector exch def
  /Encoding exch def
  currentdict
  end			% fontname dic
  definefont pop
} bind def

/EscChar 0 def

%% End of Mule Section

/F00 /Courier findfont def
/ETOP0 256 array def
0 1 255 { ETOP0 exch 0 put } for
ETOP0 0 0 put
/VTOP0 [F00] def
/ETOP1 256 array def
0 1 255 { ETOP1 exch 0 put } for
ETOP1 0 0 put
/VTOP1 [F00] def
/ETOP2 256 array def
0 1 255 { ETOP2 exch 0 put } for
ETOP2 0 0 put
/VTOP2 [F00] def
/ETOP3 256 array def
0 1 255 { ETOP3 exch 0 put } for
ETOP3 0 0 put
/VTOP3 [F00] def
/Vh0 [ VTOP1 aload pop ] def

Vh0 0 /Helvetica-Bold-latin1 /Helvetica-Bold Latin1Encoding put
/h0 ETOP1 Vh0 14.000000 ReDefFont
/Vh1 [ VTOP0 aload pop ] def

Vh1 0 /Helvetica-latin1 /Helvetica Latin1Encoding put
/h1 ETOP0 Vh1 12.000000 ReDefFont
/VH0 [ VTOP0 aload pop ] def

VH0 0 /Helvetica-latin1 /Helvetica Latin1Encoding put
/H0 ETOP0 VH0 12.000000 ReDefFont
/Vf0 [ VTOP0 aload pop ] def

Vf0 0 /Courier-latin1 /Courier Latin1Encoding put
/f0 ETOP0 Vf0 8.500000 ReDefFont
/Vf1 [ VTOP1 aload pop ] def

Vf1 0 /Courier-Bold-latin1 /Courier-Bold Latin1Encoding put
/f1 ETOP1 Vf1 8.500000 ReDefFont
/Vf2 [ VTOP2 aload pop ] def

Vf2 0 /Courier-Oblique-latin1 /Courier-Oblique Latin1Encoding put
/f2 ETOP2 Vf2 8.500000 ReDefFont
/Vf3 [ VTOP3 aload pop ] def

Vf3 0 /Courier-BoldOblique-latin1 /Courier-BoldOblique Latin1Encoding put
/f3 ETOP3 Vf3 8.500000 ReDefFont
BeginDoc
%%EndSetup

%%Page: 1 1
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1 def
/PageNumber 1 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
0 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MERCURY6_1.FOR    \(ErikSoft   3 May 2002\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Mercury is a general-purpose N-body integration package for problems in) S
LHL
(c) S
( ) S
(celestial mechanics.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
( ) S
(This package contains some subroutines taken from the Swift integration ) S
LHL
(c) S
( ) S
(package by H.F.Levison and M.J.Duncan \(1994\) Icarus, vol 108, pp18.) S
LHL
(c) S
( ) S
(Routines taken from Swift have names beginning with `drift' or `orbel'.) S
LHL
(c) S
LHL
(c) S
( ) S
(The standard symplectic \(MVS\) algorithm is described in J.Widsom and) S
LHL
(c) S
( ) S
(M.Holman \(1991\) Astronomical Journal, vol 102, pp1528.) S
LHL
(c) S
LHL
(c) S
( ) S
(The hybrid symplectic algorithm is described in J.E.Chambers \(1999\)) S
LHL
(c) S
( ) S
(Monthly Notices of the RAS, vol 304, pp793.) S
LHL
(c) S
LHL
(c) S
( ) S
(RADAU is described in E.Everhart \(1985\) in ``The Dynamics of Comets:) S
LHL
(c) S
( ) S
(Their Origin and Evolution'' p185-202, eds. A.Carusi & G.B.Valsecchi,) S
LHL
(c) S
( ) S
(pub. Reidel.) S
LHL
(c) S
LHL
(c) S
( ) S
(The Bulirsch-Stoer algorithms are described in W.H.Press et al. \(1992\)) S
LHL
(c) S
( ) S
(``Numerical Recipes in Fortran'', pub. Cambridge.) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Variables:) S
LHL
(c) S
( ) S
(---------) S
LHL
(c) S
(  ) S
(M      = mass \(in solar masses\)) S
LHL
(c) S
(  ) S
(XH     = coordinates \(x,y,z\) with respect to the central body \(AU\)) S
LHL
(c) S
(  ) S
(VH     = velocities \(vx,vy,vz\) with respect to the central body \(AU/day\)) S
LHL
(c) S
(  ) S
(S      = spin angular momentum \(solar masses AU^2/day\)) S
LHL
(c) S
(  ) S
(RHO    = physical density \(g/cm^3\)) S
LHL
(c) S
(  ) S
(RCEH   = close-encounter limit \(Hill radii\)) S
LHL
(c) S
(  ) S
(STAT   = status \(0 => alive, <>0 => to be removed\)) S
LHL
(c) S
(  ) S
(ID     = name of the object \(8 characters\)) S
LHL
(c) S
(  ) S
(CE     = close encounter status) S
LHL
(c) S
(  ) S
(NGF    = \(1-3\) cometary non-gravitational \(jet\) force parameters) S
LHL
(c) S
(   ) S
("     =  \(4\)  beta parameter for radiation pressure and P-R drag) S
LHL
(c) S
(  ) S
(EPOCH  = epoch of orbit \(days\)) S
LHL
(c) S
(  ) S
(NBOD  = current number of bodies \(INCLUDING the central object\)) S
LHL
(c) S
(  ) S
(NBIG  =    "       "    " big bodies \(ones that perturb everything else\)) S
LHL
(c) S
(  ) S
(TIME  = current epoch \(days\)) S
LHL
(c) S
(  ) S
(TOUT  = time of next output evaluation) S
LHL
(c) S
(  ) S
(TDUMP = time of next data dump) S
LHL
(c) S
(  ) S
(TFUN  = time of next periodic effect \(e.g. next check for ejections\)) S
LHL
(c) S
(  ) S
(H     = current integration timestep \(days\)) S
LHL
(c) S
(  ) S
(EN\(1\) = initial energy of the system) S
LHL
(c) S
(  ) S
(" \(2\) = current    "    "  "    ") S
LHL
(c) S
(  ) S
(" \(3\) = energy change due to collisions, ejections etc.) S
LHL
(c) S
(  ) S
(AM\(1,2,3\) = as above but for angular momentum) S
LHL
(c) S
LHL
(c) S
( ) S
(Integration Parameters :) S
LHL
(c) S
( ) S
(----------------------) S
LHL
(c) S
(  ) S
(ALGOR = 1  ->  Mixed-variable symplectic) S
LHL
(c) S
(          ) S
(2  ->  Bulirsch-Stoer integrator) S
LHL
(c) S
(          ) S
(3  ->         "           "      \(conservative systems only\)) S
LHL
(c) S
(          ) S
(4  ->  RA15 `radau' integrator) S
LHL
(c) S
(          ) S
(10 ->  Hybrid MVS/BS \(democratic-heliocentric coords\)) S
LHL
(c) S
(          ) S
(11 ->  Close-binary hybrid \(close-binary coords\)) S
LHL
(c) S
(          ) S
(12 ->  Wide-binary hybrid \(wide-binary coords\)) S
LHL
(c) S
LHL
(c) S
( ) S
(TSTART = epoch of first required output \(days\)) S
LHL
(c) S
( ) S
(TSTOP  =   "      final required output \( "  \)) S
LHL
(c) S
( ) S
(DTOUT  = data output interval           \( "  \)) S
LHL
(c) S
( ) S
(DTDUMP = data-dump interval             \( "  \)) S
LHL
(c) S
( ) S
(DTFUN  = interval for other periodic effects \(e.g. check for ejections\)) S
LHL
(c) S
(  ) S
(H0    = initial integration timestep \(days\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 2 2
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 73 def
/PageNumber 2 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
72 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(  ) S
(TOL   = Integrator tolerance parameter \(approx. error per timestep\)) S
LHL
(c) S
(  ) S
(RMAX  = heliocentric distance at which objects are considered ejected \(AU\)) S
LHL
(c) S
(  ) S
(RCEN  = radius of central body \(AU\)) S
LHL
(c) S
(  ) S
(JCEN\(1,2,3\) = J2,J4,J6 for central body \(units of RCEN^i for Ji\)) S
LHL
(c) S
LHL
(c) S
( ) S
(Options:) S
LHL
(c) S
(  ) S
(OPT\(1\) = close-encounter option \(0=stop after an encounter, 1=continue\)) S
LHL
(c) S
(  ) S
(OPT\(2\) = collision option \(0=no collisions, 1=merge, 2=merge+fragment\)) S
LHL
(c) S
(  ) S
(OPT\(3\) = time style \(0=days 1=Greg.date 2/3=days/years w/respect to start\)) S
LHL
(c) S
(  ) S
(OPT\(4\) = o/p precision \(1,2,3 = 4,9,15 significant figures\)) S
LHL
(c) S
(  ) S
(OPT\(5\) = < Not used at present >) S
LHL
(c) S
(  ) S
(OPT\(6\) = < Not used at present >) S
LHL
(c) S
(  ) S
(OPT\(7\) = apply post-Newtonian correction? \(0=no, 1=yes\)) S
LHL
(c) S
(  ) S
(OPT\(8\) = apply user-defined force routine mfo_user? \(0=no, 1=yes\)) S
LHL
(c) S
LHL
(c) S
( ) S
(File variables :) S
LHL
(c) S
( ) S
(--------------) S
LHL
(c) S
(  ) S
(OUTFILE  \(1\) = osculating coordinates/velocities and masses) S
LHL
(c) S
(     ) S
("     \(2\) = close encounter details) S
LHL
(c) S
(     ) S
("     \(3\) = information file) S
LHL
(c) S
(  ) S
(DUMPFILE \(1\) = Big-body data) S
LHL
(c) S
(     ) S
("     \(2\) = Small-body data) S
LHL
(c) S
(     ) S
("     \(3\) = integration parameters) S
LHL
(c) S
(     ) S
("     \(4\) = restart file) S
LHL
(c) S
LHL
(c) S
( ) S
(Flags :) S
LHL
(c) S
( ) S
(-----) S
LHL
(c) S
(  ) S
(NGFLAG = do any bodies experience non-grav. forces?) S
LHL
(c) S
(                            ) S
(\( 0 = no non-grav forces\)) S
LHL
(c) S
(                              ) S
(1 = cometary jets only) S
LHL
(c) S
(                              ) S
(2 = radiation pressure/P-R drag only) S
LHL
(c) S
(                              ) S
(3 = both) S
LHL
(c) S
(  ) S
(OPFLAG = integration mode \(-2 = synchronising epochs\)) S
LHL
(c) S
(                             ) S
(-1 = integrating towards start epoch) S
LHL
(c) S
(                              ) S
(0 = main integration, normal output) S
LHL
(c) S
(                              ) S
(1 = main integration, full output) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(NMAX\),lmem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(opflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ndump) S
0.000 0.000 0.000 FG
(,nfun) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,NMAX\),rho\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rceh) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(epoch) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(ngf) S
0.000 0.000 0.000 FG
(\(4,NMAX\),) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,jcen\(3\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(cefac) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstop) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dtout) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(en) S
0.000 0.000 0.000 FG
(\(3\),am\(3\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(\(3\), ) S
0.722 0.525 0.043 FG
(dumpfile) S
0.000 0.000 0.000 FG
(\(4\), mem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(mdt_mvs) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mdt_bs1) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mdt_bs2) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mdt_ra15) S
0.000 0.000 0.000 FG
(, mdt_hy) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(mco_dh2h) S
0.000 0.000 0.000 FG
(,mco_h2dh) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(mco_b2h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mco_h2b) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mco_h2mvs) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mco_mvs2h) S
0.000 0.000 0.000 FG
(,mco_iden) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(data) S
0.000 0.000 0.000 FG
( opt/0,1,1,2,0,1,0,0/) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Get initial conditions and integration parameters) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_in) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,tol,rmax,rcen,jcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,rho,rceh,stat,id,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  epoch,ngf,opt,opflag,ngflag,outfile,dumpfile,lmem,mem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If this is a new integration, integrate all the objects to a common epoch.) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
(  20) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(23,file=outfile\(3\),status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(,access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(20) S
0.000 0.000 0.000 FG
(\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a\)') S
0.000 0.000 0.000 FG
(\) mem\(55\)\(1:lmem\(55\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(55\)\(1:lmem\(55\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_sync) S
0.000 0.000 0.000 FG
( \(time,tstart,h0,tol,jcen,nbod,nbig,m,xh,vh,s,rho,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    rceh,stat,id,epoch,ngf,opt,ngflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a,/\)') S
0.000 0.000 0.000 FG
(\) mem\(56\)\(1:lmem\(56\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(56\)\(1:lmem\(56\)\)) S
LHL
(        opflag = -1) S
EndPage
EndDSCPage
EndSheet

%%Page: 3 3
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 145 def
/PageNumber 3 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
144 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(23\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Main integration) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mal_hcon) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  tol,jcen,rcen,rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rho,rceh,stat,id,ngf,opt,opflag,ngflag,outfile,dumpfile,mem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  lmem,mdt_mvs,mco_h2mvs,mco_mvs2h\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(9\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mal_hcon) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  tol,jcen,rcen,rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rho,rceh,stat,id,ngf,opt,opflag,ngflag,outfile,dumpfile,mem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  lmem,mdt_mvs,mco_iden,mco_iden\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mal_hvar) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  tol,jcen,rcen,rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rho,rceh,stat,id,ngf,opt,opflag,ngflag,outfile,dumpfile,mem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  lmem,mdt_bs1\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mal_hvar) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  tol,jcen,rcen,rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rho,rceh,stat,id,ngf,opt,opflag,ngflag,outfile,dumpfile,mem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  lmem,mdt_bs2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(4\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mal_hvar) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  tol,jcen,rcen,rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rho,rceh,stat,id,ngf,opt,opflag,ngflag,outfile,dumpfile,mem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  lmem,mdt_ra15\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(10\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mal_hcon) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  tol,jcen,rcen,rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rho,rceh,stat,id,ngf,opt,opflag,ngflag,outfile,dumpfile,mem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  lmem,mdt_hy,mco_h2dh,mco_dh2h\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Do a final data dump) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        epoch\(j\) = time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_dump) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,tol,jcen,rcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,rho,rceh,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  id,ngf,epoch,opt,opflag,dumpfile,mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate and record the overall change in energy and ang. momentum) S
LHL
0.373 0.620 0.627 FG
(  50) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
(  \(23, file=outfile\(3\), status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  err=50\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a\)') S
0.000 0.000 0.000 FG
(\) mem\(57\)\(1:lmem\(57\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_en) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,xh,vh,s,en\(2\),am\(2\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,231\) mem\(58\)\(1:lmem\(58\)\), ) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(\(en\(2\) + en\(3\) - en\(1\)\) / en\(1\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,232\) mem\(59\)\(1:lmem\(59\)\), ) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(\(am\(2\) + am\(3\) - am\(1\)\) / am\(1\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,231\) mem\(60\)\(1:lmem\(60\)\), ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(en\(3\) / en\(1\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,232\) mem\(61\)\(1:lmem\(61\)\), ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(am\(3\) / am\(1\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(23\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(57\)\(1:lmem\(57\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.373 0.620 0.627 FG
( 231) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(format) S
0.000 0.000 0.000 FG
( \(/,a,1p1e12.5\)) S
LHL
0.373 0.620 0.627 FG
( 232) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(format) S
0.000 0.000 0.000 FG
( \(a,1p1e12.5\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(stop) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MFO_USER.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 4 4
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 217 def
/PageNumber 4 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
216 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Applies an arbitrary force, defined by the user.) S
LHL
(c) S
LHL
(c) S
( ) S
(If using with the symplectic algorithm MAL_MVS, the force should be) S
LHL
(c) S
( ) S
(small compared with the force from the central object.) S
LHL
(c) S
( ) S
(If using with the conservative Bulirsch-Stoer algorithm MAL_BS2, the) S
LHL
(c) S
( ) S
(force should not be a function of the velocities.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates and velocities must be with respect to central body) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_user) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,x,v,a\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, nbig) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),a\(3,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nbod) S
LHL
(        a\(1,j\) = 0.d0) S
LHL
(        a\(2,j\) = 0.d0) S
LHL
(        a\(3,j\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MAL_HVAR.FOR    \(ErikSoft   4 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Does an integration using a variable-timestep integration algorithm. The) S
LHL
(c) S
( ) S
(particular integrator routine is ONESTEP and the algorithm must use) S
LHL
(c) S
( ) S
(coordinates with respect to the central body.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. This routine is also called by the synchronisation routine mxx_sync,) S
LHL
(c) S
( ) S
(===  in which case OPFLAG = -2. Beware when making changes involving OPFLAG.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mal_hvar) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,tol,jcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rcen,rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,rho,rceh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  stat,id,ngf,opt,opflag,ngflag,outfile,dumpfile,mem,lmem,onestep\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(opflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ndump) S
0.000 0.000 0.000 FG
(,nfun) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( lmem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstop) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dtout) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,rmax) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(en) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(am) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(cefac) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),vh\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(rho) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(rceh) S
0.000 0.000 0.000 FG
(\(nbod\),ngf\(4,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(dumpfile) S
0.000 0.000 0.000 FG
(\(4\),mem\(NMESS\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(n) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(itmp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nhit) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ihit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(jhit) S
0.000 0.000 0.000 FG
(\(CMAX\),chit\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(dtflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ejflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nowflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stopflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nstored) S
0.000 0.000 0.000 FG
(,ce\(NMAX\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 5 5
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 289 def
/PageNumber 5 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
288 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nclo) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(iclo) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(jclo) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(nce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ice) S
0.000 0.000 0.000 FG
(\(NMAX\),jce\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tmp0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hdid) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tout) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tdump) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tfun) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tlog) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tsmall) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dtdump) S
0.000 0.000 0.000 FG
(,dtfun) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(thit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(dhit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(thit1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),v0\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rce) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(rphys) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(rcrit) S
0.000 0.000 0.000 FG
(\(NMAX\),a\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dclo) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(tclo) S
0.000 0.000 0.000 FG
(\(CMAX\),epoch\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ixvclo) S
0.000 0.000 0.000 FG
(\(6,CMAX\),jxvclo\(6,CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(mfo_all) S
0.000 0.000 0.000 FG
(,onestep) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Initialize variables. DTFLAG = 0 implies first ever call to ONESTEP) S
LHL
0.000 0.000 0.000 FG
(      dtout  = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dtout\)) S
LHL
(      dtdump = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(h0\) * ndump) S
LHL
(      dtfun  = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(h0\) * nfun) S
LHL
(      dtflag = 0) S
LHL
(      nstored = 0) S
LHL
(      tsmall = h0 * 1.d-8) S
LHL
(      h = h0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        ce\(j\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate close-encounter limits and physical radii for massive bodies) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_init) S
0.000 0.000 0.000 FG
( \(tstart,algor,h0,jcen,rcen,rmax,cefac,nbod,nbig,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  m,xh,vh,s,rho,rceh,rphys,rce,rcrit,id,opt,outfile\(2\),1\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Set up time of next output, times of previous dump, log and periodic effect) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        tout = tstart) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        n = ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
( \(time - tstart\) / dtout\) + 1) S
LHL
(        tout = tstart  +  dtout * ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(n\), tstop - tstart\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(tstop - tstart\)*\(tout - tstop\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) tout = tstop) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      tdump = time) S
LHL
(      tfun  = time) S
LHL
(      tlog  = time) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(MAIN  LOOP  STARTS  HERE) S
LHL
(c) S
LHL
0.373 0.620 0.627 FG
( 100) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Is it time for output ?) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tout-time\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tsmall\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Beware: the integration may change direction at this point!!!!) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-1\) dtflag = 0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Output data for all bodies) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_out) S
0.000 0.000 0.000 FG
( \(time,jcen,rcen,rmax,nbod,nbig,m,xh,vh,s,rho,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    stat,id,opt,opflag,algor,outfile\(1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_ce) S
0.000 0.000 0.000 FG
( \(time,tstart,rcen,rmax,nbod,nbig,m,stat,id,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    0,iclo,jclo,opt,stopflag,tclo,dclo,ixvclo,jxvclo,mem,lmem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    outfile,nstored,0\)) S
LHL
(        tmp0 = tstop - tout) S
LHL
(        tout = tout + ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tmp0\), ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dtout\) \), tmp0 \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Update the data dump files) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          epoch\(j\) = time) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_dump) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h,tol,jcen,rcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,rho,rceh,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    id,ngf,epoch,opt,opflag,dumpfile,mem,lmem\)) S
LHL
(        tdump = time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If integration has finished return to the main part of programme) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tstop-time\)) S
0.627 0.125 0.941 FG
(.le.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tsmall\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 6 6
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 361 def
/PageNumber 6 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
360 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Set the timestep) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-1\) tmp0 = tstart - time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-2\) tmp0 = tstop  - time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\)  tmp0 = tout   - time) S
LHL
(      h = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
( \( ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tmp0\), ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(h\) \), tsmall\), tmp0 \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Save the current coordinates and velocities) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,xh,vh,x0,v0,ngf,ngflag,opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance one timestep) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(onestep) S
0.000 0.000 0.000 FG
( \(time,h,hdid,tol,jcen,nbod,nbig,m,xh,vh,s,rphys,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rcrit,ngf,stat,dtflag,ngflag,opt,nce,ice,jce,mfo_all\)) S
LHL
(      time = time + hdid) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check if close encounters or collisions occurred) S
LHL
0.000 0.000 0.000 FG
(      nclo = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_stat) S
0.000 0.000 0.000 FG
( \(time,h,rcen,nbod,nbig,m,x0,v0,xh,vh,rce,rphys,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  nclo,iclo,jclo,dclo,tclo,ixvclo,jxvclo,nhit,ihit,jhit,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  chit,dhit,thit,thit1,nowflag,stat,outfile\(3\),mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(CLOSE  ENCOUNTERS) S
LHL
(c) S
LHL
(c) S
( ) S
(If encounter minima occurred, output details and decide whether to stop) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nclo) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        itmp = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nhit) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) itmp = 0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_ce) S
0.000 0.000 0.000 FG
( \(time,tstart,rcen,rmax,nbod,nbig,m,stat,id,nclo,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    iclo,jclo,opt,stopflag,tclo,dclo,ixvclo,jxvclo,mem,lmem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    outfile,nstored,itmp\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(stopflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(COLLISIONS) S
LHL
(c) S
LHL
(c) S
( ) S
(If a collision occurred, output details and resolve the collision) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nhit) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opt\(2\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nhit) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(chit\(k\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            i = ihit\(k\)) S
LHL
(            j = jhit\(k\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_coll) S
0.000 0.000 0.000 FG
( \(thit\(k\),tstart,en\(3\),jcen,i,j,nbod,nbig,m,xh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        vh,s,rphys,stat,id,opt,mem,lmem,outfile\(3\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Remove lost objects, reset flags and recompute Hill and physical radii) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_elim) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,xh,vh,s,rho,rceh,rcrit,ngf,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    id,mem,lmem,outfile\(3\),itmp\)) S
LHL
(        dtflag = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) opflag = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_init) S
0.000 0.000 0.000 FG
( \(tstart,algor,h0,jcen,rcen,rmax,cefac,nbod,nbig,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    m,xh,vh,s,rho,rceh,rphys,rce,rcrit,id,opt,outfile\(2\),1\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(COLLISIONS  WITH  CENTRAL  BODY) S
LHL
(c) S
LHL
(c) S
( ) S
(Check for collisions) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_cent) S
0.000 0.000 0.000 FG
( \(time,hdid,rcen,jcen,2,nbod,nbig,m,x0,v0,xh,vh,nhit,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  jhit,thit,dhit,algor,ngf,ngflag\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Resolve the collisions) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nhit) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nhit) S
LHL
(          i = 1) S
LHL
(          j = jhit\(k\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_coll) S
0.000 0.000 0.000 FG
( \(thit\(k\),tstart,en\(3\),jcen,i,j,nbod,nbig,m,xh,) S
EndPage
EndDSCPage
EndSheet

%%Page: 7 7
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 433 def
/PageNumber 7 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
432 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vh,s,rphys,stat,id,opt,mem,lmem,outfile\(3\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Remove lost objects, reset flags and recompute Hill and physical radii) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_elim) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,xh,vh,s,rho,rceh,rcrit,ngf,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    id,mem,lmem,outfile\(3\),itmp\)) S
LHL
(        dtflag = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) opflag = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_init) S
0.000 0.000 0.000 FG
( \(tstart,algor,h0,jcen,rcen,rmax,cefac,nbod,nbig,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    m,xh,vh,s,rho,rceh,rphys,rce,rcrit,id,opt,outfile\(2\),0\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(DATA  DUMP  AND  PROGRESS  REPORT) S
LHL
(c) S
LHL
(c) S
( ) S
(Do the data dump) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(time-tdump\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dtdump\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          epoch\(j\) = time) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_ce) S
0.000 0.000 0.000 FG
( \(time,tstart,rcen,rmax,nbod,nbig,m,stat,id,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    0,iclo,jclo,opt,stopflag,tclo,dclo,ixvclo,jxvclo,mem,lmem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    outfile,nstored,0\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_dump) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h,tol,jcen,rcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,rho,rceh,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    id,ngf,epoch,opt,opflag,dumpfile,mem,lmem\)) S
LHL
(        tdump = time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write a progress report to the log file) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(time-tlog\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dtdump\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_en) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,xh,vh,s,en\(2\),am\(2\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_log) S
0.000 0.000 0.000 FG
( \(time,tstart,en,am,opt,mem,lmem\)) S
LHL
(        tlog = time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(CHECK  FOR  EJECTIONS  AND  DO  OTHER  PERIODIC  EFFECTS) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(time-tfun\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dtfun\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Recompute close encounter limits, to allow for changes in Hill radii) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_hill) S
0.000 0.000 0.000 FG
( \(nbod,m,xh,vh,rce,a\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          rce\(j\) = rce\(j\) * rceh\(j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check for ejections) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_ejec) S
0.000 0.000 0.000 FG
( \(time,tstart,rmax,en,am,jcen,2,nbod,nbig,m,xh,vh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    s,stat,id,opt,ejflag,outfile\(3\),mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Remove lost objects, reset flags and recompute Hill and physical radii) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ejflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_elim) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,xh,vh,s,rho,rceh,rcrit,ngf,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      id,mem,lmem,outfile\(3\),itmp\)) S
LHL
(          dtflag = 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) opflag = 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_init) S
0.000 0.000 0.000 FG
( \(tstart,algor,h0,jcen,rcen,rmax,cefac,nbod,nbig,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      m,xh,vh,s,rho,rceh,rphys,rce,rcrit,id,opt,outfile\(2\),0\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        tfun = time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Go on to the next time step) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 8 8
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 505 def
/PageNumber 8 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
504 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MAL_HCON.FOR    \(ErikSoft   28 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Does an integration using an integrator with a constant stepsize H.) S
LHL
(c) S
( ) S
(Input and output to this routine use coordinates XH, and velocities VH,) S
LHL
(c) S
( ) S
(with respect to the central body, but the integration algorithm uses) S
LHL
(c) S
( ) S
(its own internal coordinates X, and velocities V.) S
LHL
(c) S
LHL
(c) S
( ) S
(The programme uses the transformation routines COORD and BCOORD to change) S
LHL
(c) S
( ) S
(to and from the internal coordinates, respectively.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mal_hcon) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,tol,jcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rcen,rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,rho,rceh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  stat,id,ngf,opt,opflag,ngflag,outfile,dumpfile,mem,lmem,onestep,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  coord,bcoord\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(opflag) S
0.000 0.000 0.000 FG
(,ngflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(lmem) S
0.000 0.000 0.000 FG
(\(NMESS\),) S
0.722 0.525 0.043 FG
(ndump) S
0.000 0.000 0.000 FG
(,nfun) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstop) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dtout) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,rmax) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(en) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(am) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(cefac) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),vh\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(rho) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(rceh) S
0.000 0.000 0.000 FG
(\(nbod\),ngf\(4,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(dumpfile) S
0.000 0.000 0.000 FG
(\(4\),mem\(NMESS\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(n) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(itmp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nclo) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nhit) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jhit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(iclo) S
0.000 0.000 0.000 FG
(\(CMAX\),jclo\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(dtflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ejflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stopflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(colflag) S
0.000 0.000 0.000 FG
(,nstored) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(xh0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),vh0\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rce) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(rphys) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(rcrit) S
0.000 0.000 0.000 FG
(\(NMAX\),epoch\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(hby2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tout) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tdump) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tfun) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tlog) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dtdump) S
0.000 0.000 0.000 FG
(,dtfun) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dclo) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(tclo) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(dhit) S
0.000 0.000 0.000 FG
(\(CMAX\),thit\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ixvclo) S
0.000 0.000 0.000 FG
(\(6,CMAX\),) S
0.722 0.525 0.043 FG
(jxvclo) S
0.000 0.000 0.000 FG
(\(6,CMAX\),a\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(onestep) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(coord) S
0.000 0.000 0.000 FG
(,bcoord) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Initialize variables. DTFLAG = 0/2: first call ever/normal) S
LHL
0.000 0.000 0.000 FG
(      dtout  = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dtout\)) S
LHL
(      dtdump = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(h0\) * ndump) S
LHL
(      dtfun  = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(h0\) * nfun) S
LHL
(      dtflag = 0) S
LHL
(      nstored = 0) S
LHL
(      hby2 = 0.500001d0 * ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(h0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate close-encounter limits and physical radii) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_init) S
0.000 0.000 0.000 FG
( \(tstart,algor,h0,jcen,rcen,rmax,cefac,nbod,nbig,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  m,xh,vh,s,rho,rceh,rphys,rce,rcrit,id,opt,outfile\(2\),1\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Set up time of next output, times of previous dump, log and periodic effect) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        tout = tstart) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        n = ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
( \(time-tstart\) / dtout\) + 1) S
LHL
(        tout = tstart  +  dtout * ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(n\), tstop - tstart\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(tstop-tstart\)*\(tout-tstop\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) tout = tstop) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      tdump = time) S
LHL
(      tfun  = time) S
LHL
(      tlog  = time) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Convert to internal coordinates and velocities) S
EndPage
EndDSCPage
EndSheet

%%Page: 9 9
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 577 def
/PageNumber 9 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
576 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(coord) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,xh,vh,x,v,ngf,ngflag,opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(MAIN  LOOP  STARTS  HERE) S
LHL
(c) S
LHL
0.373 0.620 0.627 FG
( 100) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Is it time for output ?) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tout-time\)) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(hby2) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Beware: the integration may change direction at this point!!!!) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-1) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(dtflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) dtflag = 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Convert to heliocentric coordinates and output data for all bodies) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(bcoord) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,x,v,xh,vh,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_out) S
0.000 0.000 0.000 FG
( \(time,jcen,rcen,rmax,nbod,nbig,m,xh,vh,s,rho,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    stat,id,opt,opflag,algor,outfile\(1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_ce) S
0.000 0.000 0.000 FG
( \(time,tstart,rcen,rmax,nbod,nbig,m,stat,id,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    0,iclo,jclo,opt,stopflag,tclo,dclo,ixvclo,jxvclo,mem,lmem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    outfile,nstored,0\)) S
LHL
(        tmp0 = tstop - tout) S
LHL
(        tout = tout + ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tmp0\), ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dtout\) \), tmp0 \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Update the data dump files) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          epoch\(j\) = time) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_dump) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,tol,jcen,rcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,rho,rceh,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    id,ngf,epoch,opt,opflag,dumpfile,mem,lmem\)) S
LHL
(        tdump = time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If integration has finished, convert to heliocentric coords and return) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tstop-time\)) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(hby2) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(bcoord) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,x,v,xh,vh,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Make sure the integration is heading in the right direction) S
LHL
0.373 0.620 0.627 FG
( 150) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
(      tmp0 = tstop - time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-1\) tmp0 = tstart - time) S
LHL
(      h0 = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
( \(h0, tmp0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Save the current heliocentric coordinates and velocities) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,x,v,xh0,vh0,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    opt\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(bcoord) S
0.000 0.000 0.000 FG
(\(time,jcen,nbod,nbig,h0,m,x,v,xh0,vh0,ngf,ngflag,opt\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(onestep) S
0.000 0.000 0.000 FG
( \(time,tstart,h0,tol,rmax,en,am,jcen,rcen,nbod,nbig,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  m,x,v,s,rphys,rcrit,rce,stat,id,ngf,algor,opt,dtflag,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  opflag,colflag,nclo,iclo,jclo,dclo,tclo,ixvclo,jxvclo,outfile,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  mem,lmem\)) S
LHL
(      time = time + h0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(CLOSE  ENCOUNTERS) S
LHL
(c) S
LHL
(c) S
( ) S
(If encounter minima occurred, output details and decide whether to stop) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nclo) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        itmp = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(colflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) itmp = 0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_ce) S
0.000 0.000 0.000 FG
( \(time,tstart,rcen,rmax,nbod,nbig,m,stat,id,nclo,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    iclo,jclo,opt,stopflag,tclo,dclo,ixvclo,jxvclo,mem,lmem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    outfile,nstored,itmp\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(stopflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 10 10
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 649 def
/PageNumber 10 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
648 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(COLLISIONS) S
LHL
(c) S
LHL
(c) S
( ) S
(If collisions occurred, output details and remove lost objects) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(colflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Reindex the surviving objects) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(bcoord) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,x,v,xh,vh,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_elim) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,xh,vh,s,rho,rceh,rcrit,ngf,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    id,mem,lmem,outfile\(3\),itmp\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Reset flags, and calculate new Hill radii and physical radii) S
LHL
0.000 0.000 0.000 FG
(        dtflag = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) opflag = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_init) S
0.000 0.000 0.000 FG
( \(tstart,algor,h0,jcen,rcen,rmax,cefac,nbod,nbig,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    m,xh,vh,s,rho,rceh,rphys,rce,rcrit,id,opt,outfile\(2\),1\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(coord) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,xh,vh,x,v,ngf,ngflag,opt\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(COLLISIONS  WITH  CENTRAL  BODY) S
LHL
(c) S
LHL
(c) S
( ) S
(Check for collisions with the central body) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
(\(time,jcen,nbod,nbig,h0,m,x,v,xh,vh,ngf,ngflag,opt\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(bcoord) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,x,v,xh,vh,ngf,ngflag,opt\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      itmp = 2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(12\) itmp = 3) S
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_cent) S
0.000 0.000 0.000 FG
( \(time,h0,rcen,jcen,itmp,nbod,nbig,m,xh0,vh0,xh,vh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  nhit,jhit,thit,dhit,algor,ngf,ngflag\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If something hit the central body, restore the coords prior to this step) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nhit) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,xh0,vh0,xh,vh,ngf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ngflag,opt\)) S
LHL
(        time = time - h0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Merge the object\(s\) with the central body) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nhit) S
LHL
(          i = 1) S
LHL
(          j = jhit\(k\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_coll) S
0.000 0.000 0.000 FG
( \(thit\(k\),tstart,en\(3\),jcen,i,j,nbod,nbig,m,xh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vh,s,rphys,stat,id,opt,mem,lmem,outfile\(3\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Remove lost objects, reset flags and recompute Hill and physical radii) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_elim) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,xh,vh,s,rho,rceh,rcrit,ngf,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    id,mem,lmem,outfile\(3\),itmp\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) opflag = 1) S
LHL
(        dtflag = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_init) S
0.000 0.000 0.000 FG
( \(tstart,algor,h0,jcen,rcen,rmax,cefac,nbod,nbig,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    m,xh,vh,s,rho,rceh,rphys,rce,rcrit,id,opt,outfile\(2\),0\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,xh,vh,x,v,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(coord) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,xh,vh,x,v,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Redo that integration time step) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(150) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(DATA  DUMP  AND  PROGRESS  REPORT) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 11 11
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 721 def
/PageNumber 11 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
720 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Convert to heliocentric coords and do the data dump) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(time-tdump\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dtdump\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(bcoord) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,x,v,xh,vh,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          epoch\(j\) = time) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_ce) S
0.000 0.000 0.000 FG
( \(time,tstart,rcen,rmax,nbod,nbig,m,stat,id,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    0,iclo,jclo,opt,stopflag,tclo,dclo,ixvclo,jxvclo,mem,lmem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    outfile,nstored,0\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_dump) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,tol,jcen,rcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,xh,vh,s,rho,rceh,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    id,ngf,epoch,opt,opflag,dumpfile,mem,lmem\)) S
LHL
(        tdump = time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Convert to heliocentric coords and write a progress report to the log file) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(time-tlog\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dtdump\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(bcoord) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,x,v,xh,vh,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_en) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,xh,vh,s,en\(2\),am\(2\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_log) S
0.000 0.000 0.000 FG
( \(time,tstart,en,am,opt,mem,lmem\)) S
LHL
(        tlog = time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(CHECK  FOR  EJECTIONS  AND  DO  OTHER  PERIODIC  EFFECTS) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(time-tfun\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dtfun\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,x,v,xh,vh,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(bcoord) S
0.000 0.000 0.000 FG
(\(time,jcen,nbod,nbig,h0,m,x,v,xh,vh,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Recompute close encounter limits, to allow for changes in Hill radii) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_hill) S
0.000 0.000 0.000 FG
( \(nbod,m,xh,vh,rce,a\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          rce\(j\) = rce\(j\) * rceh\(j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check for ejections) S
LHL
0.000 0.000 0.000 FG
(        itmp = 2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(12\) itmp = 3) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_ejec) S
0.000 0.000 0.000 FG
( \(time,tstart,rmax,en,am,jcen,itmp,nbod,nbig,m,xh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    vh,s,stat,id,opt,ejflag,outfile\(3\),mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Remove ejected objects, reset flags, calculate new Hill and physical radii) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ejflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_elim) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,xh,vh,s,rho,rceh,rcrit,ngf,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      id,mem,lmem,outfile\(3\),itmp\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) opflag = 1) S
LHL
(          dtflag = 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_init) S
0.000 0.000 0.000 FG
( \(tstart,algor,h0,jcen,rcen,rmax,cefac,nbod,nbig,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      m,xh,vh,s,rho,rceh,rphys,rce,rcrit,id,opt,outfile\(2\),0\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,xh,vh,x,v,ngf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        ngflag,opt\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(coord) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,xh,vh,x,v,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        opt\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        tfun = time) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Go on to the next time step) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 12 12
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 793 def
/PageNumber 12 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
792 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(    ) S
(MCE_BOX.FOR    \(ErikSoft   30 September 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Given initial and final coordinates and velocities, the routine returns) S
LHL
(c) S
( ) S
(the X and Y coordinates of a box bounding the motion in between the) S
LHL
(c) S
( ) S
(end points.) S
LHL
(c) S
LHL
(c) S
( ) S
(If the X or Y velocity changes sign, the routine performs a quadratic) S
LHL
(c) S
( ) S
(interpolation to estimate the corresponding extreme value of X or Y.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_box) S
0.000 0.000 0.000 FG
( \(nbod,h,x0,v0,x1,v1,xmin,xmax,ymin,ymax\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( nbod) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(x1) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(v0) S
0.000 0.000 0.000 FG
(\(3,nbod\),v1\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8   ) S
0.722 0.525 0.043 FG
(xmin) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(xmax) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(ymin) S
0.000 0.000 0.000 FG
(\(nbod\),ymax\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 temp) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        xmin\(j\) = ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
( \(x0\(1,j\), x1\(1,j\)\)) S
LHL
(        xmax\(j\) = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
( \(x0\(1,j\), x1\(1,j\)\)) S
LHL
(        ymin\(j\) = ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
( \(x0\(2,j\), x1\(2,j\)\)) S
LHL
(        ymax\(j\) = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
( \(x0\(2,j\), x1\(2,j\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If velocity changes sign, do an interpolation) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(v0\(1,j\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(v1\(1,j\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\)) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      \(v0\(1,j\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(v1\(1,j\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          temp = \(v0\(1,j\)*x1\(1,j\) - v1\(1,j\)*x0\(1,j\) ) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(            - .5d0*h*v0\(1,j\)*v1\(1,j\)\) / \(v0\(1,j\) - v1\(1,j\)\)) S
LHL
(          xmin\(j\) = ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
( \(xmin\(j\),temp\)) S
LHL
(          xmax\(j\) = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
( \(xmax\(j\),temp\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(v0\(2,j\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(v1\(2,j\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\)) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      \(v0\(2,j\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(v1\(2,j\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          temp = \(v0\(2,j\)*x1\(2,j\) - v1\(2,j\)*x0\(2,j\) ) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(            - .5d0*h*v0\(2,j\)*v1\(2,j\)\) / \(v0\(2,j\) - v1\(2,j\)\)) S
LHL
(          ymin\(j\) = ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
( \(ymin\(j\),temp\)) S
LHL
(          ymax\(j\) = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
( \(ymax\(j\),temp\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(    ) S
(MCE_CENT.FOR    \(ErikSoft   4 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Checks all objects with index I >= I0, to see if they have had a collision) S
EndPage
EndDSCPage
EndSheet

%%Page: 13 13
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 865 def
/PageNumber 13 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
864 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(with the central body in a time interval H, when given the initial and ) S
LHL
(c) S
( ) S
(final coordinates and velocities. The routine uses cubic interpolation) S
LHL
(c) S
( ) S
(to estimate the minimum separations.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates & velocities must be with respect to the central body!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_cent) S
0.000 0.000 0.000 FG
( \(time,h,rcen,jcen,i0,nbod,nbig,m,x0,v0,x1,v1,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  nhit,jhit,thit,dhit,algor,ngf,ngflag\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i0) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nhit) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(jhit) S
0.000 0.000 0.000 FG
(\(CMAX\), ) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(, ngflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,nbod\),v0\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x1) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v1) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(thit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(dhit) S
0.000 0.000 0.000 FG
(\(CMAX\),ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rcen2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mco_acsh) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(uhit) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mhit) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mm) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r0) S
0.000 0.000 0.000 FG
(,mcen) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(hx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hz) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rr0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rr1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rv0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rv1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,v2) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(xu0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(xu1) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(vu0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),vu1\(3,NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i0) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0\) i0 = 2) S
LHL
(      nhit = 0) S
LHL
(      rcen2 = rcen * rcen) S
LHL
(      mcen = m\(1\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If using close-binary code, convert to coords with respect to the binary) S
LHL
(c) S
(      ) S
(if \(algor.eq.11\) then) S
LHL
(c) S
(        ) S
(mcen = m\(1\) + m\(2\)) S
LHL
(c) S
(        ) S
(call mco_h2ub \(temp,jcen,nbod,nbig,h,m,x0,v0,xu0,vu0,ngf,ngflag\)) S
LHL
(c) S
(        ) S
(call mco_h2ub \(temp,jcen,nbod,nbig,h,m,x1,v1,xu1,vu1,ngf,ngflag\)) S
LHL
(c) S
(      ) S
(end if) S
LHL
(c) S
LHL
(c) S
( ) S
(Check for collisions with the central body) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = i0, nbod) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          rr0 = xu0\(1,j\)*xu0\(1,j\) + xu0\(2,j\)*xu0\(2,j\) +xu0\(3,j\)*xu0\(3,j\)) S
LHL
(          rr1 = xu1\(1,j\)*xu1\(1,j\) + xu1\(2,j\)*xu1\(2,j\) +xu1\(3,j\)*xu1\(3,j\)) S
LHL
(          rv0 = vu0\(1,j\)*xu0\(1,j\) + vu0\(2,j\)*xu0\(2,j\) +vu0\(3,j\)*xu0\(3,j\)) S
LHL
(          rv1 = vu1\(1,j\)*xu1\(1,j\) + vu1\(2,j\)*xu1\(2,j\) +vu1\(3,j\)*xu1\(3,j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          rr0 = x0\(1,j\)*x0\(1,j\) + x0\(2,j\)*x0\(2,j\) + x0\(3,j\)*x0\(3,j\)) S
LHL
(          rr1 = x1\(1,j\)*x1\(1,j\) + x1\(2,j\)*x1\(2,j\) + x1\(3,j\)*x1\(3,j\)) S
LHL
(          rv0 = v0\(1,j\)*x0\(1,j\) + v0\(2,j\)*x0\(2,j\) + v0\(3,j\)*x0\(3,j\)) S
LHL
(          rv1 = v1\(1,j\)*x1\(1,j\) + v1\(2,j\)*x1\(2,j\) + v1\(3,j\)*x1\(3,j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If inside the central body, or passing through pericentre, use 2-body approx.) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(rv0*h) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(rv1*h) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\)) S
0.627 0.125 0.941 FG
(.or.) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
(\(rr0,rr1\)) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(rcen2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            hx = xu0\(2,j\) * vu0\(3,j\)  -  xu0\(3,j\) * vu0\(2,j\)) S
LHL
(            hy = xu0\(3,j\) * vu0\(1,j\)  -  xu0\(1,j\) * vu0\(3,j\)) S
LHL
(            hz = xu0\(1,j\) * vu0\(2,j\)  -  xu0\(2,j\) * vu0\(1,j\)) S
LHL
(            v2 = vu0\(1,j\)*vu0\(1,j\) +vu0\(2,j\)*vu0\(2,j\) +vu0\(3,j\)*vu0\(3,j\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            hx = x0\(2,j\) * v0\(3,j\)  -  x0\(3,j\) * v0\(2,j\)) S
LHL
(            hy = x0\(3,j\) * v0\(1,j\)  -  x0\(1,j\) * v0\(3,j\)) S
LHL
(            hz = x0\(1,j\) * v0\(2,j\)  -  x0\(2,j\) * v0\(1,j\)) S
LHL
(            v2 = v0\(1,j\)*v0\(1,j\) + v0\(2,j\)*v0\(2,j\) + v0\(3,j\)*v0\(3,j\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          h2 = hx*hx + hy*hy + hz*hz) S
LHL
(          p = h2 / \(mcen + m\(j\)\)) S
LHL
(          r0 = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(rr0\)) S
LHL
(          temp = 1.d0 + p*\(v2/\(mcen + m\(j\)\) - 2.d0/r0\)) S
LHL
(          e = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\(temp,0.d0\) \)) S
LHL
(          q = p / \(1.d0 + e\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 14 14
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 937 def
/PageNumber 14 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
936 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If the object hit the central body) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(q) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(rcen\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            nhit = nhit + 1) S
LHL
(            jhit\(nhit\) = j) S
LHL
(            dhit\(nhit\) = rcen) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Time of impact relative to the end of the timestep) S
LHL
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              a = q / \(1.d0 - e\)) S
LHL
(              uhit = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(acos) S
0.000 0.000 0.000 FG
(\(\(1.d0 - rcen/a\)/e\), -h\)) S
LHL
(              u0   = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(acos) S
0.000 0.000 0.000 FG
(\(\(1.d0 - r0/a  \)/e\), rv0\)) S
LHL
(              mhit = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \(uhit - e*) S
0.855 0.439 0.839 FG
(sin) S
0.000 0.000 0.000 FG
(\(uhit\) + PI, TWOPI\) - PI) S
LHL
(              m0   = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \(u0   - e*) S
0.855 0.439 0.839 FG
(sin) S
0.000 0.000 0.000 FG
(\(u0\)   + PI, TWOPI\) - PI) S
LHL
(            ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(              a = q / \(e - 1.d0\)) S
LHL
(              uhit = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
( \(mco_acsh\(\(1.d0 - rcen/a\)/e\), -h\)) S
LHL
(              u0   = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
( \(mco_acsh\(\(1.d0 - r0/a  \)/e\), rv0\)) S
LHL
(              mhit = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \(uhit - e*) S
0.855 0.439 0.839 FG
(sinh) S
0.000 0.000 0.000 FG
(\(uhit\) + PI, TWOPI\) - PI) S
LHL
(              m0   = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \(u0   - e*) S
0.855 0.439 0.839 FG
(sinh) S
0.000 0.000 0.000 FG
(\(u0\)   + PI, TWOPI\) - PI) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(            mm = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(\(mcen + m\(j\)\) / \(a*a*a\)\)) S
LHL
(            thit\(nhit\) = \(mhit - m0\) / mm + time) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCE_COLL.FOR    \(ErikSoft   2 October 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Resolves a collision between two objects, using the collision model chosen) S
LHL
(c) S
( ) S
(by the user. Also writes a message to the information file, and updates the) S
LHL
(c) S
( ) S
(value of ELOST, the change in energy due to collisions and ejections.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates and velocities must be with respect to central body.) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_coll) S
0.000 0.000 0.000 FG
( \(time,tstart,elost,jcen,i,j,nbod,nbig,m,xh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  vh,s,rphys,stat,id,opt,mem,lmem,outfile\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),lmem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(elost) S
0.000 0.000 0.000 FG
(,jcen\(3\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),rphys\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(,mem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(year) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(month) S
0.000 0.000 0.000 FG
(,itmp) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 t1) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*38 ) S
0.722 0.525 0.043 FG
(flost) S
0.000 0.000 0.000 FG
(,fcol) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*6 tstring) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(If two bodies collided, check that the less massive one is removed) S
LHL
(c) S
( ) S
(\(unless the more massive one is a Small body\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 15 15
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1009 def
/PageNumber 15 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1008 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(m\(j\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(m\(i\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(j) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(nbig\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          itmp = i) S
LHL
(          i = j) S
LHL
(          j = itmp) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write message to info file \(I=0 implies collision with the central body\)) S
LHL
0.373 0.620 0.627 FG
(  10) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(23, file=outfile, status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
(\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_jd2y) S
0.000 0.000 0.000 FG
( \(time,year,month,t1\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          flost = ) S
0.737 0.561 0.561 FG
('\(1x,a8,a,i10,1x,i2,1x,f8.5\)') S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,flost\) id\(j\),mem\(67\)\(1:lmem\(67\)\),year,month,t1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          fcol  = ) S
0.737 0.561 0.561 FG
('\(1x,a8,a,a8,a,i10,1x,i2,1x,f4.1\)') S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,fcol\) id\(i\),mem\(69\)\(1:lmem\(69\)\),id\(j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(71\)\(1:lmem\(71\)\),year,month,t1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          t1 = \(time - tstart\) / 365.25d0) S
LHL
(          tstring = mem\(2\)) S
LHL
(          flost = ) S
0.737 0.561 0.561 FG
('\(1x,a8,a,f18.7,a\)') S
0.000 0.000 0.000 FG
LHL
(          fcol  = ) S
0.737 0.561 0.561 FG
('\(1x,a8,a,a8,a,1x,f14.3,a\)') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) t1 = time) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) t1 = time - tstart) S
LHL
(          tstring = mem\(1\)) S
LHL
(          flost = ) S
0.737 0.561 0.561 FG
('\(1x,a8,a,f18.5,a\)') S
0.000 0.000 0.000 FG
LHL
(          fcol  = ) S
0.737 0.561 0.561 FG
('\(1x,a8,a,a8,a,1x,f14.1,a\)') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(i) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,flost\) id\(j\),mem\(67\)\(1:lmem\(67\)\),t1,tstring) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,fcol\) id\(i\),mem\(69\)\(1:lmem\(69\)\),id\(j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(71\)\(1:lmem\(71\)\),t1,tstring) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(23\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Do the collision \(inelastic merger\)) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_merg) S
0.000 0.000 0.000 FG
( \(jcen,i,j,nbod,nbig,m,xh,vh,s,stat,elost\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCE_HILL.FOR    \(ErikSoft   4 October 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates the Hill radii for all objects given their masses, M,) S
LHL
(c) S
( ) S
(coordinates, X, and velocities, V; plus the mass of the central body, M\(1\)) S
LHL
(c) S
( ) S
(Where HILL = a * \(m/3*m\(1\)\)^\(1/3\)) S
LHL
(c) S
LHL
(c) S
( ) S
(If the orbit is hyperbolic or parabolic, the Hill radius is calculated using:) S
LHL
(c) S
(       ) S
(HILL = r * \(m/3*m\(1\)\)^\(1/3\)) S
LHL
(c) S
( ) S
(where R is the current distance from the central body.) S
LHL
(c) S
LHL
(c) S
( ) S
(The routine also gives the semi-major axis, A, of each object's orbit.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. Designed to use heliocentric coordinates, but should be adequate using) S
LHL
(c) S
( ) S
(===  barycentric coordinates.) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 16 16
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1081 def
/PageNumber 16 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1080 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_hill) S
0.000 0.000 0.000 FG
( \(nbod,m,x,v,hill,a\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 THIRD) S
LHL
(      ) S
0.133 0.545 0.133 FG
(parameter) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(THIRD) S
0.000 0.000 0.000 FG
( = .3333333333333333d0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( nbod) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(hill) S
0.000 0.000 0.000 FG
(\(nbod\),a\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(v2) S
0.000 0.000 0.000 FG
(, gm) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        gm = m\(1\) + m\(j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2a) S
0.000 0.000 0.000 FG
( \(gm,x\(1,j\),x\(2,j\),x\(3,j\),v\(1,j\),v\(2,j\),v\(3,j\),a\(j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    r,v2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(If orbit is hyperbolic, use the distance rather than the semi-major axis) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(a\(j\)) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0\) a\(j\) = r) S
LHL
(        hill\(j\) = a\(j\) * \(THIRD * m\(j\) / m\(1\)\)**THIRD) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCE_INIT.FOR    \(ErikSoft   28 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates close-approach limits RCE \(in AU\) and physical radii RPHYS) S
LHL
(c) S
( ) S
(\(in AU\) for all objects, given their masses M, coordinates X, velocities) S
LHL
(c) S
( ) S
(V, densities RHO, and close-approach limits RCEH \(in Hill radii\).) S
LHL
(c) S
LHL
(c) S
( ) S
(Also calculates the changeover distance RCRIT, used by the hybrid) S
LHL
(c) S
( ) S
(symplectic integrator. RCRIT is defined to be the larger of N1*HILL and) S
LHL
(c) S
( ) S
(N2*H*VMAX, where HILL is the Hill radius, H is the timestep, VMAX is the) S
LHL
(c) S
( ) S
(largest expected velocity of any body, and N1, N2 are parameters \(see) S
LHL
(c) S
( ) S
(section 4.2 of Chambers 1999, Monthly Notices, vol 304, p793-799\).) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. Designed to use heliocentric coordinates, but should be adequate using) S
LHL
(c) S
( ) S
(===  barycentric coordinates.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_init) S
0.000 0.000 0.000 FG
( \(tstart,algor,h,jcen,rcen,rmax,cefac,nbod,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  nbig,m,x,v,s,rho,rceh,rphys,rce,rcrit,id,opt,outfile,rcritflag\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(N2) S
0.000 0.000 0.000 FG
(,THIRD) S
LHL
(      ) S
0.133 0.545 0.133 FG
(parameter) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(N2) S
0.000 0.000 0.000 FG
(=.4d0,) S
0.722 0.525 0.043 FG
(THIRD) S
0.000 0.000 0.000 FG
(=.3333333333333333d0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),rcritflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(cefac) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),x\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(rho) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(rceh) S
0.000 0.000 0.000 FG
(\(nbod\),rphys\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rce) S
0.000 0.000 0.000 FG
(\(nbod\),rcrit\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 outfile) S
EndPage
EndDSCPage
EndSheet

%%Page: 17 17
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1153 def
/PageNumber 17 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1152 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(hill) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(amin) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k_2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rhocgs) S
0.000 0.000 0.000 FG
(,rcen_2) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(header) S
0.000 0.000 0.000 FG
(,c\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mio_re2c) S
0.000 0.000 0.000 FG
(, mio_fl2c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      rhocgs = AU * AU * AU * K2 / MSUN) S
LHL
(      k_2 = 1.d0 / K2) S
LHL
(      rcen_2 = 1.d0 / \(rcen * rcen\)) S
LHL
(      amin = HUGE) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate the Hill radii) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_hill) S
0.000 0.000 0.000 FG
( \(nbod,m,x,v,hill,a\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Determine the maximum close-encounter distances, and the physical radii) S
LHL
0.000 0.000 0.000 FG
(      temp = 2.25d0 * m\(1\) / PI) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        rce\(j\)   = hill\(j\) * rceh\(j\)) S
LHL
(        rphys\(j\) = hill\(j\) / a\(j\) * \(temp/rho\(j\)\)**THIRD) S
LHL
(        amin = ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
( \(a\(j\), amin\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If required, calculate the changeover distance used by hybrid algorithm) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(rcritflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        vmax = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
( \(m\(1\) / amin\)) S
LHL
(        temp = N2 * h * vmax) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          rcrit\(j\) = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\(hill\(j\) * cefac, temp\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write list of object's identities to close-encounter output file) S
LHL
0.000 0.000 0.000 FG
(      header\(1:8\)   = mio_fl2c \(tstart\)) S
LHL
(      header\(9:16\)  = mio_re2c \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(nbig - 1\),   0.d0, 11239423.99d0\)) S
LHL
(      header\(12:19\) = mio_re2c \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(nbod - nbig\),0.d0, 11239423.99d0\)) S
LHL
(      header\(15:22\) = mio_fl2c \(m\(1\) * k_2\)) S
LHL
(      header\(23:30\) = mio_fl2c \(jcen\(1\) * rcen_2\)) S
LHL
(      header\(31:38\) = mio_fl2c \(jcen\(2\) * rcen_2 * rcen_2\)) S
LHL
(      header\(39:46\) = mio_fl2c \(jcen\(3\) * rcen_2 * rcen_2 * rcen_2\)) S
LHL
(      header\(47:54\) = mio_fl2c \(rcen\)) S
LHL
(      header\(55:62\) = mio_fl2c \(rmax\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        c\(j\)\(1:8\) = mio_re2c \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(j - 1\), 0.d0, 11239423.99d0\)) S
LHL
(        c\(j\)\(4:11\) = id\(j\)) S
LHL
(        c\(j\)\(12:19\) = mio_fl2c \(m\(j\) * k_2\)) S
LHL
(        c\(j\)\(20:27\) = mio_fl2c \(s\(1,j\) * k_2\)) S
LHL
(        c\(j\)\(28:35\) = mio_fl2c \(s\(2,j\) * k_2\)) S
LHL
(        c\(j\)\(36:43\) = mio_fl2c \(s\(3,j\) * k_2\)) S
LHL
(        c\(j\)\(44:51\) = mio_fl2c \(rho\(j\) / rhocgs\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write compressed output to file) S
LHL
0.373 0.620 0.627 FG
(  50) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(22, file=outfile, status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(50) S
0.000 0.000 0.000 FG
(\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(22,) S
0.737 0.561 0.561 FG
('\(a1,a2,i2,a62,i1\)') S
0.000 0.000 0.000 FG
(\) ) S
0.855 0.439 0.839 FG
(char) S
0.000 0.000 0.000 FG
(\(12\),) S
0.737 0.561 0.561 FG
('6a') S
0.000 0.000 0.000 FG
(,algor,header\(1:62\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  opt\(4\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(22,) S
0.737 0.561 0.561 FG
('\(a51\)') S
0.000 0.000 0.000 FG
(\) c\(j\)\(1:51\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(22\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCE_MERG.FOR    \(ErikSoft   2 October 2000\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 18 18
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1225 def
/PageNumber 18 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1224 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ) S
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Merges objects I and J inelastically to produce a single new body by ) S
LHL
(c) S
( ) S
(conserving mass and linear momentum.) S
LHL
(c) S
(   ) S
(If J <= NBIG, then J is a Big body) S
LHL
(c) S
(   ) S
(If J >  NBIG, then J is a Small body) S
LHL
(c) S
(   ) S
(If I = 0, then I is the central body) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates and velocities must be with respect to central body.) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_merg) S
0.000 0.000 0.000 FG
( \(jcen,i,j,nbod,nbig,m,xh,vh,s,stat,elost\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, stat\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),elost) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( k) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tmp1) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(tmp2) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(dx) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(dy) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(dz) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(du) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(dv) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(dw) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(msum) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mredu) S
0.000 0.000 0.000 FG
(, msum_1) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(e0) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(e1) S
0.000 0.000 0.000 FG
(, l2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(If a body hits the central body) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_en) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,xh,vh,s,e0,l2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If a body hit the central body...) S
LHL
0.000 0.000 0.000 FG
(        msum   = m\(1\) + m\(j\)) S
LHL
(        msum_1 = 1.d0 / msum) S
LHL
(        mredu  = m\(1\) * m\(j\) * msum_1) S
LHL
(        dx = xh\(1,j\)) S
LHL
(        dy = xh\(2,j\)) S
LHL
(        dz = xh\(3,j\)) S
LHL
(        du = vh\(1,j\)) S
LHL
(        dv = vh\(2,j\)) S
LHL
(        dw = vh\(3,j\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate new spin angular momentum of the central body) S
LHL
0.000 0.000 0.000 FG
(        s\(1,1\) = s\(1,1\)  +  s\(1,j\)  +  mredu * \(dy * dw  -  dz * dv\)) S
LHL
(        s\(2,1\) = s\(2,1\)  +  s\(2,j\)  +  mredu * \(dz * du  -  dx * dw\)) S
LHL
(        s\(3,1\) = s\(3,1\)  +  s\(3,j\)  +  mredu * \(dx * dv  -  dy * du\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate shift in barycentric coords and velocities of central body) S
LHL
0.000 0.000 0.000 FG
(        tmp2 = m\(j\) * msum_1) S
LHL
(        xh\(1,1\) = tmp2 * xh\(1,j\)) S
LHL
(        xh\(2,1\) = tmp2 * xh\(2,j\)) S
LHL
(        xh\(3,1\) = tmp2 * xh\(3,j\)) S
LHL
(        vh\(1,1\) = tmp2 * vh\(1,j\)) S
LHL
(        vh\(2,1\) = tmp2 * vh\(2,j\)) S
LHL
(        vh\(3,1\) = tmp2 * vh\(3,j\)) S
LHL
(        m\(1\) = msum) S
LHL
(        m\(j\) = 0.d0) S
LHL
(        s\(1,j\) = 0.d0) S
LHL
(        s\(2,j\) = 0.d0) S
LHL
(        s\(3,j\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Shift the heliocentric coordinates and velocities of all bodies) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(          xh\(1,k\) = xh\(1,k\) - xh\(1,1\)) S
LHL
(          xh\(2,k\) = xh\(2,k\) - xh\(2,1\)) S
LHL
(          xh\(3,k\) = xh\(3,k\) - xh\(3,1\)) S
LHL
(          vh\(1,k\) = vh\(1,k\) - vh\(1,1\)) S
LHL
(          vh\(2,k\) = vh\(2,k\) - vh\(2,1\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 19 19
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1297 def
/PageNumber 19 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1296 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          vh\(3,k\) = vh\(3,k\) - vh\(3,1\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate energy loss due to the collision) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_en) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,xh,vh,s,e1,l2\)) S
LHL
(        elost = elost + \(e0 - e1\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If two bodies collided...) S
LHL
0.000 0.000 0.000 FG
(        msum   = m\(i\) + m\(j\)) S
LHL
(        msum_1 = 1.d0 / msum) S
LHL
(        mredu  = m\(i\) * m\(j\) * msum_1) S
LHL
(        dx = xh\(1,i\) - xh\(1,j\)) S
LHL
(        dy = xh\(2,i\) - xh\(2,j\)) S
LHL
(        dz = xh\(3,i\) - xh\(3,j\)) S
LHL
(        du = vh\(1,i\) - vh\(1,j\)) S
LHL
(        dv = vh\(2,i\) - vh\(2,j\)) S
LHL
(        dw = vh\(3,i\) - vh\(3,j\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate energy loss due to the collision) S
LHL
0.000 0.000 0.000 FG
(        elost = elost  +  .5d0 * mredu * \(du*du + dv*dv + dw*dw\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        -  m\(i\) * m\(j\) / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(dx*dx + dy*dy + dz*dz\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate spin angular momentum of the new body) S
LHL
0.000 0.000 0.000 FG
(        s\(1,i\) = s\(1,i\)  +  s\(1,j\)  +  mredu * \(dy * dw  -  dz * dv\)) S
LHL
(        s\(2,i\) = s\(2,i\)  +  s\(2,j\)  +  mredu * \(dz * du  -  dx * dw\)) S
LHL
(        s\(3,i\) = s\(3,i\)  +  s\(3,j\)  +  mredu * \(dx * dv  -  dy * du\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate new coords and velocities by conserving centre of mass & momentum) S
LHL
0.000 0.000 0.000 FG
(        tmp1 = m\(i\) * msum_1) S
LHL
(        tmp2 = m\(j\) * msum_1) S
LHL
(        xh\(1,i\) = xh\(1,i\) * tmp1  +  xh\(1,j\) * tmp2) S
LHL
(        xh\(2,i\) = xh\(2,i\) * tmp1  +  xh\(2,j\) * tmp2) S
LHL
(        xh\(3,i\) = xh\(3,i\) * tmp1  +  xh\(3,j\) * tmp2) S
LHL
(        vh\(1,i\) = vh\(1,i\) * tmp1  +  vh\(1,j\) * tmp2) S
LHL
(        vh\(2,i\) = vh\(2,i\) * tmp1  +  vh\(2,j\) * tmp2) S
LHL
(        vh\(3,i\) = vh\(3,i\) * tmp1  +  vh\(3,j\) * tmp2) S
LHL
(        m\(i\) = msum) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Flag the lost body for removal, and move it away from the new body) S
LHL
0.000 0.000 0.000 FG
(      stat\(j\) = -2) S
LHL
(      xh\(1,j\) = -xh\(1,j\)) S
LHL
(      xh\(2,j\) = -xh\(2,j\)) S
LHL
(      xh\(3,j\) = -xh\(3,j\)) S
LHL
(      vh\(1,j\) = -vh\(1,j\)) S
LHL
(      vh\(2,j\) = -vh\(2,j\)) S
LHL
(      vh\(3,j\) = -vh\(3,j\)) S
LHL
(      m\(j\)   = 0.d0) S
LHL
(      s\(1,j\) = 0.d0) S
LHL
(      s\(2,j\) = 0.d0) S
LHL
(      s\(3,j\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCE_MIN.FOR    \(ErikSoft  1 December 1998\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates minimum value of a quantity D, within an interval H, given initial) S
LHL
(c) S
( ) S
(and final values D0, D1, and their derivatives D0T, D1T, using third-order) S
LHL
(c) S
( ) S
(\(i.e. cubic\) interpolation.) S
LHL
(c) S
LHL
(c) S
( ) S
(Also calculates the value of the independent variable T at which D is a) S
LHL
(c) S
( ) S
(minimum, with respect to the epoch of D1.) S
EndPage
EndDSCPage
EndSheet

%%Page: 20 20
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1369 def
/PageNumber 20 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1368 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(N.B. The routine assumes that only one minimum is present in the interval H.) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_min) S
0.000 0.000 0.000 FG
( \(d0,d1,d0t,d1t,h,d2min,tmin\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(d0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d0t) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d1t) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d2min) S
0.000 0.000 0.000 FG
(,tmin) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,tau) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(d0t*h) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(d1t*h) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(d0) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(d1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          d2min = d0) S
LHL
(          tmin = -h) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          d2min = d1) S
LHL
(          tmin = 0.d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        temp = 6.d0*\(d0 - d1\)) S
LHL
(        a = temp + 3.d0*h*\(d0t + d1t\)) S
LHL
(        b = temp + 2.d0*h*\(d0t + 2.d0*d1t\)) S
LHL
(        c = h * d1t) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        temp =-.5d0*\(b + ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\(b*b - 4.d0*a*c,0.d0\)\), b\) \)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(temp) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          tau = 0.d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          tau = c / temp) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Make sure TAU falls in the interval -1 < TAU < 0) S
LHL
0.000 0.000 0.000 FG
(        tau = ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
(\(tau, 0.d0\)) S
LHL
(        tau = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\(tau, -1.d0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate TMIN and D2MIN) S
LHL
0.000 0.000 0.000 FG
(        tmin = tau * h) S
LHL
(        temp = 1.d0 + tau) S
LHL
(        d2min = tau*tau*\(\(3.d0+2.d0*tau\)*d0 + temp*h*d0t\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        + temp*temp*\(\(1.d0-2.d0*tau\)*d1 + tau*h*d1t\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Make sure D2MIN is not negative) S
LHL
0.000 0.000 0.000 FG
(        d2min = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\(d2min, 0.d0\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(    ) S
(MCE_SNIF.FOR    \(ErikSoft   3 October 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Given initial and final coordinates and velocities X and V, and a timestep ) S
LHL
(c) S
( ) S
(H, the routine estimates which objects were involved in a close encounter) S
LHL
(c) S
( ) S
(during the timestep. The routine examines all objects with indices I >= I0.) S
LHL
(c) S
LHL
(c) S
( ) S
(Returns an array CE, which for each object is: ) S
LHL
(c) S
(                           ) S
(0 if it will undergo no encounters) S
LHL
(c) S
(                           ) S
(2 if it will pass within RCRIT of a Big body) S
EndPage
EndDSCPage
EndSheet

%%Page: 21 21
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1441 def
/PageNumber 21 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1440 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Also returns arrays ICE and JCE, containing the indices of each pair of) S
LHL
(c) S
( ) S
(objects estimated to have undergone an encounter.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates must be with respect to the central body!!!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_snif) S
0.000 0.000 0.000 FG
( \(h,i0,nbod,nbig,x0,v0,x1,v1,rcrit,ce,nce,ice,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  jce\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ce) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(nce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ice) S
0.000 0.000 0.000 FG
(\(NMAX\),jce\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v0) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(x1) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v1) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,rcrit\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(d0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d0t) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d1t) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d2min) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmin) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rc) S
0.000 0.000 0.000 FG
(,rc2) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dx0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dy0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dz0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(du0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dv0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dw0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dx1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dy1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dz1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(du1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dv1) S
0.000 0.000 0.000 FG
(,dw1) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(xmin) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(xmax) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(ymin) S
0.000 0.000 0.000 FG
(\(NMAX\),ymax\(NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i0) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0\) i0 = 2) S
LHL
(      nce = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        ce\(j\) = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate maximum and minimum values of x and y coordinates) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_box) S
0.000 0.000 0.000 FG
( \(nbod,h,x0,v0,x1,v1,xmin,xmax,ymin,ymax\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Adjust values for the Big bodies by symplectic close-encounter distance) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = i0, nbig) S
LHL
(        xmin\(j\) = xmin\(j\) - rcrit\(j\)) S
LHL
(        xmax\(j\) = xmax\(j\) + rcrit\(j\)) S
LHL
(        ymin\(j\) = ymin\(j\) - rcrit\(j\)) S
LHL
(        ymax\(j\) = ymax\(j\) + rcrit\(j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Identify pairs whose X-Y boxes overlap, and calculate minimum separation) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = i0, nbig) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = i + 1, nbod) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(xmax\(i\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(xmin\(j\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(xmax\(j\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(xmin\(i\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(ymax\(i\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(ymin\(j\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(ymax\(j\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(ymin\(i\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Determine the maximum separation that would qualify as an encounter) S
LHL
0.000 0.000 0.000 FG
(            rc = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\(rcrit\(i\), rcrit\(j\)\)) S
LHL
(            rc2 = rc * rc) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate initial and final separations) S
LHL
0.000 0.000 0.000 FG
(            dx0 = x0\(1,i\) - x0\(1,j\)) S
LHL
(            dy0 = x0\(2,i\) - x0\(2,j\)) S
LHL
(            dz0 = x0\(3,i\) - x0\(3,j\)) S
LHL
(            dx1 = x1\(1,i\) - x1\(1,j\)) S
LHL
(            dy1 = x1\(2,i\) - x1\(2,j\)) S
LHL
(            dz1 = x1\(3,i\) - x1\(3,j\)) S
LHL
(            d0 = dx0*dx0 + dy0*dy0 + dz0*dz0) S
LHL
(            d1 = dx1*dx1 + dy1*dy1 + dz1*dz1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check for a possible minimum in between) S
LHL
0.000 0.000 0.000 FG
(            du0 = v0\(1,i\) - v0\(1,j\)) S
LHL
(            dv0 = v0\(2,i\) - v0\(2,j\)) S
LHL
(            dw0 = v0\(3,i\) - v0\(3,j\)) S
LHL
(            du1 = v1\(1,i\) - v1\(1,j\)) S
LHL
(            dv1 = v1\(2,i\) - v1\(2,j\)) S
LHL
(            dw1 = v1\(3,i\) - v1\(3,j\)) S
LHL
(            d0t = \(dx0*du0 + dy0*dv0 + dz0*dw0\) * 2.d0) S
EndPage
EndDSCPage
EndSheet

%%Page: 22 22
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1513 def
/PageNumber 22 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1512 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(            d1t = \(dx1*du1 + dy1*dv1 + dz1*dw1\) * 2.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If separation derivative changes sign, find the minimum separation) S
LHL
0.000 0.000 0.000 FG
(            d2min = HUGE) S
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(d0t*h) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(d1t*h) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_min) S
0.000 0.000 0.000 FG
( \(d0,d1,d0t,d1t,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        h,d2min,tmin\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If minimum separation is small enough, flag this as a possible encounter) S
LHL
0.000 0.000 0.000 FG
(            temp = ) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
( \(d0,d1,d2min\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(temp) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(rc2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              ce\(i\) = 2) S
LHL
(              ce\(j\) = 2) S
LHL
(              nce = nce + 1) S
LHL
(              ice\(nce\) = i) S
LHL
(              jce\(nce\) = j) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(    ) S
(MCE_STAT.FOR    \(ErikSoft   1 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Returns details of all close-encounter minima involving at least one Big) S
LHL
(c) S
( ) S
(body during a timestep. The routine estimates minima using the initial) S
LHL
(c) S
( ) S
(and final coordinates X\(0\),X\(1\) and velocities V\(0\),V\(1\) of the step, and) S
LHL
(c) S
( ) S
(the stepsize H.) S
LHL
(c) S
LHL
(c) S
(  ) S
(ICLO, JCLO contain the indices of the objects) S
LHL
(c) S
(  ) S
(DCLO is their minimum separation) S
LHL
(c) S
(  ) S
(TCLO is the time of closest approach relative to current time) S
LHL
(c) S
LHL
(c) S
( ) S
(The routine also checks for collisions/near misses given the physical radii ) S
LHL
(c) S
( ) S
(RPHYS, and returns the time THIT of the collision/near miss closest to the) S
LHL
(c) S
( ) S
(start of the timestep, and the identities IHIT and JHIT of the objects) S
LHL
(c) S
( ) S
(involved.) S
LHL
(c) S
LHL
(c) S
(  ) S
(NHIT = +1 implies a collision) S
LHL
(c) S
(         ) S
(-1    "    a near miss) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates & velocities must be with respect to the central body!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_stat) S
0.000 0.000 0.000 FG
( \(time,h,rcen,nbod,nbig,m,x0,v0,x1,v1,rce,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rphys,nclo,iclo,jclo,dclo,tclo,ixvclo,jxvclo,nhit,ihit,jhit,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  chit,dhit,thit,thit1,nowflag,stat,outfile,mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),nowflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nclo) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(iclo) S
0.000 0.000 0.000 FG
(\(CMAX\),jclo\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nhit) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ihit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(jhit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(chit) S
0.000 0.000 0.000 FG
(\(CMAX\),lmem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,nbod\),v0\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x1) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v1) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(rce) S
0.000 0.000 0.000 FG
(\(nbod\),rphys\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dclo) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(tclo) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(thit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(dhit) S
0.000 0.000 0.000 FG
(\(CMAX\),thit1) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ixvclo) S
0.000 0.000 0.000 FG
(\(6,CMAX\),jxvclo\(6,CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(,mem\(NMESS\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
EndPage
EndDSCPage
EndSheet

%%Page: 23 23
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1585 def
/PageNumber 23 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1584 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(d0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d0t) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d1t) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hm1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp0) S
0.000 0.000 0.000 FG
(,tmp1) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dx0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dy0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dz0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(du0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dv0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dw0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dx1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dy1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dz1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(du1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dv1) S
0.000 0.000 0.000 FG
(,dw1) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(xmin) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(xmax) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(ymin) S
0.000 0.000 0.000 FG
(\(NMAX\),ymax\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(d2min) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d2ce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d2near) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d2hit) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,tmin) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      nhit = 0) S
LHL
(      thit1 = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\(HUGE, h\)) S
LHL
(      hm1 = 1.d0 / h) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate maximum and minimum values of x and y coords for each object) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_box) S
0.000 0.000 0.000 FG
( \(nbod,h,x0,v0,x1,v1,xmin,xmax,ymin,ymax\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Adjust values by the maximum close-encounter radius plus a fudge factor) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        temp = rce\(j\) * 1.2d0) S
LHL
(        xmin\(j\) = xmin\(j\)  -  temp) S
LHL
(        xmax\(j\) = xmax\(j\)  +  temp) S
LHL
(        ymin\(j\) = ymin\(j\)  -  temp) S
LHL
(        ymax\(j\) = ymax\(j\)  +  temp) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check for close encounters between each pair of objects) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 2, nbig) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = i + 1, nbod) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(   xmax\(i\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(xmin\(j\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(xmax\(j\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(xmin\(i\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(ymax\(i\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(ymin\(j\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(ymax\(j\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(ymin\(i\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(stat\(i\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(stat\(j\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If the X-Y boxes for this pair overlap, check circumstances more closely) S
LHL
0.000 0.000 0.000 FG
(            dx0 = x0\(1,i\) - x0\(1,j\)) S
LHL
(            dy0 = x0\(2,i\) - x0\(2,j\)) S
LHL
(            dz0 = x0\(3,i\) - x0\(3,j\)) S
LHL
(            du0 = v0\(1,i\) - v0\(1,j\)) S
LHL
(            dv0 = v0\(2,i\) - v0\(2,j\)) S
LHL
(            dw0 = v0\(3,i\) - v0\(3,j\)) S
LHL
(            d0t = \(dx0*du0 + dy0*dv0 + dz0*dw0\) * 2.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(            dx1 = x1\(1,i\) - x1\(1,j\)) S
LHL
(            dy1 = x1\(2,i\) - x1\(2,j\)) S
LHL
(            dz1 = x1\(3,i\) - x1\(3,j\)) S
LHL
(            du1 = v1\(1,i\) - v1\(1,j\)) S
LHL
(            dv1 = v1\(2,i\) - v1\(2,j\)) S
LHL
(            dw1 = v1\(3,i\) - v1\(3,j\)) S
LHL
(            d1t = \(dx1*du1 + dy1*dv1 + dz1*dw1\) * 2.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Estimate minimum separation during the time interval, using interpolation) S
LHL
0.000 0.000 0.000 FG
(            d0 = dx0*dx0 + dy0*dy0 + dz0*dz0) S
LHL
(            d1 = dx1*dx1 + dy1*dy1 + dz1*dz1) S
LHL
(            ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_min) S
0.000 0.000 0.000 FG
( \(d0,d1,d0t,d1t,h,d2min,tmin\)) S
LHL
(            d2ce  = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
( \(rce\(i\), rce\(j\)\)) S
LHL
(            d2hit = rphys\(i\) + rphys\(j\)) S
LHL
(            d2ce   = d2ce  * d2ce) S
LHL
(            d2hit  = d2hit * d2hit) S
LHL
(            d2near = d2hit * 4.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If the minimum separation qualifies as an encounter or if a collision) S
LHL
(c) S
( ) S
(is in progress, store details) S
LHL
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(d2min) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(d2ce) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(d0t*h) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(d1t*h) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(\(d2min) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(d2hit\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              nclo = nclo + 1) S
LHL
(              ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nclo) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(CMAX\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
( 230) S
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(23,file=outfile,status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(,access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(            err=230\)) S
LHL
(                ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,2a,/,a\)') S
0.000 0.000 0.000 FG
(\) mem\(121\)\(1:lmem\(121\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(            mem\(132\)\(1:lmem\(132\)\),mem\(82\)\(1:lmem\(82\)\)) S
LHL
(                ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(23\)) S
LHL
(              ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(                tclo\(nclo\) = tmin + time) S
LHL
(                dclo\(nclo\) = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\(0.d0,d2min\)\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 24 24
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1657 def
/PageNumber 24 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1656 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(                iclo\(nclo\) = i) S
LHL
(                jclo\(nclo\) = j) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Make sure the more massive body is listed first) S
LHL
0.000 0.000 0.000 FG
(                ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(m\(j\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(m\(i\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(j) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(nbig\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(                  iclo\(nclo\) = j) S
LHL
(                  jclo\(nclo\) = i) S
LHL
(                ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Make linear interpolation to get coordinates at time of closest approach) S
LHL
0.000 0.000 0.000 FG
(                tmp0 = 1.d0 + tmin*hm1) S
LHL
(                tmp1 = -tmin*hm1) S
LHL
(                ixvclo\(1,nclo\) = tmp0 * x0\(1,i\)  +  tmp1 * x1\(1,i\)) S
LHL
(                ixvclo\(2,nclo\) = tmp0 * x0\(2,i\)  +  tmp1 * x1\(2,i\)) S
LHL
(                ixvclo\(3,nclo\) = tmp0 * x0\(3,i\)  +  tmp1 * x1\(3,i\)) S
LHL
(                ixvclo\(4,nclo\) = tmp0 * v0\(1,i\)  +  tmp1 * v1\(1,i\)) S
LHL
(                ixvclo\(5,nclo\) = tmp0 * v0\(2,i\)  +  tmp1 * v1\(2,i\)) S
LHL
(                ixvclo\(6,nclo\) = tmp0 * v0\(3,i\)  +  tmp1 * v1\(3,i\)) S
LHL
(                jxvclo\(1,nclo\) = tmp0 * x0\(1,j\)  +  tmp1 * x1\(1,j\)) S
LHL
(                jxvclo\(2,nclo\) = tmp0 * x0\(2,j\)  +  tmp1 * x1\(2,j\)) S
LHL
(                jxvclo\(3,nclo\) = tmp0 * x0\(3,j\)  +  tmp1 * x1\(3,j\)) S
LHL
(                jxvclo\(4,nclo\) = tmp0 * v0\(1,j\)  +  tmp1 * v1\(1,j\)) S
LHL
(                jxvclo\(5,nclo\) = tmp0 * v0\(2,j\)  +  tmp1 * v1\(2,j\)) S
LHL
(                jxvclo\(6,nclo\) = tmp0 * v0\(3,j\)  +  tmp1 * v1\(3,j\)) S
LHL
(              ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check for a near miss or collision) S
LHL
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(d2min) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(d2near\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              nhit = nhit + 1) S
LHL
(              ihit\(nhit\) = i) S
LHL
(              jhit\(nhit\) = j) S
LHL
(              thit\(nhit\) = tmin + time) S
LHL
(              dhit\(nhit\) = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(d2min\)) S
LHL
(              chit\(nhit\) = -1) S
LHL
(              ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(d2min) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(d2hit\) chit\(nhit\) = 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Make sure the more massive body is listed first) S
LHL
0.000 0.000 0.000 FG
(              ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(m\(jhit\(nhit\)\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(m\(ihit\(nhit\)\)) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(j) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(nbig\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(                ihit\(nhit\) = j) S
LHL
(                jhit\(nhit\) = i) S
LHL
(              ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Is this the collision closest to the start of the time step?) S
LHL
0.000 0.000 0.000 FG
(              ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(tmin-thit1\)*h) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(                thit1 = tmin) S
LHL
(                nowflag = 0) S
LHL
(                ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(d1) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(d2hit\) nowflag = 1) S
LHL
(              ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Move on to the next pair of objects) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_ACSH.FOR    \(ErikSoft  2 March 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates inverse hyperbolic cosine of an angle X \(in radians\).) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
EndPage
EndDSCPage
EndSheet

%%Page: 25 25
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1729 def
/PageNumber 25 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1728 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_acsh) S
0.000 0.000 0.000 FG
( \(x\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,mco_acsh) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(x) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(1.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        mco_acsh = ) S
0.855 0.439 0.839 FG
(log) S
0.000 0.000 0.000 FG
( \(x + ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(x*x - 1.d0\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        mco_acsh = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_B2H.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts barycentric coordinates to coordinates with respect to the central) S
LHL
(c) S
( ) S
(body.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_b2h) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,x,v,xh,vh,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opt\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),xh\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        xh\(1,j\) = x\(1,j\) - x\(1,1\)) S
LHL
(        xh\(2,j\) = x\(2,j\) - x\(2,1\)) S
LHL
(        xh\(3,j\) = x\(3,j\) - x\(3,1\)) S
LHL
(        vh\(1,j\) = v\(1,j\) - v\(1,1\)) S
LHL
(        vh\(2,j\) = v\(2,j\) - v\(2,1\)) S
LHL
(        vh\(3,j\) = v\(3,j\) - v\(3,1\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_DH2H.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts democratic heliocentric coordinates to coordinates with respect) S
EndPage
EndDSCPage
EndSheet

%%Page: 26 26
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1801 def
/PageNumber 26 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1800 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(to the central body.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_dh2h) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,x,v,xh,vh,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opt\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),xh\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mvsum) S
0.000 0.000 0.000 FG
(\(3\),temp) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      mvsum\(1\) = 0.d0) S
LHL
(      mvsum\(2\) = 0.d0) S
LHL
(      mvsum\(3\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        xh\(1,j\) = x\(1,j\)) S
LHL
(        xh\(2,j\) = x\(2,j\)) S
LHL
(        xh\(3,j\) = x\(3,j\)) S
LHL
(        mvsum\(1\) = mvsum\(1\)  +  m\(j\) * v\(1,j\)) S
LHL
(        mvsum\(2\) = mvsum\(2\)  +  m\(j\) * v\(2,j\)) S
LHL
(        mvsum\(3\) = mvsum\(3\)  +  m\(j\) * v\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      temp = 1.d0 / m\(1\)) S
LHL
(      mvsum\(1\) = temp * mvsum\(1\)) S
LHL
(      mvsum\(2\) = temp * mvsum\(2\)) S
LHL
(      mvsum\(3\) = temp * mvsum\(3\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        vh\(1,j\) = v\(1,j\) + mvsum\(1\)) S
LHL
(        vh\(2,j\) = v\(2,j\) + mvsum\(2\)) S
LHL
(        vh\(3,j\) = v\(3,j\) + mvsum\(3\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_IDEN.FOR    \(ErikSoft   2 November 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Makes a new copy of a set of coordinates.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,xh,vh,x,v,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opt\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),xh\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
EndPage
EndDSCPage
EndSheet

%%Page: 27 27
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1873 def
/PageNumber 27 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1872 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nbod) S
LHL
(        x\(1,j\) = xh\(1,j\)) S
LHL
(        x\(2,j\) = xh\(2,j\)) S
LHL
(        x\(3,j\) = xh\(3,j\)) S
LHL
(        v\(1,j\) = vh\(1,j\)) S
LHL
(        v\(2,j\) = vh\(2,j\)) S
LHL
(        v\(3,j\) = vh\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_MVS2H.FOR    \(ErikSoft   28 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Applies a symplectic corrector, which converts coordinates for a second-) S
LHL
(c) S
( ) S
(order mixed-variable symplectic integrator to ones with respect to the) S
LHL
(c) S
( ) S
(central body.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_mvs2h) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,x,v,xh,vh,ngf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ngflag,opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opt\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),xh\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(iflag) S
0.000 0.000 0.000 FG
(,stat\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(minside) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(msofar) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(gm) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(xj) S
0.000 0.000 0.000 FG
(\(3,NMAX\),vj\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ha) S
0.000 0.000 0.000 FG
(\(2\),) S
0.722 0.525 0.043 FG
(hb) S
0.000 0.000 0.000 FG
(\(2\),) S
0.722 0.525 0.043 FG
(rt10) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(angf) S
0.000 0.000 0.000 FG
(\(3,NMAX\),ausr\(3,NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      rt10 = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(10.d0\)) S
LHL
(      ha\(1\) =  h * rt10 * 3.d0 / 10.d0) S
LHL
(      hb\(1\) = -h * rt10 / 72.d0) S
LHL
(      ha\(2\) =  h * rt10 / 5.d0) S
LHL
(      hb\(2\) =  h * rt10 / 24.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        angf\(1,j\) = 0.d0) S
LHL
(        angf\(2,j\) = 0.d0) S
LHL
(        angf\(3,j\) = 0.d0) S
LHL
(        ausr\(1,j\) = 0.d0) S
LHL
(        ausr\(2,j\) = 0.d0) S
LHL
(        ausr\(3,j\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,x,v,xh,vh,ngf,ngflag,opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate effective central masses for Kepler drifts) S
LHL
0.000 0.000 0.000 FG
(      minside = m\(1\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbig) S
LHL
(        msofar = minside + m\(j\)) S
LHL
(        gm\(j\) = m\(1\) * msofar / minside) S
LHL
(        minside = msofar) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 28 28
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 1945 def
/PageNumber 28 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
1944 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Two step corrector) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Keplerian Hamiltonian \(Jacobi/helio coords for Big/Small bodies\)) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2j) S
0.000 0.000 0.000 FG
(\(time,jcen,nbig,nbig,h,m,xh,vh,xj,vj,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbig) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(gm\(j\),xj\(1,j\),xj\(2,j\),xj\(3,j\),vj\(1,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vj\(2,j\),vj\(3,j\),ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(m\(1\),xh\(1,j\),xh\(2,j\),xh\(3,j\),vh\(1,j\),vh\(2,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vh\(3,j\),ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Interaction Hamiltonian) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_j2h) S
0.000 0.000 0.000 FG
(\(time,jcen,nbig,nbig,h,m,xj,vj,xh,vh,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_mvs) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,xh,xj,a,stat\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If required, apply non-gravitational and user-defined forces) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_user) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,xh,vh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ausr\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_ngf) S
0.000 0.000 0.000 FG
( \(nbod,xh,vh,angf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ngf\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          vh\(1,j\) = vh\(1,j\)  -  hb\(k\) * \(angf\(1,j\) + ausr\(1,j\) + a\(1,j\)\)) S
LHL
(          vh\(2,j\) = vh\(2,j\)  -  hb\(k\) * \(angf\(2,j\) + ausr\(2,j\) + a\(2,j\)\)) S
LHL
(          vh\(3,j\) = vh\(3,j\)  -  hb\(k\) * \(angf\(3,j\) + ausr\(3,j\) + a\(3,j\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Keplerian Hamiltonian \(Jacobi/helio coords for Big/Small bodies\)) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2j) S
0.000 0.000 0.000 FG
(\(time,jcen,nbig,nbig,h,m,xh,vh,xj,vj,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbig) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(gm\(j\),xj\(1,j\),xj\(2,j\),xj\(3,j\),vj\(1,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vj\(2,j\),vj\(3,j\),-2.d0*ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(          iflag = 0) S
LHL
(         ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(m\(1\),xh\(1,j\),xh\(2,j\),xh\(3,j\),vh\(1,j\),vh\(2,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(     vh\(3,j\),-2.d0*ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Interaction Hamiltonian) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_j2h) S
0.000 0.000 0.000 FG
(\(time,jcen,nbig,nbig,h,m,xj,vj,xh,vh,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_mvs) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,xh,xj,a,stat\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If required, apply non-gravitational and user-defined forces) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_user) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,xh,vh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ausr\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_ngf) S
0.000 0.000 0.000 FG
( \(nbod,xh,vh,angf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ngf\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          vh\(1,j\) = vh\(1,j\)  +  hb\(k\) * \(angf\(1,j\) + ausr\(1,j\) + a\(1,j\)\)) S
LHL
(          vh\(2,j\) = vh\(2,j\)  +  hb\(k\) * \(angf\(2,j\) + ausr\(2,j\) + a\(2,j\)\)) S
LHL
(          vh\(3,j\) = vh\(3,j\)  +  hb\(k\) * \(angf\(3,j\) + ausr\(3,j\) + a\(3,j\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Keplerian Hamiltonian \(Jacobi/helio coords for Big/Small bodies\)) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2j) S
0.000 0.000 0.000 FG
(\(time,jcen,nbig,nbig,h,m,xh,vh,xj,vj,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbig) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(gm\(j\),xj\(1,j\),xj\(2,j\),xj\(3,j\),vj\(1,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vj\(2,j\),vj\(3,j\),ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(m\(1\),xh\(1,j\),xh\(2,j\),xh\(3,j\),vh\(1,j\),vh\(2,j\),) S
EndPage
EndDSCPage
EndSheet

%%Page: 29 29
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2017 def
/PageNumber 29 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2016 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vh\(3,j\),ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_j2h) S
0.000 0.000 0.000 FG
(\(time,jcen,nbig,nbig,h,m,xj,vj,xh,vh,ngf,ngflag,opt\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_EL2X.FOR    \(ErikSoft  7 July 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates Cartesian coordinates and velocities given Keplerian orbital) S
LHL
(c) S
( ) S
(elements \(for elliptical, parabolic or hyperbolic orbits\).) S
LHL
(c) S
LHL
(c) S
( ) S
(Based on a routine from Levison and Duncan's SWIFT integrator.) S
LHL
(c) S
LHL
(c) S
(  ) S
(gm = grav const * \(central + secondary mass\)) S
LHL
(c) S
(  ) S
(q = perihelion distance) S
LHL
(c) S
(  ) S
(e = eccentricity) S
LHL
(c) S
(  ) S
(i = inclination                 \)) S
LHL
(c) S
(  ) S
(p = longitude of perihelion !!! \)   in) S
LHL
(c) S
(  ) S
(n = longitude of ascending node \) radians) S
LHL
(c) S
(  ) S
(l = mean anomaly                \)) S
LHL
(c) S
LHL
(c) S
(  ) S
(x,y,z = Cartesian positions  \( units the same as a \)) S
LHL
(c) S
(  ) S
(u,v,w =     "     velocities \( units the same as sqrt\(gm/a\) \)) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_el2x) S
0.000 0.000 0.000 FG
( \(gm,q,e,i,p,n,l,x,y,z,u,v,w\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(gm) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(n) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(,w) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(g) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ci) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(si) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(cn) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sn) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(cg) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sg) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(se) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(romes) S
0.000 0.000 0.000 FG
(,temp) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(z1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d11) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d12) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d13) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d21) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d22) S
0.000 0.000 0.000 FG
(,d23) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mco_kep) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(orbel_fhybrid) S
0.000 0.000 0.000 FG
(, orbel_zget) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Change from longitude of perihelion to argument of perihelion) S
LHL
0.000 0.000 0.000 FG
(      g = p - n) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Rotation factors) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(i,si,ci\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(g,sg,cg\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(n,sn,cn\)) S
LHL
(      z1 = cg * cn) S
LHL
(      z2 = cg * sn) S
LHL
(      z3 = sg * cn) S
LHL
(      z4 = sg * sn) S
LHL
(      d11 =  z1 - z4*ci) S
LHL
(      d12 =  z2 + z3*ci) S
LHL
(      d13 = sg * si) S
LHL
(      d21 = -z3 - z2*ci) S
LHL
(      d22 = -z4 + z1*ci) S
LHL
(      d23 = cg * si) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Semi-major axis) S
LHL
0.000 0.000 0.000 FG
(      a = q / \(1.d0 - e\)) S
LHL
0.698 0.133 0.133 FG
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 30 30
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2089 def
/PageNumber 30 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2088 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Ellipse) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        romes = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(1.d0 - e*e\)) S
LHL
(        temp = mco_kep \(e,l\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(temp,se,ce\)) S
LHL
(        z1 = a * \(ce - e\)) S
LHL
(        z2 = a * romes * se) S
LHL
(        temp = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(gm/a\) / \(1.d0 - e*ce\)) S
LHL
(        z3 = -se * temp) S
LHL
(        z4 = romes * ce * temp) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Parabola) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(e) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ce = orbel_zget\(l\)) S
LHL
(          z1 = q * \(1.d0 - ce*ce\)) S
LHL
(          z2 = 2.d0 * q * ce) S
LHL
(          z4 = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(2.d0*gm/q\) / \(1.d0 + ce*ce\)) S
LHL
(          z3 = -ce * z4) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Hyperbola) S
LHL
0.000 0.000 0.000 FG
(          romes = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(e*e - 1.d0\)) S
LHL
(          temp = orbel_fhybrid\(e,l\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sinh) S
0.000 0.000 0.000 FG
( \(temp,se,ce\)) S
LHL
(          z1 = a * \(ce - e\)) S
LHL
(          z2 = -a * romes * se) S
LHL
(          temp = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(gm/) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(a\)\) / \(e*ce - 1.d0\)) S
LHL
(          z3 = -se * temp) S
LHL
(          z4 = romes * ce * temp) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      x = d11 * z1  +  d21 * z2) S
LHL
(      y = d12 * z1  +  d22 * z2) S
LHL
(      z = d13 * z1  +  d23 * z2) S
LHL
(      u = d11 * z3  +  d21 * z4) S
LHL
(      v = d12 * z3  +  d22 * z4) S
LHL
(      w = d13 * z3  +  d23 * z4) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_H2B.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts coordinates with respect to the central body to barycentric) S
LHL
(c) S
( ) S
(coordinates.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2b) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,xh,vh,x,v,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opt\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),x\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mtot) S
0.000 0.000 0.000 FG
(,temp) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 31 31
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2161 def
/PageNumber 31 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2160 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(      mtot = 0.d0) S
LHL
(      x\(1,1\) = 0.d0) S
LHL
(      x\(2,1\) = 0.d0) S
LHL
(      x\(3,1\) = 0.d0) S
LHL
(      v\(1,1\) = 0.d0) S
LHL
(      v\(2,1\) = 0.d0) S
LHL
(      v\(3,1\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate coordinates and velocities of the central body) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        mtot = mtot  +  m\(j\)) S
LHL
(        x\(1,1\) = x\(1,1\)  +  m\(j\) * xh\(1,j\)) S
LHL
(        x\(2,1\) = x\(2,1\)  +  m\(j\) * xh\(2,j\)) S
LHL
(        x\(3,1\) = x\(3,1\)  +  m\(j\) * xh\(3,j\)) S
LHL
(        v\(1,1\) = v\(1,1\)  +  m\(j\) * vh\(1,j\)) S
LHL
(        v\(2,1\) = v\(2,1\)  +  m\(j\) * vh\(2,j\)) S
LHL
(        v\(3,1\) = v\(3,1\)  +  m\(j\) * vh\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      temp = -1.d0 / \(mtot + m\(1\)\)) S
LHL
(      x\(1,1\) = temp * x\(1,1\)) S
LHL
(      x\(2,1\) = temp * x\(2,1\)) S
LHL
(      x\(3,1\) = temp * x\(3,1\)) S
LHL
(      v\(1,1\) = temp * v\(1,1\)) S
LHL
(      v\(2,1\) = temp * v\(2,1\)) S
LHL
(      v\(3,1\) = temp * v\(3,1\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate the barycentric coordinates and velocities) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        x\(1,j\) = xh\(1,j\) + x\(1,1\)) S
LHL
(        x\(2,j\) = xh\(2,j\) + x\(2,1\)) S
LHL
(        x\(3,j\) = xh\(3,j\) + x\(3,1\)) S
LHL
(        v\(1,j\) = vh\(1,j\) + v\(1,1\)) S
LHL
(        v\(2,j\) = vh\(2,j\) + v\(2,1\)) S
LHL
(        v\(3,j\) = vh\(3,j\) + v\(3,1\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_H2MVS.FOR    \(ErikSoft   28 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Applies an inverse symplectic corrector, which converts coordinates with) S
LHL
(c) S
( ) S
(respect to the central body to integrator coordinates for a second-order) S
LHL
(c) S
( ) S
(mixed-variable symplectic integrator.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2mvs) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,xh,vh,x,v,ngf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ngflag,opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opt\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),x\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(iflag) S
0.000 0.000 0.000 FG
(,stat\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(minside) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(msofar) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(gm) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(xj) S
0.000 0.000 0.000 FG
(\(3,NMAX\),vj\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ha) S
0.000 0.000 0.000 FG
(\(2\),) S
0.722 0.525 0.043 FG
(hb) S
0.000 0.000 0.000 FG
(\(2\),) S
0.722 0.525 0.043 FG
(rt10) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(angf) S
0.000 0.000 0.000 FG
(\(3,NMAX\),ausr\(3,NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 32 32
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2233 def
/PageNumber 32 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2232 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      rt10 = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(10.d0\)) S
LHL
(      ha\(1\) = -h * rt10 / 5.d0) S
LHL
(      hb\(1\) = -h * rt10 / 24.d0) S
LHL
(      ha\(2\) = -h * rt10 * 3.d0 / 10.d0) S
LHL
(      hb\(2\) =  h * rt10 / 72.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        angf\(1,j\) = 0.d0) S
LHL
(        angf\(2,j\) = 0.d0) S
LHL
(        angf\(3,j\) = 0.d0) S
LHL
(        ausr\(1,j\) = 0.d0) S
LHL
(        ausr\(2,j\) = 0.d0) S
LHL
(        ausr\(3,j\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,xh,vh,x,v,ngf,ngflag,opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate effective central masses for Kepler drifts) S
LHL
0.000 0.000 0.000 FG
(      minside = m\(1\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbig) S
LHL
(        msofar = minside + m\(j\)) S
LHL
(        gm\(j\) = m\(1\) * msofar / minside) S
LHL
(        minside = msofar) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Keplerian Hamiltonian \(Jacobi/helio coords for Big/Small bodies\)) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2j) S
0.000 0.000 0.000 FG
( \(time,jcen,nbig,nbig,h,m,x,v,xj,vj,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbig) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(gm\(j\),xj\(1,j\),xj\(2,j\),xj\(3,j\),vj\(1,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vj\(2,j\),vj\(3,j\),ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(m\(1\),x\(1,j\),x\(2,j\),x\(3,j\),v\(1,j\),v\(2,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      v\(3,j\),ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Interaction Hamiltonian) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_j2h) S
0.000 0.000 0.000 FG
( \(time,jcen,nbig,nbig,h,m,xj,vj,x,v,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_mvs) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,xj,a,stat\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If required, apply non-gravitational and user-defined forces) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_user) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,x,v,ausr\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_ngf) S
0.000 0.000 0.000 FG
( \(nbod,x,v,angf,ngf\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          v\(1,j\) = v\(1,j\)  +  hb\(k\) * \(angf\(1,j\) + ausr\(1,j\) + a\(1,j\)\)) S
LHL
(          v\(2,j\) = v\(2,j\)  +  hb\(k\) * \(angf\(2,j\) + ausr\(2,j\) + a\(2,j\)\)) S
LHL
(          v\(3,j\) = v\(3,j\)  +  hb\(k\) * \(angf\(3,j\) + ausr\(3,j\) + a\(3,j\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Keplerian Hamiltonian \(Jacobi/helio coords for Big/Small bodies\)) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2j) S
0.000 0.000 0.000 FG
( \(time,jcen,nbig,nbig,h,m,x,v,xj,vj,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbig) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(gm\(j\),xj\(1,j\),xj\(2,j\),xj\(3,j\),vj\(1,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vj\(2,j\),vj\(3,j\),-2.d0*ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(m\(1\),x\(1,j\),x\(2,j\),x\(3,j\),v\(1,j\),v\(2,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      v\(3,j\),-2.d0*ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Interaction Hamiltonian) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_j2h) S
0.000 0.000 0.000 FG
( \(time,jcen,nbig,nbig,h,m,xj,vj,x,v,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_mvs) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,xj,a,stat\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If required, apply non-gravitational and user-defined forces) S
EndPage
EndDSCPage
EndSheet

%%Page: 33 33
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2305 def
/PageNumber 33 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2304 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_user) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,x,v,ausr\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_ngf) S
0.000 0.000 0.000 FG
( \(nbod,x,v,angf,ngf\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          v\(1,j\) = v\(1,j\)  -  hb\(k\) * \(angf\(1,j\) + ausr\(1,j\) + a\(1,j\)\)) S
LHL
(          v\(2,j\) = v\(2,j\)  -  hb\(k\) * \(angf\(2,j\) + ausr\(2,j\) + a\(2,j\)\)) S
LHL
(          v\(3,j\) = v\(3,j\)  -  hb\(k\) * \(angf\(3,j\) + ausr\(3,j\) + a\(3,j\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Keplerian Hamiltonian \(Jacobi/helio coords for Big/Small bodies\)) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2j) S
0.000 0.000 0.000 FG
( \(time,jcen,nbig,nbig,h,m,x,v,xj,vj,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbig) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(gm\(j\),xj\(1,j\),xj\(2,j\),xj\(3,j\),vj\(1,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      vj\(2,j\),vj\(3,j\),ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(          iflag = 0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(m\(1\),x\(1,j\),x\(2,j\),x\(3,j\),v\(1,j\),v\(2,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      v\(3,j\),ha\(k\),iflag\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_j2h) S
0.000 0.000 0.000 FG
( \(time,jcen,nbig,nbig,h,m,xj,vj,x,v,ngf,ngflag,opt\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_H2DH.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Convert coordinates with respect to the central body to democratic) S
LHL
(c) S
( ) S
(heliocentric coordinates.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2dh) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,xh,vh,x,v,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opt\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),x\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mtot) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,mvsum\(3\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      mtot = 0.d0) S
LHL
(      mvsum\(1\) = 0.d0) S
LHL
(      mvsum\(2\) = 0.d0) S
LHL
(      mvsum\(3\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        x\(1,j\) = xh\(1,j\)) S
LHL
(        x\(2,j\) = xh\(2,j\)) S
LHL
(        x\(3,j\) = xh\(3,j\)) S
LHL
(        mtot = mtot + m\(j\)) S
LHL
(        mvsum\(1\) = mvsum\(1\)  +  m\(j\) * vh\(1,j\)) S
LHL
(        mvsum\(2\) = mvsum\(2\)  +  m\(j\) * vh\(2,j\)) S
LHL
(        mvsum\(3\) = mvsum\(3\)  +  m\(j\) * vh\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 34 34
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2377 def
/PageNumber 34 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2376 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      temp = 1.d0 / \(m\(1\) + mtot\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      mvsum\(1\) = temp * mvsum\(1\)) S
LHL
(      mvsum\(2\) = temp * mvsum\(2\)) S
LHL
(      mvsum\(3\) = temp * mvsum\(3\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        v\(1,j\) = vh\(1,j\) - mvsum\(1\)) S
LHL
(        v\(2,j\) = vh\(2,j\) - mvsum\(2\)) S
LHL
(        v\(3,j\) = vh\(3,j\) - mvsum\(3\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_H2J.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts coordinates with respect to the central body to Jacobi coordinates.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. The coordinates respect to the central body for the small bodies) S
LHL
(c) S
( ) S
(===  are assumed to be equal to their Jacobi coordinates.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2j) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,xh,vh,x,v,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opt\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbig\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbig\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbig\),x\(3,nbig\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbig\),ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mtot) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mx) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(my) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mz) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mv) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mw) S
0.000 0.000 0.000 FG
(, temp) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
(c) S
LHL
0.000 0.000 0.000 FG
(      mtot = m\(2\)) S
LHL
(      x\(1,2\) = xh\(1,2\)) S
LHL
(      x\(2,2\) = xh\(2,2\)) S
LHL
(      x\(3,2\) = xh\(3,2\)) S
LHL
(      v\(1,2\) = vh\(1,2\)) S
LHL
(      v\(2,2\) = vh\(2,2\)) S
LHL
(      v\(3,2\) = vh\(3,2\)) S
LHL
(      mx = m\(2\) * xh\(1,2\)) S
LHL
(      my = m\(2\) * xh\(2,2\)) S
LHL
(      mz = m\(2\) * xh\(3,2\)) S
LHL
(      mu = m\(2\) * vh\(1,2\)) S
LHL
(      mv = m\(2\) * vh\(2,2\)) S
LHL
(      mw = m\(2\) * vh\(3,2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 3, nbig - 1) S
LHL
(        temp = 1.d0 / \(mtot + m\(1\)\)) S
LHL
(        mtot = mtot + m\(j\)) S
LHL
(        x\(1,j\) = xh\(1,j\)  -  temp * mx) S
LHL
(        x\(2,j\) = xh\(2,j\)  -  temp * my) S
LHL
(        x\(3,j\) = xh\(3,j\)  -  temp * mz) S
LHL
(        v\(1,j\) = vh\(1,j\)  -  temp * mu) S
LHL
(        v\(2,j\) = vh\(2,j\)  -  temp * mv) S
LHL
(        v\(3,j\) = vh\(3,j\)  -  temp * mw) S
LHL
(        mx = mx  +  m\(j\) * xh\(1,j\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 35 35
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2449 def
/PageNumber 35 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2448 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        my = my  +  m\(j\) * xh\(2,j\)) S
LHL
(        mz = mz  +  m\(j\) * xh\(3,j\)) S
LHL
(        mu = mu  +  m\(j\) * vh\(1,j\)) S
LHL
(        mv = mv  +  m\(j\) * vh\(2,j\)) S
LHL
(        mw = mw  +  m\(j\) * vh\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nbig) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        temp = 1.d0 / \(mtot + m\(1\)\)) S
LHL
(        x\(1,nbig\) = xh\(1,nbig\)  -  temp * mx) S
LHL
(        x\(2,nbig\) = xh\(2,nbig\)  -  temp * my) S
LHL
(        x\(3,nbig\) = xh\(3,nbig\)  -  temp * mz) S
LHL
(        v\(1,nbig\) = vh\(1,nbig\)  -  temp * mu) S
LHL
(        v\(2,nbig\) = vh\(2,nbig\)  -  temp * mv) S
LHL
(        v\(3,nbig\) = vh\(3,nbig\)  -  temp * mw) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(        x\(1,j\) = xh\(1,j\)) S
LHL
(        x\(2,j\) = xh\(2,j\)) S
LHL
(        x\(3,j\) = xh\(3,j\)) S
LHL
(        v\(1,j\) = vh\(1,j\)) S
LHL
(        v\(2,j\) = vh\(2,j\)) S
LHL
(        v\(3,j\) = vh\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_J2H.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts Jacobi coordinates to coordinates with respect to the central) S
LHL
(c) S
( ) S
(body.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. The Jacobi coordinates of the small bodies are assumed to be equal) S
LHL
(c) S
( ) S
(===  to their coordinates with respect to the central body.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_j2h) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h,m,x,v,xh,vh,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opt\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),xh\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mtot) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mx) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(my) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mz) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mv) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(mw) S
0.000 0.000 0.000 FG
(, temp) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      xh\(1,2\) = x\(1,2\)) S
LHL
(      xh\(2,2\) = x\(2,2\)) S
LHL
(      xh\(3,2\) = x\(3,2\)) S
LHL
(      vh\(1,2\) = v\(1,2\)) S
LHL
(      vh\(2,2\) = v\(2,2\)) S
LHL
(      vh\(3,2\) = v\(3,2\)) S
LHL
(      mtot = m\(2\)) S
LHL
(      temp = m\(2\) / \(mtot + m\(1\)\)) S
LHL
(      mx = temp * x\(1,2\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 36 36
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2521 def
/PageNumber 36 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2520 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      my = temp * x\(2,2\)) S
LHL
(      mz = temp * x\(3,2\)) S
LHL
(      mu = temp * v\(1,2\)) S
LHL
(      mv = temp * v\(2,2\)) S
LHL
(      mw = temp * v\(3,2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 3, nbig - 1) S
LHL
(        xh\(1,j\) = x\(1,j\) + mx) S
LHL
(        xh\(2,j\) = x\(2,j\) + my) S
LHL
(        xh\(3,j\) = x\(3,j\) + mz) S
LHL
(        vh\(1,j\) = v\(1,j\) + mu) S
LHL
(        vh\(2,j\) = v\(2,j\) + mv) S
LHL
(        vh\(3,j\) = v\(3,j\) + mw) S
LHL
(        mtot = mtot + m\(j\)) S
LHL
(        temp = m\(j\) / \(mtot + m\(1\)\)) S
LHL
(        mx = mx  +  temp * x\(1,j\)) S
LHL
(        my = my  +  temp * x\(2,j\)) S
LHL
(        mz = mz  +  temp * x\(3,j\)) S
LHL
(        mu = mu  +  temp * v\(1,j\)) S
LHL
(        mv = mv  +  temp * v\(2,j\)) S
LHL
(        mw = mw  +  temp * v\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nbig) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        xh\(1,nbig\) = x\(1,nbig\) + mx) S
LHL
(        xh\(2,nbig\) = x\(2,nbig\) + my) S
LHL
(        xh\(3,nbig\) = x\(3,nbig\) + mz) S
LHL
(        vh\(1,nbig\) = v\(1,nbig\) + mu) S
LHL
(        vh\(2,nbig\) = v\(2,nbig\) + mv) S
LHL
(        vh\(3,nbig\) = v\(3,nbig\) + mw) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(        xh\(1,j\) = x\(1,j\)) S
LHL
(        xh\(2,j\) = x\(2,j\)) S
LHL
(        xh\(3,j\) = x\(3,j\)) S
LHL
(        vh\(1,j\) = v\(1,j\)) S
LHL
(        vh\(2,j\) = v\(2,j\)) S
LHL
(        vh\(3,j\) = v\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_KEP.FOR    \(ErikSoft  7 July 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Solves Kepler's equation for eccentricities less than one.) S
LHL
(c) S
( ) S
(Algorithm from A. Nijenhuis \(1991\) Cel. Mech. Dyn. Astron. 51, 319-330.) S
LHL
(c) S
LHL
(c) S
(  ) S
(e = eccentricity) S
LHL
(c) S
(  ) S
(l = mean anomaly      \(radians\)) S
LHL
(c) S
(  ) S
(u = eccentric anomaly \(   "   \)) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_kep) S
0.000 0.000 0.000 FG
( \(e,oldl\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Outout) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(oldl) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,mco_kep) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(pi) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(twopi) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(piby2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ome) S
0.000 0.000 0.000 FG
(,sign) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sn) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dsn) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f2) S
0.000 0.000 0.000 FG
(,f3) S
EndPage
EndDSCPage
EndSheet

%%Page: 37 37
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2593 def
/PageNumber 37 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2592 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(p) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ss) S
0.000 0.000 0.000 FG
(,cc) S
LHL
(      ) S
0.133 0.545 0.133 FG
(logical) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(flag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(big) S
0.000 0.000 0.000 FG
(,bigg) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      pi = 3.141592653589793d0) S
LHL
(      twopi = 2.d0 * pi) S
LHL
(      piby2 = .5d0 * pi) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Reduce mean anomaly to lie in the range 0 < l < pi) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(oldl) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        l = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(oldl, twopi\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        l = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(oldl, twopi\) + twopi) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      sign = 1.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(pi\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        l = twopi - l) S
LHL
(        sign = -1.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ome = 1.d0 - e) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(.45d0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(.55d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Regions A,B or C in Nijenhuis) S
LHL
(c) S
( ) S
(-----------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Rough starting value for eccentric anomaly) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(ome\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          u1 = ome) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(\(pi-1.d0-e\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            u1 = \(l+e*pi\)/\(1.d0+e\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            u1 = l + e) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Improved value using Halley's method) S
LHL
0.000 0.000 0.000 FG
(        flag = u1) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(piby2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(flag\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          x = pi - u1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          x = u1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        x2 = x*x) S
LHL
(        sn = x*\(1.d0 + x2*\(-.16605 + x2*.00761\) \)) S
LHL
(        dsn = 1.d0 + x2*\(-.49815 + x2*.03805\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(flag\) dsn = -dsn) S
LHL
(        f2 = e*sn) S
LHL
(        f0 = u1 - f2 - l) S
LHL
(        f1 = 1.d0 - e*dsn) S
LHL
(        u2 = u1 - f0/\(f1 - .5d0*f0*f2/f1\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Region D in Nijenhuis) S
LHL
(c) S
( ) S
(---------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Rough starting value for eccentric anomaly) S
LHL
0.000 0.000 0.000 FG
(        z1 = 4.d0*e + .5d0) S
LHL
(        p = ome / z1) S
LHL
(        q = .5d0 * l / z1) S
LHL
(        p2 = p*p) S
LHL
(        z2 = ) S
0.855 0.439 0.839 FG
(exp) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(log) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dsqrt) S
0.000 0.000 0.000 FG
(\( p2*p + q*q \) + q \)/1.5 \)) S
LHL
(        u1 = 2.d0*q / \( z2 + p + p2/z2 \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Improved value using Newton's method) S
LHL
0.000 0.000 0.000 FG
(        z2 = u1*u1) S
LHL
(        z3 = z2*z2) S
LHL
(        u2 = u1 - .075d0*u1*z3 / \(ome + z1*z2 + .375d0*z3\)) S
LHL
(        u2 = l + e*u2*\( 3.d0 - 4.d0*u2*u2 \)) S
EndPage
EndDSCPage
EndSheet

%%Page: 38 38
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2665 def
/PageNumber 38 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2664 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Accurate value using 3rd-order version of Newton's method) S
LHL
(c) S
( ) S
(N.B. Keep cos\(u2\) rather than sqrt\( 1-sin^2\(u2\) \) to maintain accuracy!) S
LHL
(c) S
LHL
(c) S
( ) S
(First get accurate values for u2 - sin\(u2\) and 1 - cos\(u2\)) S
LHL
0.000 0.000 0.000 FG
(      bigg = \(u2) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(piby2\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(bigg\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        z3 = pi - u2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        z3 = u2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      big = \(z3) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(\(.5d0*piby2\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(big\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        x = piby2 - z3) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        x = z3) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      x2 = x*x) S
LHL
(      ss = 1.d0) S
LHL
(      cc = 1.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ss = x*x2/6.*\(1. - x2/20.*\(1. - x2/42.*\(1. - x2/72.*\(1. -) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   x2/110.*\(1. - x2/156.*\(1. - x2/210.*\(1. - x2/272.\)\)\)\)\)\)\)) S
LHL
(      cc =   x2/2.*\(1. - x2/12.*\(1. - x2/30.*\(1. - x2/56.*\(1. -) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   x2/ 90.*\(1. - x2/132.*\(1. - x2/182.*\(1. - x2/240.*\(1. -) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   x2/306.\)\)\)\)\)\)\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(big\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        z1 = cc + z3 - 1.d0) S
LHL
(        z2 = ss + z3 + 1.d0 - piby2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        z1 = ss) S
LHL
(        z2 = cc) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(bigg\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        z1 = 2.d0*u2 + z1 - pi) S
LHL
(        z2 = 2.d0 - z2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      f0 = l - u2*ome - e*z1) S
LHL
(      f1 = ome + e*z2) S
LHL
(      f2 = .5d0*e*\(u2-z1\)) S
LHL
(      f3 = e/6.d0*\(1.d0-z2\)) S
LHL
(      z1 = f0/f1) S
LHL
(      z2 = f0/\(f2*z1+f1\)) S
LHL
(      mco_kep = sign*\( u2 + f0/\(\(f3*z1+f2\)*z2+f1\) \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_SINE.FOR    \(ErikSoft  17 April 1997\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates sin and cos of an angle X \(in radians\).) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(x,sx,cx\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 39 39
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2737 def
/PageNumber 39 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2736 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sx) S
0.000 0.000 0.000 FG
(,cx) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(pi) S
0.000 0.000 0.000 FG
(,twopi) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      pi = 3.141592653589793d0) S
LHL
(      twopi = 2.d0 * pi) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(x) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        x = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(x,twopi\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        x = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(x,twopi\) + twopi) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      cx = ) S
0.855 0.439 0.839 FG
(cos) S
0.000 0.000 0.000 FG
(\(x\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(x) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(pi\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        sx = -) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(1.d0 - cx*cx\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        sx =  ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(1.d0 - cx*cx\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_SINH.FOR    \(ErikSoft  12 June 1998\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates sinh and cosh of an angle X \(in radians\)) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sinh) S
0.000 0.000 0.000 FG
( \(x,sx,cx\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sx) S
0.000 0.000 0.000 FG
(,cx) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      sx = ) S
0.855 0.439 0.839 FG
(sinh) S
0.000 0.000 0.000 FG
(\(x\)) S
LHL
(      cx = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
( \(1.d0 + sx*sx\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_X2A.FOR    \(ErikSoft   4 October 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates an object's orbital semi-major axis given its Cartesian coords.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2a) S
0.000 0.000 0.000 FG
( \(gm,x,y,z,u,v,w,a,r,v2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 40 40
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2809 def
/PageNumber 40 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2808 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(gm) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(w) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(,v2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      r  = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(x * x  +  y * y  +  z * z\)) S
LHL
(      v2 =      u * u  +  v * v  +  w * w) S
LHL
(      a  = gm * r / \(2.d0 * gm  -  r * v2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_X2OV.FOR    \(ErikSoft   20 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates output variables for an object given its coordinates and) S
LHL
(c) S
( ) S
(velocities. The output variables are:) S
LHL
(c) S
(  ) S
(r = the radial distance) S
LHL
(c) S
(  ) S
(theta = polar angle) S
LHL
(c) S
(  ) S
(phi = azimuthal angle) S
LHL
(c) S
(  ) S
(fv = 1 / [1 + 2\(ke/be\)^2], where be and ke are the object's binding and) S
LHL
(c) S
(                             ) S
(kinetic energies. \(Note that 0 < fv < 1\).) S
LHL
(c) S
(  ) S
(vtheta = polar angle of velocity vector) S
LHL
(c) S
(  ) S
(vphi = azimuthal angle of the velocity vector) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2ov) S
0.000 0.000 0.000 FG
( \(rcen,rmax,mcen,m,x,y,z,u,v,w,fr,theta,phi,fv,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  vtheta,vphi\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(w) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fr) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(theta) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(phi) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fv) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vtheta) S
0.000 0.000 0.000 FG
(,vphi) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(be) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ke) S
0.000 0.000 0.000 FG
(,temp) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(        r = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(x*x + y*y + z*z\)) S
LHL
(        v2 =     u*u + v*v + w*w) S
LHL
(        v1 = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(v2\)) S
LHL
(        be = \(mcen + m\) / r) S
LHL
(        ke = .5d0 * v2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        fr = ) S
0.855 0.439 0.839 FG
(log10) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\(r, rcen\), rmax\) / rcen\)) S
LHL
(        temp = ke / be) S
LHL
(        fv = 1.d0 / \(1.d0 + 2.d0*temp*temp\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        theta  = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(acos) S
0.000 0.000 0.000 FG
( \(z / r\) + TWOPI, TWOPI\)) S
LHL
(        vtheta = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(acos) S
0.000 0.000 0.000 FG
( \(w / v1\) + TWOPI, TWOPI\)) S
LHL
(        phi  = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(atan2) S
0.000 0.000 0.000 FG
( \(y, x\) + TWOPI, TWOPI\)) S
LHL
(        vphi = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(atan2) S
0.000 0.000 0.000 FG
( \(v, u\) + TWOPI, TWOPI\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MCO_X2EL.FOR    \(ErikSoft  23 January 2001\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 41 41
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2881 def
/PageNumber 41 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2880 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates Keplerian orbital elements given relative coordinates and) S
LHL
(c) S
( ) S
(velocities, and GM = G times the sum of the masses.) S
LHL
(c) S
LHL
(c) S
( ) S
(The elements are: q = perihelion distance) S
LHL
(c) S
(                   ) S
(e = eccentricity) S
LHL
(c) S
(                   ) S
(i = inclination) S
LHL
(c) S
(                   ) S
(p = longitude of perihelion \(NOT argument of perihelion!!\)) S
LHL
(c) S
(                   ) S
(n = longitude of ascending node) S
LHL
(c) S
(                   ) S
(l = mean anomaly \(or mean longitude if e < 1.e-8\)) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2el) S
0.000 0.000 0.000 FG
( \(gm,x,y,z,u,v,w,q,e,i,p,n,l\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(gm) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(n) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(,w) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(hx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hz) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(v2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rv) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(,true) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ci) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(to) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(bige) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(cf) S
0.000 0.000 0.000 FG
(,ce) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      hx = y * w  -  z * v) S
LHL
(      hy = z * u  -  x * w) S
LHL
(      hz = x * v  -  y * u) S
LHL
(      h2 = hx*hx + hy*hy + hz*hz) S
LHL
(      v2 = u * u  +  v * v  +  w * w) S
LHL
(      rv = x * u  +  y * v  +  z * w) S
LHL
(      r = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(x*x + y*y + z*z\)) S
LHL
(      h = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(h2\)) S
LHL
(      s = h2 / gm) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Inclination and node) S
LHL
0.000 0.000 0.000 FG
(      ci = hz / h) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(ci\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        i = ) S
0.855 0.439 0.839 FG
(acos) S
0.000 0.000 0.000 FG
( \(ci\)) S
LHL
(        n = ) S
0.855 0.439 0.839 FG
(atan2) S
0.000 0.000 0.000 FG
( \(hx,-hy\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(n) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) n = n + TWOPI) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ci) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) i = 0.d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ci) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) i = PI) S
LHL
(        n = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Eccentricity and perihelion distance) S
LHL
0.000 0.000 0.000 FG
(      temp = 1.d0  +  s * \(v2 / gm  -  2.d0 / r\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(temp) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        e = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        e = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
( \(temp\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      q = s / \(1.d0 + e\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(True longitude) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(hy) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        to = -hx/hy) S
LHL
(        temp = \(1.d0 - ci\) * to) S
LHL
(        tmp2 = to * to) S
LHL
(        true = ) S
0.855 0.439 0.839 FG
(atan2) S
0.000 0.000 0.000 FG
(\(\(y*\(1.d0+tmp2*ci\)-x*temp\),\(x*\(tmp2+ci\)-y*temp\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        true = ) S
0.855 0.439 0.839 FG
(atan2) S
0.000 0.000 0.000 FG
(\(y * ci, x\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ci) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) true = true + PI) S
EndPage
EndDSCPage
EndSheet

%%Page: 42 42
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 2953 def
/PageNumber 42 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
2952 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(3.d-8\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        p = 0.d0) S
LHL
(        l = true) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ce = \(v2*r - gm\) / \(e*gm\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Mean anomaly for ellipse) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(e) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(ce\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(1\) ce = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\(1.d0,ce\)) S
LHL
(          bige = ) S
0.855 0.439 0.839 FG
(acos) S
0.000 0.000 0.000 FG
(\(ce\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(rv) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) bige = TWOPI - bige) S
LHL
(          l = bige - e*) S
0.855 0.439 0.839 FG
(sin) S
0.000 0.000 0.000 FG
(\(bige\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Mean anomaly for hyperbola) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ce) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) ce = 1.d0) S
LHL
(          bige = ) S
0.855 0.439 0.839 FG
(log) S
0.000 0.000 0.000 FG
(\( ce + ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(ce*ce-1.d0\) \)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(rv) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) bige = - bige) S
LHL
(          l = e*) S
0.855 0.439 0.839 FG
(sinh) S
0.000 0.000 0.000 FG
(\(bige\) - bige) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Longitude of perihelion) S
LHL
0.000 0.000 0.000 FG
(        cf = \(s - r\) / \(e*r\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(cf\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(1\) cf = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\(1.d0,cf\)) S
LHL
(        f = ) S
0.855 0.439 0.839 FG
(acos) S
0.000 0.000 0.000 FG
(\(cf\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(rv) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) f = TWOPI - f) S
LHL
(        p = true - f) S
LHL
(        p = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \(p + TWOPI + TWOPI, TWOPI\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) l = l + TWOPI) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(l) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(TWOPI\) l = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \(l, TWOPI\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MDT_BS1.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Integrates NBOD bodies \(of which NBIG are Big\) for one timestep H0) S
LHL
(c) S
( ) S
(using the Bulirsch-Stoer method. The accelerations are calculated using the ) S
LHL
(c) S
( ) S
(subroutine FORCE. The accuracy of the step is approximately determined ) S
LHL
(c) S
( ) S
(by the tolerance parameter TOL.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. Input/output must be in coordinates with respect to the central body.) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mdt_bs1) S
0.000 0.000 0.000 FG
( \(time,h0,hdid,tol,jcen,nbod,nbig,mass,x0,v0,s,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rphys,rcrit,ngf,stat,dtflag,ngflag,opt,nce,ice,jce,force\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(SHRINK) S
0.000 0.000 0.000 FG
(,GROW) S
LHL
(      ) S
0.133 0.545 0.133 FG
(parameter) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(SHRINK) S
0.000 0.000 0.000 FG
(=.55d0,) S
0.722 0.525 0.043 FG
(GROW) S
0.000 0.000 0.000 FG
(=1.3d0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\), ) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(dtflag) S
0.000 0.000 0.000 FG
(, ngflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nce) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(ice) S
0.000 0.000 0.000 FG
(\(nce\), jce\(nce\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hdid) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(mass) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,nbod\),v0\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(ngf) S
0.000 0.000 0.000 FG
(\(4,nbod\),) S
0.722 0.525 0.043 FG
(rphys) S
0.000 0.000 0.000 FG
(\(nbod\),rcrit\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( force) S
EndPage
EndDSCPage
EndSheet

%%Page: 43 43
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3025 def
/PageNumber 43 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3024 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(j1) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(, n) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tmp0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(errmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hx2) S
0.000 0.000 0.000 FG
(,h2\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(xend) S
0.000 0.000 0.000 FG
(\(3,NMAX\),vend\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(a0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(d) S
0.000 0.000 0.000 FG
(\(6,NMAX,8\),) S
0.722 0.525 0.043 FG
(xscal) S
0.000 0.000 0.000 FG
(\(NMAX\),vscal\(NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      tol2 = tol * tol) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate arrays used to scale the relative error \(R^2 for position and) S
LHL
(c) S
( ) S
(V^2 for velocity\).) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(        tmp1 = x0\(1,k\)*x0\(1,k\) + x0\(2,k\)*x0\(2,k\) + x0\(3,k\)*x0\(3,k\)) S
LHL
(        tmp2 = v0\(1,k\)*v0\(1,k\) + v0\(2,k\)*v0\(2,k\) + v0\(3,k\)*v0\(3,k\)) S
LHL
(        xscal\(k\) = 1.d0 / tmp1) S
LHL
(        vscal\(k\) = 1.d0 / tmp2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate accelerations at the start of the step) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(force) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,mass,x0,v0,s,rcrit,a0,stat,ngf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ngflag,opt,nce,ice,jce\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.373 0.620 0.627 FG
( 100) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(For each value of N, do a modified-midpoint integration with 2N substeps) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( n = 1, 8) S
LHL
(        h = h0 / \(2.d0 * ) S
0.855 0.439 0.839 FG
(float) S
0.000 0.000 0.000 FG
(\(n\)\)) S
LHL
(        h2\(n\) = .25d0 / \(n*n\)) S
LHL
(        hx2 = h * 2.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(          x\(1,k\) = x0\(1,k\) + h*v0\(1,k\)) S
LHL
(          x\(2,k\) = x0\(2,k\) + h*v0\(2,k\)) S
LHL
(          x\(3,k\) = x0\(3,k\) + h*v0\(3,k\)) S
LHL
(          v\(1,k\) = v0\(1,k\) + h*a0\(1,k\)) S
LHL
(          v\(2,k\) = v0\(2,k\) + h*a0\(2,k\)) S
LHL
(          v\(3,k\) = v0\(3,k\) + h*a0\(3,k\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(force) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,mass,x,v,s,rcrit,a,stat,ngf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ngflag,opt,nce,ice,jce\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(          xend\(1,k\) = x0\(1,k\) + hx2*v\(1,k\)) S
LHL
(          xend\(2,k\) = x0\(2,k\) + hx2*v\(2,k\)) S
LHL
(          xend\(3,k\) = x0\(3,k\) + hx2*v\(3,k\)) S
LHL
(          vend\(1,k\) = v0\(1,k\) + hx2*a\(1,k\)) S
LHL
(          vend\(2,k\) = v0\(2,k\) + hx2*a\(2,k\)) S
LHL
(          vend\(3,k\) = v0\(3,k\) + hx2*a\(3,k\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, n) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(force) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,mass,xend,vend,s,rcrit,a,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ngf,ngflag,opt,nce,ice,jce\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(            x\(1,k\) = x\(1,k\) + hx2*vend\(1,k\)) S
LHL
(            x\(2,k\) = x\(2,k\) + hx2*vend\(2,k\)) S
LHL
(            x\(3,k\) = x\(3,k\) + hx2*vend\(3,k\)) S
LHL
(            v\(1,k\) = v\(1,k\) + hx2*a\(1,k\)) S
LHL
(            v\(2,k\) = v\(2,k\) + hx2*a\(2,k\)) S
LHL
(            v\(3,k\) = v\(3,k\) + hx2*a\(3,k\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(force) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,mass,x,v,s,rcrit,a,stat,ngf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ngflag,opt,nce,ice,jce\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(            xend\(1,k\) = xend\(1,k\) + hx2*v\(1,k\)) S
LHL
(            xend\(2,k\) = xend\(2,k\) + hx2*v\(2,k\)) S
LHL
(            xend\(3,k\) = xend\(3,k\) + hx2*v\(3,k\)) S
LHL
(            vend\(1,k\) = vend\(1,k\) + hx2*a\(1,k\)) S
LHL
(            vend\(2,k\) = vend\(2,k\) + hx2*a\(2,k\)) S
LHL
(            vend\(3,k\) = vend\(3,k\) + hx2*a\(3,k\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 44 44
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3097 def
/PageNumber 44 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3096 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(force) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,mass,xend,vend,s,rcrit,a,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ngf,ngflag,opt,nce,ice,jce\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(          d\(1,k,n\) = .5d0*\(xend\(1,k\) + x\(1,k\) + h*vend\(1,k\)\)) S
LHL
(          d\(2,k,n\) = .5d0*\(xend\(2,k\) + x\(2,k\) + h*vend\(2,k\)\)) S
LHL
(          d\(3,k,n\) = .5d0*\(xend\(3,k\) + x\(3,k\) + h*vend\(3,k\)\)) S
LHL
(          d\(4,k,n\) = .5d0*\(vend\(1,k\) + v\(1,k\) + h*a\(1,k\)\)) S
LHL
(          d\(5,k,n\) = .5d0*\(vend\(2,k\) + v\(2,k\) + h*a\(2,k\)\)) S
LHL
(          d\(6,k,n\) = .5d0*\(vend\(3,k\) + v\(3,k\) + h*a\(3,k\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Update the D array, used for polynomial extrapolation) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = n - 1, 1, -1) S
LHL
(          j1 = j + 1) S
LHL
(          tmp0 = 1.d0 / \(h2\(j\) - h2\(n\)\)) S
LHL
(          tmp1 = tmp0 * h2\(j1\)) S
LHL
(          tmp2 = tmp0 * h2\(n\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(            d\(1,k,j\) = tmp1 * d\(1,k,j1\)  -  tmp2 * d\(1,k,j\)) S
LHL
(            d\(2,k,j\) = tmp1 * d\(2,k,j1\)  -  tmp2 * d\(2,k,j\)) S
LHL
(            d\(3,k,j\) = tmp1 * d\(3,k,j1\)  -  tmp2 * d\(3,k,j\)) S
LHL
(            d\(4,k,j\) = tmp1 * d\(4,k,j1\)  -  tmp2 * d\(4,k,j\)) S
LHL
(            d\(5,k,j\) = tmp1 * d\(5,k,j1\)  -  tmp2 * d\(5,k,j\)) S
LHL
(            d\(6,k,j\) = tmp1 * d\(6,k,j1\)  -  tmp2 * d\(6,k,j\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(After several integrations, test the relative error on extrapolated values) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(n) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          errmax = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Maximum relative position and velocity errors \(last D term added\)) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(            tmp1 = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\( d\(1,k,1\)*d\(1,k,1\), d\(2,k,1\)*d\(2,k,1\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(                  d\(3,k,1\)*d\(3,k,1\) \)) S
LHL
(            tmp2 = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\( d\(4,k,1\)*d\(4,k,1\), d\(5,k,1\)*d\(5,k,1\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(                  d\(6,k,1\)*d\(6,k,1\) \)) S
LHL
(            errmax = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\(errmax, tmp1*xscal\(k\), tmp2*vscal\(k\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If error is smaller than TOL, update position and velocity arrays, and exit) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(errmax) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(tol2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(              x0\(1,k\) = d\(1,k,1\)) S
LHL
(              x0\(2,k\) = d\(2,k,1\)) S
LHL
(              x0\(3,k\) = d\(3,k,1\)) S
LHL
(              v0\(1,k\) = d\(4,k,1\)) S
LHL
(              v0\(2,k\) = d\(5,k,1\)) S
LHL
(              v0\(3,k\) = d\(6,k,1\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, n) S
LHL
(              ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(                x0\(1,k\) = x0\(1,k\) + d\(1,k,j\)) S
LHL
(                x0\(2,k\) = x0\(2,k\) + d\(2,k,j\)) S
LHL
(                x0\(3,k\) = x0\(3,k\) + d\(3,k,j\)) S
LHL
(                v0\(1,k\) = v0\(1,k\) + d\(4,k,j\)) S
LHL
(                v0\(2,k\) = v0\(2,k\) + d\(5,k,j\)) S
LHL
(                v0\(3,k\) = v0\(3,k\) + d\(6,k,j\)) S
LHL
(              ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Save the actual stepsize used) S
LHL
0.000 0.000 0.000 FG
(            hdid = h0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Recommend a new stepsize for the next call to this subroutine) S
LHL
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(n) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(8\) h0 = h0 * SHRINK) S
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(n) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(7\) h0 = h0 * GROW) S
LHL
(            ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 45 45
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3169 def
/PageNumber 45 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3168 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If errors were too large, redo the step with half the previous step size.) S
LHL
0.000 0.000 0.000 FG
(      h0 = h0 * .5d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MDT_BS2.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Integrates NBOD bodies \(of which NBIG are Big\) for one timestep H0) S
LHL
(c) S
( ) S
(using the Bulirsch-Stoer method. The accelerations are calculated using the ) S
LHL
(c) S
( ) S
(subroutine FORCE. The accuracy of the step is approximately determined ) S
LHL
(c) S
( ) S
(by the tolerance parameter TOL.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. This version only works for conservative systems \(i.e. force is a) S
LHL
(c) S
( ) S
(===  function of position only\) !!!! Hence, non-gravitational forces) S
LHL
(c) S
(      ) S
(and post-Newtonian corrections cannot be used.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. Input/output must be in coordinates with respect to the central body.) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mdt_bs2) S
0.000 0.000 0.000 FG
( \(time,h0,hdid,tol,jcen,nbod,nbig,mass,x0,v0,s,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rphys,rcrit,ngf,stat,dtflag,ngflag,opt,nce,ice,jce,force\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(SHRINK) S
0.000 0.000 0.000 FG
(,GROW) S
LHL
(      ) S
0.133 0.545 0.133 FG
(parameter) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(SHRINK) S
0.000 0.000 0.000 FG
(=.55d0,) S
0.722 0.525 0.043 FG
(GROW) S
0.000 0.000 0.000 FG
(=1.3d0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\), ) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(dtflag) S
0.000 0.000 0.000 FG
(, ngflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hdid) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(mass) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,nbod\),v0\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(ngf) S
0.000 0.000 0.000 FG
(\(4,nbod\),) S
0.722 0.525 0.043 FG
(rphys) S
0.000 0.000 0.000 FG
(\(nbod\),rcrit\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ice) S
0.000 0.000 0.000 FG
(\(nce\),jce\(nce\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( force) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,n) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tmp0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(errmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h2) S
0.000 0.000 0.000 FG
(\(12\),) S
0.722 0.525 0.043 FG
(hby2) S
0.000 0.000 0.000 FG
(,h2by2) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(xend) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(b) S
0.000 0.000 0.000 FG
(\(3,NMAX\),c\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(a0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(d) S
0.000 0.000 0.000 FG
(\(6,NMAX,12\),) S
0.722 0.525 0.043 FG
(xscal) S
0.000 0.000 0.000 FG
(\(NMAX\),vscal\(NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      tol2 = tol * tol) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate arrays used to scale the relative error \(R^2 for position and) S
LHL
(c) S
( ) S
(V^2 for velocity\).) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(        tmp1 = x0\(1,k\)*x0\(1,k\) + x0\(2,k\)*x0\(2,k\) + x0\(3,k\)*x0\(3,k\)) S
LHL
(        tmp2 = v0\(1,k\)*v0\(1,k\) + v0\(2,k\)*v0\(2,k\) + v0\(3,k\)*v0\(3,k\)) S
LHL
(        xscal\(k\) = 1.d0 / tmp1) S
LHL
(        vscal\(k\) = 1.d0 / tmp2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate accelerations at the start of the step) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(force) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,mass,x0,v0,s,rcrit,a0,stat,ngf,) S
EndPage
EndDSCPage
EndSheet

%%Page: 46 46
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3241 def
/PageNumber 46 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3240 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ngflag,opt,nce,ice,jce\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.373 0.620 0.627 FG
( 100) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(For each value of N, do a modified-midpoint integration with N substeps) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( n = 1, 12) S
LHL
(        h = h0 / \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(n\)\)) S
LHL
(        hby2  = .5d0 * h) S
LHL
(        h2\(n\) = h * h) S
LHL
(        h2by2 = .5d0 * h2\(n\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(          b\(1,k\) = .5d0*a0\(1,k\)) S
LHL
(          b\(2,k\) = .5d0*a0\(2,k\)) S
LHL
(          b\(3,k\) = .5d0*a0\(3,k\)) S
LHL
(          c\(1,k\) = 0.d0) S
LHL
(          c\(2,k\) = 0.d0) S
LHL
(          c\(3,k\) = 0.d0) S
LHL
(          xend\(1,k\) = h2by2 * a0\(1,k\)  +  h * v0\(1,k\)  +  x0\(1,k\)) S
LHL
(          xend\(2,k\) = h2by2 * a0\(2,k\)  +  h * v0\(2,k\)  +  x0\(2,k\)) S
LHL
(          xend\(3,k\) = h2by2 * a0\(3,k\)  +  h * v0\(3,k\)  +  x0\(3,k\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, n) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(force) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,mass,xend,v0,s,rcrit,a,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ngf,ngflag,opt,nce,ice,jce\)) S
LHL
(          tmp0 = h * ) S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(j\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(            b\(1,k\) = b\(1,k\) + a\(1,k\)) S
LHL
(            b\(2,k\) = b\(2,k\) + a\(2,k\)) S
LHL
(            b\(3,k\) = b\(3,k\) + a\(3,k\)) S
LHL
(            c\(1,k\) = c\(1,k\) + b\(1,k\)) S
LHL
(            c\(2,k\) = c\(2,k\) + b\(2,k\)) S
LHL
(            c\(3,k\) = c\(3,k\) + b\(3,k\)) S
LHL
(            xend\(1,k\) = h2\(n\)*c\(1,k\) + h2by2*a0\(1,k\) + tmp0*v0\(1,k\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(                + x0\(1,k\)) S
LHL
(            xend\(2,k\) = h2\(n\)*c\(2,k\) + h2by2*a0\(2,k\) + tmp0*v0\(2,k\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(                + x0\(2,k\)) S
LHL
(            xend\(3,k\) = h2\(n\)*c\(3,k\) + h2by2*a0\(3,k\) + tmp0*v0\(3,k\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(                + x0\(3,k\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(force) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,mass,xend,v0,s,rcrit,a,stat,ngf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ngflag,opt,nce,ice,jce\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(          d\(1,k,n\) = xend\(1,k\)) S
LHL
(          d\(2,k,n\) = xend\(2,k\)) S
LHL
(          d\(3,k,n\) = xend\(3,k\)) S
LHL
(          d\(4,k,n\) = h*b\(1,k\) + hby2*a\(1,k\) + v0\(1,k\)) S
LHL
(          d\(5,k,n\) = h*b\(2,k\) + hby2*a\(2,k\) + v0\(2,k\)) S
LHL
(          d\(6,k,n\) = h*b\(3,k\) + hby2*a\(3,k\) + v0\(3,k\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Update the D array, used for polynomial extrapolation) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = n - 1, 1, -1) S
LHL
(          j1 = j + 1) S
LHL
(          tmp0 = 1.d0 / \(h2\(j\) - h2\(n\)\)) S
LHL
(          tmp1 = tmp0 * h2\(j1\)) S
LHL
(          tmp2 = tmp0 * h2\(n\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(            d\(1,k,j\) = tmp1 * d\(1,k,j1\)  -  tmp2 * d\(1,k,j\)) S
LHL
(            d\(2,k,j\) = tmp1 * d\(2,k,j1\)  -  tmp2 * d\(2,k,j\)) S
LHL
(            d\(3,k,j\) = tmp1 * d\(3,k,j1\)  -  tmp2 * d\(3,k,j\)) S
LHL
(            d\(4,k,j\) = tmp1 * d\(4,k,j1\)  -  tmp2 * d\(4,k,j\)) S
LHL
(            d\(5,k,j\) = tmp1 * d\(5,k,j1\)  -  tmp2 * d\(5,k,j\)) S
LHL
(            d\(6,k,j\) = tmp1 * d\(6,k,j1\)  -  tmp2 * d\(6,k,j\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(After several integrations, test the relative error on extrapolated values) S
EndPage
EndDSCPage
EndSheet

%%Page: 47 47
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3313 def
/PageNumber 47 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3312 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(n) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          errmax = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Maximum relative position and velocity errors \(last D term added\)) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(            tmp1 = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\( d\(1,k,1\)*d\(1,k,1\), d\(2,k,1\)*d\(2,k,1\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(                  d\(3,k,1\)*d\(3,k,1\) \)) S
LHL
(            tmp2 = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\( d\(4,k,1\)*d\(4,k,1\), d\(5,k,1\)*d\(2,k,1\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(                  d\(6,k,1\)*d\(6,k,1\) \)) S
LHL
(            errmax = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\( errmax, tmp1*xscal\(k\), tmp2*vscal\(k\) \)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If error is smaller than TOL, update position and velocity arrays and exit) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(errmax) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(tol2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(              x0\(1,k\) = d\(1,k,1\)) S
LHL
(              x0\(2,k\) = d\(2,k,1\)) S
LHL
(              x0\(3,k\) = d\(3,k,1\)) S
LHL
(              v0\(1,k\) = d\(4,k,1\)) S
LHL
(              v0\(2,k\) = d\(5,k,1\)) S
LHL
(              v0\(3,k\) = d\(6,k,1\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, n) S
LHL
(              ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(                x0\(1,k\) = x0\(1,k\) + d\(1,k,j\)) S
LHL
(                x0\(2,k\) = x0\(2,k\) + d\(2,k,j\)) S
LHL
(                x0\(3,k\) = x0\(3,k\) + d\(3,k,j\)) S
LHL
(                v0\(1,k\) = v0\(1,k\) + d\(4,k,j\)) S
LHL
(                v0\(2,k\) = v0\(2,k\) + d\(5,k,j\)) S
LHL
(                v0\(3,k\) = v0\(3,k\) + d\(6,k,j\)) S
LHL
(              ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Save the actual stepsize used) S
LHL
0.000 0.000 0.000 FG
(            hdid = h0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Recommend a new stepsize for the next call to this subroutine) S
LHL
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(n) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(8\) h0 = h0 * SHRINK) S
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(n) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(7\) h0 = h0 * GROW) S
LHL
(            ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If errors were too large, redo the step with half the previous step size.) S
LHL
0.000 0.000 0.000 FG
(      h0 = h0 * .5d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MDT_HY.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Integrates NBOD bodies \(of which NBIG are Big\) for one timestep H) S
LHL
(c) S
( ) S
(using a second-order hybrid-symplectic integrator algorithm) S
LHL
(c) S
LHL
(c) S
( ) S
(DTFLAG = 0 implies first ever call to this subroutine, ) S
LHL
(c) S
(        ) S
(= 1 implies first call since number/masses of objects changed.) S
LHL
(c) S
(        ) S
(= 2 normal call) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. Input/output must be in democratic heliocentric coordinates.) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 48 48
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3385 def
/PageNumber 48 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3384 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mdt_hy) S
0.000 0.000 0.000 FG
( \(time,tstart,h0,tol,rmax,en,am,jcen,rcen,nbod,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  nbig,m,x,v,s,rphys,rcrit,rce,stat,id,ngf,algor,opt,dtflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ngflag,opflag,colflag,nclo,iclo,jclo,dclo,tclo,ixvclo,jxvclo,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  outfile,mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(dtflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(colflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(lmem) S
0.000 0.000 0.000 FG
(\(NMESS\),) S
0.722 0.525 0.043 FG
(nclo) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(iclo) S
0.000 0.000 0.000 FG
(\(CMAX\),jclo\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(en) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(am) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),rcen) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),rphys\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rce) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(rcrit) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(ngf) S
0.000 0.000 0.000 FG
(\(4,nbod\),) S
0.722 0.525 0.043 FG
(tclo) S
0.000 0.000 0.000 FG
(\(CMAX\),dclo\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ixvclo) S
0.000 0.000 0.000 FG
(\(6,CMAX\),jxvclo\(6,CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(\(3\),mem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ice) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(jce) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(ce) S
0.000 0.000 0.000 FG
(\(NMAX\),iflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(hby2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hrec) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(v0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(mvsum) S
0.000 0.000 0.000 FG
(\(3\),temp) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(angf) S
0.000 0.000 0.000 FG
(\(3,NMAX\),ausr\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( mfo_hkce) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(save) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(hrec) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(angf) S
0.000 0.000 0.000 FG
(, ausr) S
LHL
(      hby2 = h0 * .5d0) S
LHL
(      nclo = 0) S
LHL
(      colflag = 0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If accelerations from previous call are not valid, calculate them now) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(dtflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(dtflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) hrec = h0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_hy) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,rcrit,a,stat\)) S
LHL
(        dtflag = 2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          angf\(1,j\) = 0.d0) S
LHL
(          angf\(2,j\) = 0.d0) S
LHL
(          angf\(3,j\) = 0.d0) S
LHL
(          ausr\(1,j\) = 0.d0) S
LHL
(          ausr\(2,j\) = 0.d0) S
LHL
(          ausr\(3,j\) = 0.d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(If required, apply non-gravitational and user-defined forces) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_user) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,x,v,ausr\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_ngf) S
0.000 0.000 0.000 FG
( \(nbod,x,v,angf,ngf\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance interaction Hamiltonian for H/2) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        v\(1,j\) = v\(1,j\)  +  hby2 * \(angf\(1,j\) + ausr\(1,j\) + a\(1,j\)\)) S
LHL
(        v\(2,j\) = v\(2,j\)  +  hby2 * \(angf\(2,j\) + ausr\(2,j\) + a\(2,j\)\)) S
LHL
(        v\(3,j\) = v\(3,j\)  +  hby2 * \(angf\(3,j\) + ausr\(3,j\) + a\(3,j\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance solar Hamiltonian for H/2) S
LHL
0.000 0.000 0.000 FG
(      mvsum\(1\) = 0.d0) S
LHL
(      mvsum\(2\) = 0.d0) S
LHL
(      mvsum\(3\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        mvsum\(1\) = mvsum\(1\)  +  m\(j\) * v\(1,j\)) S
LHL
(        mvsum\(2\) = mvsum\(2\)  +  m\(j\) * v\(2,j\)) S
LHL
(        mvsum\(3\) = mvsum\(3\)  +  m\(j\) * v\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      temp = hby2 / m\(1\)) S
LHL
(      mvsum\(1\) = temp * mvsum\(1\)) S
LHL
(      mvsum\(2\) = temp * mvsum\(2\)) S
LHL
(      mvsum\(3\) = temp * mvsum\(3\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 49 49
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3457 def
/PageNumber 49 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3456 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        x\(1,j\) = x\(1,j\)  +  mvsum\(1\)) S
LHL
(        x\(2,j\) = x\(2,j\)  +  mvsum\(2\)) S
LHL
(        x\(3,j\) = x\(3,j\)  +  mvsum\(3\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Save the current coordinates and velocities) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,x,v,x0,v0,ngf,ngflag,opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance H_K for H) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        iflag = 0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(m\(1\),x\(1,j\),x\(2,j\),x\(3,j\),v\(1,j\),v\(2,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    v\(3,j\),h0,iflag\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check whether any object separations were < R_CRIT whilst advancing H_K) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_snif) S
0.000 0.000 0.000 FG
( \(h0,2,nbod,nbig,x0,v0,x,v,rcrit,ce,nce,ice,jce\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If objects had close encounters, advance H_K using Bulirsch-Stoer instead) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nce) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ce\(j\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            x\(1,j\) = x0\(1,j\)) S
LHL
(            x\(2,j\) = x0\(2,j\)) S
LHL
(            x\(3,j\) = x0\(3,j\)) S
LHL
(            v\(1,j\) = v0\(1,j\)) S
LHL
(            v\(2,j\) = v0\(2,j\)) S
LHL
(            v\(3,j\) = v0\(3,j\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mdt_hkce) S
0.000 0.000 0.000 FG
( \(time,tstart,h0,hrec,tol,rmax,en\(3\),jcen,rcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    nbod,nbig,m,x,v,s,rphys,rcrit,rce,stat,id,ngf,algor,opt,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ngflag,colflag,ce,nce,ice,jce,nclo,iclo,jclo,dclo,tclo,ixvclo,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    jxvclo,outfile,mem,lmem,mfo_hkce\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance solar Hamiltonian for H/2) S
LHL
0.000 0.000 0.000 FG
(      mvsum\(1\) = 0.d0) S
LHL
(      mvsum\(2\) = 0.d0) S
LHL
(      mvsum\(3\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        mvsum\(1\) = mvsum\(1\)  +  m\(j\) * v\(1,j\)) S
LHL
(        mvsum\(2\) = mvsum\(2\)  +  m\(j\) * v\(2,j\)) S
LHL
(        mvsum\(3\) = mvsum\(3\)  +  m\(j\) * v\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      temp = hby2 / m\(1\)) S
LHL
(      mvsum\(1\) = temp * mvsum\(1\)) S
LHL
(      mvsum\(2\) = temp * mvsum\(2\)) S
LHL
(      mvsum\(3\) = temp * mvsum\(3\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        x\(1,j\) = x\(1,j\)  +  mvsum\(1\)) S
LHL
(        x\(2,j\) = x\(2,j\)  +  mvsum\(2\)) S
LHL
(        x\(3,j\) = x\(3,j\)  +  mvsum\(3\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance interaction Hamiltonian for H/2) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_hy) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,rcrit,a,stat\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_user) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,x,v,ausr\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_ngf) S
0.000 0.000 0.000 FG
( \(nbod,x,v,angf,ngf\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        v\(1,j\) = v\(1,j\)  +  hby2 * \(angf\(1,j\) + ausr\(1,j\) + a\(1,j\)\)) S
LHL
(        v\(2,j\) = v\(2,j\)  +  hby2 * \(angf\(2,j\) + ausr\(2,j\) + a\(2,j\)\)) S
LHL
(        v\(3,j\) = v\(3,j\)  +  hby2 * \(angf\(3,j\) + ausr\(3,j\) + a\(3,j\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 50 50
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3529 def
/PageNumber 50 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3528 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MDT_HKCE.FOR    \(ErikSoft   1 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Integrates NBOD bodies \(of which NBIG are Big\) for one timestep H under) S
LHL
(c) S
( ) S
(the Hamiltonian H_K, including close-encounter terms.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mdt_hkce) S
0.000 0.000 0.000 FG
( \(time,tstart,h0,hrec,tol,rmax,elost,jcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rcen,nbod,nbig,m,x,v,s,rphy,rcrit,rce,stat,id,ngf,algor,opt,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ngflag,colflag,ce,nce,ice,jce,nclo,iclo,jclo,dclo,tclo,ixvclo,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  jxvclo,outfile,mem,lmem,force\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ice) S
0.000 0.000 0.000 FG
(\(nce\),) S
0.722 0.525 0.043 FG
(jce) S
0.000 0.000 0.000 FG
(\(nce\),) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,ce\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(colflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(lmem) S
0.000 0.000 0.000 FG
(\(NMESS\),) S
0.722 0.525 0.043 FG
(nclo) S
0.000 0.000 0.000 FG
(,iclo\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( jclo\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hrec) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(elost) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),rcen) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),s\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rce) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(rphy) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(rcrit) S
0.000 0.000 0.000 FG
(\(nbod\),ngf\(4,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tclo) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(dclo) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(ixvclo) S
0.000 0.000 0.000 FG
(\(6,CMAX\),jxvclo\(6,CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(\(3\),mem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( force) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(iback) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(index) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(ibs) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(jbs) S
0.000 0.000 0.000 FG
(\(NMAX\),nclo_old) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbs) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbsbig) S
0.000 0.000 0.000 FG
(,statbs\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nhit) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ihit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(jhit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(chit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(nowflag) S
0.000 0.000 0.000 FG
(,dtflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tlocal) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hlocal) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hdid) S
0.000 0.000 0.000 FG
(,tmp0) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mbs) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(xbs) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(vbs) S
0.000 0.000 0.000 FG
(\(3,NMAX\),sbs\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rcritbs) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(rcebs) S
0.000 0.000 0.000 FG
(\(NMAX\),rphybs\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ngfbs) S
0.000 0.000 0.000 FG
(\(4,NMAX\),) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),v0\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(thit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(dhit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(thit1) S
0.000 0.000 0.000 FG
(,temp) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 idbs\(NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. Don't set nclo to zero!!) S
LHL
0.000 0.000 0.000 FG
(      nbs = 1) S
LHL
(      nbsbig = 0) S
LHL
(      mbs\(1\) = m\(1\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11\) mbs\(1\) = m\(1\) + m\(2\)) S
LHL
(      sbs\(1,1\) = s\(1,1\)) S
LHL
(      sbs\(2,1\) = s\(2,1\)) S
LHL
(      sbs\(3,1\) = s\(3,1\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Put data for close-encounter bodies into local arrays for use with BS routine) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ce\(j\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          nbs = nbs + 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(nbig\) nbsbig = nbs) S
LHL
(          mbs\(nbs\)   = m\(j\)) S
LHL
(          xbs\(1,nbs\) = x\(1,j\)) S
LHL
(          xbs\(2,nbs\) = x\(2,j\)) S
LHL
(          xbs\(3,nbs\) = x\(3,j\)) S
LHL
(          vbs\(1,nbs\) = v\(1,j\)) S
LHL
(          vbs\(2,nbs\) = v\(2,j\)) S
LHL
(          vbs\(3,nbs\) = v\(3,j\)) S
LHL
(          sbs\(1,nbs\) = s\(1,j\)) S
LHL
(          sbs\(2,nbs\) = s\(2,j\)) S
LHL
(          sbs\(3,nbs\) = s\(3,j\)) S
LHL
(          rcebs\(nbs\) = rce\(j\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 51 51
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3601 def
/PageNumber 51 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3600 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          rphybs\(nbs\) = rphy\(j\)) S
LHL
(          statbs\(nbs\) = stat\(j\)) S
LHL
(          rcritbs\(nbs\) = rcrit\(j\)) S
LHL
(          idbs\(nbs\) = id\(j\)) S
LHL
(          ) S
0.855 0.439 0.839 FG
(index) S
0.000 0.000 0.000 FG
(\(nbs\) = j) S
LHL
(          iback\(j\) = nbs) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nce) S
LHL
(        ibs\(k\) = iback\(ice\(k\)\)) S
LHL
(        jbs\(k\) = iback\(jce\(k\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      tlocal = 0.d0) S
LHL
(      hlocal = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\(hrec,h0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Begin the Bulirsch-Stoer integration) S
LHL
0.373 0.620 0.627 FG
(  50) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
(        tmp0 = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(h0\) - ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tlocal\)) S
LHL
(        hrec = hlocal) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(hlocal\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(tmp0\) hlocal = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
( \(tmp0, h0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Save old coordinates and integrate) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbs,0,h0,mbs,xbs,vbs,x0,v0,ngf,ngflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mdt_bs2) S
0.000 0.000 0.000 FG
( \(time,hlocal,hdid,tol,jcen,nbs,nbsbig,mbs,xbs,vbs,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    sbs,rphybs,rcritbs,ngfbs,statbs,dtflag,ngflag,opt,nce,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ibs,jbs,force\)) S
LHL
(        tlocal = tlocal + hdid) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check for close-encounter minima) S
LHL
0.000 0.000 0.000 FG
(        nclo_old = nclo) S
LHL
(        temp = time + tlocal) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_stat) S
0.000 0.000 0.000 FG
( \(temp,hdid,rcen,nbs,nbsbig,mbs,x0,v0,xbs,vbs,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    rcebs,rphybs,nclo,iclo,jclo,dclo,tclo,ixvclo,jxvclo,nhit,ihit,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    jhit,chit,dhit,thit,thit1,nowflag,statbs,outfile\(3\),mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If collisions occurred, resolve the collision and return a flag) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nhit) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(opt\(2\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nhit) S
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(chit\(k\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              i = ihit\(k\)) S
LHL
(              j = jhit\(k\)) S
LHL
(              ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_coll) S
0.000 0.000 0.000 FG
( \(thit\(k\),tstart,elost,jcen,i,j,nbs,nbsbig,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(          mbs,xbs,vbs,sbs,rphybs,statbs,idbs,opt,mem,lmem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(          outfile\(3\)\)) S
LHL
(              colflag = colflag + 1) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If necessary, continue integrating objects undergoing close encounters) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(tlocal - h0\)*h0) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(50) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Return data for the close-encounter objects to global arrays) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbs) S
LHL
(        j = ) S
0.855 0.439 0.839 FG
(index) S
0.000 0.000 0.000 FG
(\(k\)) S
LHL
(        m\(j\)   = mbs\(k\)) S
LHL
(        x\(1,j\) = xbs\(1,k\)) S
LHL
(        x\(2,j\) = xbs\(2,k\)) S
LHL
(        x\(3,j\) = xbs\(3,k\)) S
LHL
(        v\(1,j\) = vbs\(1,k\)) S
LHL
(        v\(2,j\) = vbs\(2,k\)) S
LHL
(        v\(3,j\) = vbs\(3,k\)) S
LHL
(        s\(1,j\) = sbs\(1,k\)) S
LHL
(        s\(2,j\) = sbs\(2,k\)) S
LHL
(        s\(3,j\) = sbs\(3,k\)) S
LHL
(        stat\(j\) = statbs\(k\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nclo) S
LHL
(        iclo\(k\) = ) S
0.855 0.439 0.839 FG
(index) S
0.000 0.000 0.000 FG
(\(iclo\(k\)\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 52 52
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3673 def
/PageNumber 52 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3672 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        jclo\(k\) = ) S
0.855 0.439 0.839 FG
(index) S
0.000 0.000 0.000 FG
(\(jclo\(k\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MDT_MVS.FOR    \(ErikSoft   28 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Integrates NBOD bodies \(of which NBIG are Big\) for one timestep H) S
LHL
(c) S
( ) S
(using a second-order mixed-variable symplectic integrator.) S
LHL
(c) S
LHL
(c) S
( ) S
(DTFLAG = 0 implies first ever call to this subroutine, ) S
LHL
(c) S
(        ) S
(= 1 implies first call since number/masses of objects changed.) S
LHL
(c) S
(        ) S
(= 2 normal call) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. Input/output must be in coordinates with respect to the central body.) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mdt_mvs) S
0.000 0.000 0.000 FG
( \(time,tstart,h0,tol,rmax,en,am,jcen,rcen,nbod,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  nbig,m,x,v,s,rphys,rcrit,rce,stat,id,ngf,algor,opt,dtflag,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ngflag,opflag,colflag,nclo,iclo,jclo,dclo,tclo,ixvclo,jxvclo,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  outfile,mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(dtflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,opflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(colflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(lmem) S
0.000 0.000 0.000 FG
(\(NMESS\),) S
0.722 0.525 0.043 FG
(nclo) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(iclo) S
0.000 0.000 0.000 FG
(\(CMAX\),jclo\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(en) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(am) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),rcen) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),rphys\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rce) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(rcrit) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(ngf) S
0.000 0.000 0.000 FG
(\(4,nbod\),) S
0.722 0.525 0.043 FG
(tclo) S
0.000 0.000 0.000 FG
(\(CMAX\),dclo\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ixvclo) S
0.000 0.000 0.000 FG
(\(6,CMAX\),jxvclo\(6,CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(\(3\),mem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(iflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nhit) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ihit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(jhit) S
0.000 0.000 0.000 FG
(\(CMAX\),) S
0.722 0.525 0.043 FG
(chit) S
0.000 0.000 0.000 FG
(\(CMAX\),nowflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(xj) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(vj) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(gm) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(hby2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(thit1) S
0.000 0.000 0.000 FG
(,temp) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(msofar) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(minside) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(v0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(dhit) S
0.000 0.000 0.000 FG
(\(CMAX\),thit\(CMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(angf) S
0.000 0.000 0.000 FG
(\(3,NMAX\),ausr\(3,NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(save) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(xj) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(gm) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(angf) S
0.000 0.000 0.000 FG
(, ausr) S
LHL
(      hby2 = .5d0 * h0) S
LHL
(      nclo = 0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If accelerations from previous call are not valid, calculate them now,) S
LHL
(c) S
( ) S
(and also the Jacobi coordinates XJ, and effective central masses GM.) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(dtflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        dtflag = 2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2j) S
0.000 0.000 0.000 FG
( \(time,jcen,nbig,nbig,h0,m,x,v,xj,vj,ngf,ngflag,opt\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_mvs) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,xj,a,stat\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        minside = m\(1\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbig) S
LHL
(          msofar = minside + m\(j\)) S
LHL
(          gm\(j\) = m\(1\) * msofar / minside) S
LHL
(          minside = msofar) S
LHL
(          angf\(1,j\) = 0.d0) S
LHL
(          angf\(2,j\) = 0.d0) S
EndPage
EndDSCPage
EndSheet

%%Page: 53 53
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3745 def
/PageNumber 53 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3744 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          angf\(3,j\) = 0.d0) S
LHL
(          ausr\(1,j\) = 0.d0) S
LHL
(          ausr\(2,j\) = 0.d0) S
LHL
(          ausr\(3,j\) = 0.d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(If required, apply non-gravitational and user-defined forces) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_user) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,x,v,ausr\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_ngf) S
0.000 0.000 0.000 FG
( \(nbod,x,v,angf,ngf\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance interaction Hamiltonian for H/2) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        v\(1,j\) = v\(1,j\)  +  hby2 * \(angf\(1,j\) + ausr\(1,j\) + a\(1,j\)\)) S
LHL
(        v\(2,j\) = v\(2,j\)  +  hby2 * \(angf\(2,j\) + ausr\(2,j\) + a\(2,j\)\)) S
LHL
(        v\(3,j\) = v\(3,j\)  +  hby2 * \(angf\(3,j\) + ausr\(3,j\) + a\(3,j\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Save current coordinates and velocities) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_iden) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,h0,m,x,v,x0,v0,ngf,ngflag,opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance Keplerian Hamiltonian \(Jacobi/helio coords for Big/Small bodies\)) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2j) S
0.000 0.000 0.000 FG
( \(time,jcen,nbig,nbig,h0,m,x,v,xj,vj,ngf,ngflag,opt\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbig) S
LHL
(        iflag = 0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(gm\(j\),xj\(1,j\),xj\(2,j\),xj\(3,j\),vj\(1,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    vj\(2,j\),vj\(3,j\),h0,iflag\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(        iflag = 0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
( \(m\(1\),x\(1,j\),x\(2,j\),x\(3,j\),v\(1,j\),v\(2,j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    v\(3,j\),h0,iflag\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_j2h) S
0.000 0.000 0.000 FG
( \(time,jcen,nbig,nbig,h0,m,xj,vj,x,v,ngf,ngflag,opt\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check for close-encounter minima during drift step) S
LHL
0.000 0.000 0.000 FG
(      temp = time + h0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mce_stat) S
0.000 0.000 0.000 FG
( \(temp,h0,rcen,nbod,nbig,m,x0,v0,x,v,rce,rphys,nclo,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  iclo,jclo,dclo,tclo,ixvclo,jxvclo,nhit,ihit,jhit,chit,dhit,thit,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  thit1,nowflag,stat,outfile\(3\),mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Advance interaction Hamiltonian for H/2) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_mvs) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,xj,a,stat\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_user) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,x,v,ausr\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_ngf) S
0.000 0.000 0.000 FG
( \(nbod,x,v,angf,ngf\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        v\(1,j\) = v\(1,j\)  +  hby2 * \(angf\(1,j\) + ausr\(1,j\) + a\(1,j\)\)) S
LHL
(        v\(2,j\) = v\(2,j\)  +  hby2 * \(angf\(2,j\) + ausr\(2,j\) + a\(2,j\)\)) S
LHL
(        v\(3,j\) = v\(3,j\)  +  hby2 * \(angf\(3,j\) + ausr\(3,j\) + a\(3,j\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MDT_RA15.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Integrates NBOD bodies \(of which NBIG are Big\) for one timestep H0 using) S
LHL
(c) S
( ) S
(Everhart's RA15 integrator algorithm. The accelerations are calculated) S
LHL
(c) S
( ) S
(using the subroutine FORCE. The accuracy of the step is approximately ) S
LHL
(c) S
( ) S
(determined by the tolerance parameter TOL.) S
LHL
(c) S
LHL
(c) S
( ) S
(Based on RADAU by E. Everhart, Physics Department, University of Denver.) S
LHL
(c) S
( ) S
(Comments giving equation numbers refer to Everhart \(1985\) ``An Efficient) S
LHL
(c) S
( ) S
(Integrator that Uses Gauss-Radau Spacings'', in The Dynamics of Comets:) S
EndPage
EndDSCPage
EndSheet

%%Page: 54 54
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3817 def
/PageNumber 54 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3816 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Their Origin and Evolution, p185-202, eds. A. Carusi & G. B. Valsecchi,) S
LHL
(c) S
( ) S
(pub Reidel. \(A listing of the original subroutine is also given in this ) S
LHL
(c) S
( ) S
(paper.\)) S
LHL
(c) S
LHL
(c) S
( ) S
(DTFLAG = 0 implies first ever call to this subroutine, ) S
LHL
(c) S
(        ) S
(= 1 implies first call since number/masses of objects changed.) S
LHL
(c) S
(        ) S
(= 2 normal call) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. Input/output must be in coordinates with respect to the central body.) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mdt_ra15) S
0.000 0.000 0.000 FG
( \(time,t,tdid,tol,jcen,nbod,nbig,mass,x1,v1,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  spin,rphys,rcrit,ngf,stat,dtflag,ngflag,opt,nce,ice,jce,force\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dtflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),stat\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ice) S
0.000 0.000 0.000 FG
(\(nce\),jce\(nce\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(t) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tdid) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),mass\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x1) S
0.000 0.000 0.000 FG
(\(3*nbod\),) S
0.722 0.525 0.043 FG
(v1) S
0.000 0.000 0.000 FG
(\(3*nbod\),spin\(3*nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ngf) S
0.000 0.000 0.000 FG
(\(4,nbod\),) S
0.722 0.525 0.043 FG
(rphys) S
0.000 0.000 0.000 FG
(\(nbod\),rcrit\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( force) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nv) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(niter) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,n) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3*NMAX\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3*NMAX\),) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3*NMAX\),a1\(3*NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(g) S
0.000 0.000 0.000 FG
(\(7,3*NMAX\),) S
0.722 0.525 0.043 FG
(b) S
0.000 0.000 0.000 FG
(\(7,3*NMAX\),e\(7,3*NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(xc) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(vc) S
0.000 0.000 0.000 FG
(\(7\),) S
0.722 0.525 0.043 FG
(c) S
0.000 0.000 0.000 FG
(\(21\),) S
0.722 0.525 0.043 FG
(d) S
0.000 0.000 0.000 FG
(\(21\),) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(\(28\),s\(9\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q5) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q6) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q7) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,gk) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(save) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(xc) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vc) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b) S
0.000 0.000 0.000 FG
(,e) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Gauss-Radau spacings for substeps within a sequence, for the 15th order ) S
LHL
(c) S
( ) S
(integrator. The sum of the H values should be 3.733333333333333) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(data) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(/          0.d0,.0562625605369221d0,.1802406917368924d0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  .3526247171131696d0,.5471536263305554d0,.7342101772154105d0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  .8853209468390958d0,.9775206135612875d0/) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Constant coefficients used in series expansions for X and V) S
LHL
(c) S
(  ) S
(XC: 1/2,  1/6,  1/12, 1/20, 1/30, 1/42, 1/56, 1/72) S
LHL
(c) S
(  ) S
(VC: 1/2,  1/3,  1/4,  1/5,  1/6,  1/7,  1/8) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(data) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(xc) S
0.000 0.000 0.000 FG
(/.5d0,.1666666666666667d0,.08333333333333333d0,.05d0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  .03333333333333333d0,.02380952380952381d0,.01785714285714286d0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  .01388888888888889d0/) S
LHL
(      ) S
0.133 0.545 0.133 FG
(data) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(vc) S
0.000 0.000 0.000 FG
(/.5d0,.3333333333333333d0,.25d0,.2d0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  .1666666666666667d0,.1428571428571429d0,.125d0/) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If this is first call to the subroutine, set values of the constant arrays) S
LHL
(c) S
( ) S
(\(R = R21, R31, R32, R41, R42, R43 in Everhart's paper.\)) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(dtflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        n = 0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, 8) S
LHL
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, j - 1) S
LHL
(            n = n + 1) S
LHL
(            r\(n\) = 1.d0 / \(h\(j\) - h\(k\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Constants to convert between B and G arrays \(C = C21, C31, C32, C41, C42...\)) S
LHL
0.000 0.000 0.000 FG
(        c\(1\) = - h\(2\)) S
LHL
(        d\(1\) =   h\(2\)) S
LHL
(        n = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 3, 7) S
LHL
(          n = n + 1) S
LHL
(          c\(n\) = -h\(j\) * c\(n-j+2\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 55 55
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3889 def
/PageNumber 55 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3888 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          d\(n\) =  h\(2\) * d\(n-j+2\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 3, j - 1) S
LHL
(            n = n + 1) S
LHL
(            c\(n\) = c\(n-j+1\)  -  h\(j\) * c\(n-j+2\)) S
LHL
(            d\(n\) = d\(n-j+1\)  +  h\(k\) * d\(n-j+2\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(          n = n + 1) S
LHL
(          c\(n\) = c\(n-j+1\) - h\(j\)) S
LHL
(          d\(n\) = d\(n-j+1\) + h\(j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        dtflag = 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      nv = 3 * nbod) S
LHL
0.373 0.620 0.627 FG
(  100) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If this is first call to subroutine since number/masses of objects changed) S
LHL
(c) S
( ) S
(do 6 iterations and initialize B, E arrays, otherwise do 2 iterations.) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(dtflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        niter = 6) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 4, nv) S
LHL
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 7) S
LHL
(            b \(k,j\) = 0.d0) S
LHL
(            e \(k,j\) = 0.d0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        niter = 2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate forces at the start of the sequence) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(force) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,mass,x1,v1,spin,rcrit,a1,stat,ngf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ngflag,opt,nce,ice,jce\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Find G values from B values predicted at the last call \(Eqs. 7 of Everhart\)) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(        g\(1,k\) = b\(7,k\)*d\(16\) + b\(6,k\)*d\(11\) + b\(5,k\)*d\(7\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(         + b\(4,k\)*d\(4\)  + b\(3,k\)*d\(2\)  + b\(2,k\)*d\(1\)  + b\(1,k\)) S
LHL
(        g\(2,k\) = b\(7,k\)*d\(17\) + b\(6,k\)*d\(12\) + b\(5,k\)*d\(8\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(         + b\(4,k\)*d\(5\)  + b\(3,k\)*d\(3\)  + b\(2,k\)) S
LHL
(        g\(3,k\) = b\(7,k\)*d\(18\) + b\(6,k\)*d\(13\) + b\(5,k\)*d\(9\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(         + b\(4,k\)*d\(6\)  + b\(3,k\)) S
LHL
(        g\(4,k\) = b\(7,k\)*d\(19\) + b\(6,k\)*d\(14\) + b\(5,k\)*d\(10\) + b\(4,k\)) S
LHL
(        g\(5,k\) = b\(7,k\)*d\(20\) + b\(6,k\)*d\(15\) + b\(5,k\)) S
LHL
(        g\(6,k\) = b\(7,k\)*d\(21\) + b\(6,k\)) S
LHL
(        g\(7,k\) = b\(7,k\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(MAIN  LOOP  STARTS  HERE) S
LHL
(c) S
LHL
(c) S
( ) S
(For each iteration \(six for first call to subroutine, two otherwise\)...) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( n = 1, niter) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(For each substep within a sequence...) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, 8) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate position predictors using Eqn. 9 of Everhart) S
LHL
0.000 0.000 0.000 FG
(          s\(1\) = t * h\(j\)) S
LHL
(          s\(2\) = s\(1\) * s\(1\) * .5d0) S
LHL
(          s\(3\) = s\(2\) * h\(j\) * .3333333333333333d0) S
LHL
(          s\(4\) = s\(3\) * h\(j\) * .5d0) S
LHL
(          s\(5\) = s\(4\) * h\(j\) * .6d0) S
LHL
(          s\(6\) = s\(5\) * h\(j\) * .6666666666666667d0) S
LHL
(          s\(7\) = s\(6\) * h\(j\) * .7142857142857143d0) S
LHL
(          s\(8\) = s\(7\) * h\(j\) * .75d0) S
LHL
(          s\(9\) = s\(8\) * h\(j\) * .7777777777777778d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(            x\(k\) = s\(9\)*b\(7,k\) + s\(8\)*b\(6,k\) + s\(7\)*b\(5,k\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 56 56
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 3961 def
/PageNumber 56 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
3960 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(           + s\(6\)*b\(4,k\) + s\(5\)*b\(3,k\) + s\(4\)*b\(2,k\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(           + s\(3\)*b\(1,k\) + s\(2\)*a1\(k\)  + s\(1\)*v1\(k\) + x1\(k\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If necessary, calculate velocity predictors too, from Eqn. 10 of Everhart) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            s\(1\) = t * h\(j\)) S
LHL
(            s\(2\) = s\(1\) * h\(j\) * .5d0) S
LHL
(            s\(3\) = s\(2\) * h\(j\) * .6666666666666667d0) S
LHL
(            s\(4\) = s\(3\) * h\(j\) * .75d0) S
LHL
(            s\(5\) = s\(4\) * h\(j\) * .8d0) S
LHL
(            s\(6\) = s\(5\) * h\(j\) * .8333333333333333d0) S
LHL
(            s\(7\) = s\(6\) * h\(j\) * .8571428571428571d0) S
LHL
(            s\(8\) = s\(7\) * h\(j\) * .875d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(              v\(k\) = s\(8\)*b\(7,k\) + s\(7\)*b\(6,k\) + s\(6\)*b\(5,k\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(             + s\(5\)*b\(4,k\) + s\(4\)*b\(3,k\) + s\(3\)*b\(2,k\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(             + s\(2\)*b\(1,k\) + s\(1\)*a1\(k\)  + v1\(k\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate forces at the current substep) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(force) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,mass,x,v,spin,rcrit,a,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ngf,ngflag,opt,nce,ice,jce\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Update G values using Eqs. 4 of Everhart, and update B values using Eqs. 5) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(              temp = g\(1,k\)) S
LHL
(              g\(1,k\) = \(a\(k\) - a1\(k\)\) * r\(1\)) S
LHL
(              b\(1,k\) = b\(1,k\) + g\(1,k\) - temp) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(300) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(              temp = g\(2,k\)) S
LHL
(              gk = a\(k\) - a1\(k\)) S
LHL
(              g\(2,k\) = \(gk*r\(2\) - g\(1,k\)\)*r\(3\)) S
LHL
(              temp = g\(2,k\) - temp) S
LHL
(              b\(1,k\) = b\(1,k\)  +  temp * c\(1\)) S
LHL
(              b\(2,k\) = b\(2,k\)  +  temp) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(300) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(4\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(              temp = g\(3,k\)) S
LHL
(              gk = a\(k\) - a1\(k\)) S
LHL
(              g\(3,k\) = \(\(gk*r\(4\) - g\(1,k\)\)*r\(5\) - g\(2,k\)\)*r\(6\)) S
LHL
(              temp = g\(3,k\) - temp) S
LHL
(              b\(1,k\) = b\(1,k\)  +  temp * c\(2\)) S
LHL
(              b\(2,k\) = b\(2,k\)  +  temp * c\(3\)) S
LHL
(              b\(3,k\) = b\(3,k\)  +  temp) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(300) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(5\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(              temp = g\(4,k\)) S
LHL
(              gk = a\(k\) - a1\(k\)) S
LHL
(              g\(4,k\) = \(\(\(gk*r\(7\) - g\(1,k\)\)*r\(8\) - g\(2,k\)\)*r\(9\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(               - g\(3,k\)\)*r\(10\)) S
LHL
(              temp = g\(4,k\) - temp) S
LHL
(              b\(1,k\) = b\(1,k\)  +  temp * c\(4\)) S
LHL
(              b\(2,k\) = b\(2,k\)  +  temp * c\(5\)) S
LHL
(              b\(3,k\) = b\(3,k\)  +  temp * c\(6\)) S
LHL
(              b\(4,k\) = b\(4,k\)  +  temp) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(300) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 57 57
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4033 def
/PageNumber 57 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4032 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(6\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(              temp = g\(5,k\)) S
LHL
(              gk = a\(k\) - a1\(k\)) S
LHL
(              g\(5,k\) =  \(\(\(\(gk*r\(11\) - g\(1,k\)\)*r\(12\) - g\(2,k\)\)*r\(13\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(               - g\(3,k\)\)*r\(14\) - g\(4,k\)\)*r\(15\)) S
LHL
(              temp = g\(5,k\) - temp) S
LHL
(              b\(1,k\) = b\(1,k\)  +  temp * c\(7\)) S
LHL
(              b\(2,k\) = b\(2,k\)  +  temp * c\(8\)) S
LHL
(              b\(3,k\) = b\(3,k\)  +  temp * c\(9\)) S
LHL
(              b\(4,k\) = b\(4,k\)  +  temp * c\(10\)) S
LHL
(              b\(5,k\) = b\(5,k\)  +  temp) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(300) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(7\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(              temp = g\(6,k\)) S
LHL
(              gk = a\(k\) - a1\(k\)) S
LHL
(              g\(6,k\) = \(\(\(\(\(gk*r\(16\) - g\(1,k\)\)*r\(17\) - g\(2,k\)\)*r\(18\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(               - g\(3,k\)\)*r\(19\) - g\(4,k\)\)*r\(20\) - g\(5,k\)\)*r\(21\)) S
LHL
(              temp = g\(6,k\) - temp) S
LHL
(              b\(1,k\) = b\(1,k\)  +  temp * c\(11\)) S
LHL
(              b\(2,k\) = b\(2,k\)  +  temp * c\(12\)) S
LHL
(              b\(3,k\) = b\(3,k\)  +  temp * c\(13\)) S
LHL
(              b\(4,k\) = b\(4,k\)  +  temp * c\(14\)) S
LHL
(              b\(5,k\) = b\(5,k\)  +  temp * c\(15\)) S
LHL
(              b\(6,k\) = b\(6,k\)  +  temp) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(300) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(8\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(              temp = g\(7,k\)) S
LHL
(              gk = a\(k\) - a1\(k\)) S
LHL
(              g\(7,k\) = \(\(\(\(\(\(gk*r\(22\) - g\(1,k\)\)*r\(23\) - g\(2,k\)\)*r\(24\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(                - g\(3,k\)\)*r\(25\) - g\(4,k\)\)*r\(26\) - g\(5,k\)\)*r\(27\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(                - g\(6,k\)\)*r\(28\)) S
LHL
(              temp = g\(7,k\) - temp) S
LHL
(              b\(1,k\) = b\(1,k\)  +  temp * c\(16\)) S
LHL
(              b\(2,k\) = b\(2,k\)  +  temp * c\(17\)) S
LHL
(              b\(3,k\) = b\(3,k\)  +  temp * c\(18\)) S
LHL
(              b\(4,k\) = b\(4,k\)  +  temp * c\(19\)) S
LHL
(              b\(5,k\) = b\(5,k\)  +  temp * c\(20\)) S
LHL
(              b\(6,k\) = b\(6,k\)  +  temp * c\(21\)) S
LHL
(              b\(7,k\) = b\(7,k\)  +  temp) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
( 300) S
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(END  OF  MAIN  LOOP) S
LHL
(c) S
LHL
(c) S
( ) S
(Estimate suitable sequence size for the next call to subroutine \(Eqs. 15, 16\)) S
LHL
0.000 0.000 0.000 FG
(      temp = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(        temp = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\( temp, ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\( b\(7,k\) \) \)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      temp = temp / \(72.d0 * ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(t\)**7\)) S
LHL
(      tdid = t) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(temp) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        t = tdid * 1.4d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        t = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( \(tol/temp\)**\(1.d0/9.d0\), tdid \)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If sequence size for the first subroutine call is too big, go back and redo) S
LHL
(c) S
( ) S
(the sequence using a smaller size.) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(dtflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.and.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(t/tdid\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 58 58
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4105 def
/PageNumber 58 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4104 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        t = t * .8d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If new sequence size is much bigger than the current one, reduce it) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(t/tdid\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(1.4d0\) t = tdid * 1.4d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Find new position and velocity values at end of the sequence \(Eqs. 11, 12\)) S
LHL
0.000 0.000 0.000 FG
(      temp = tdid * tdid) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4 , nv) S
LHL
(        x1\(k\) = \(xc\(8\)*b\(7,k\) + xc\(7\)*b\(6,k\) + xc\(6\)*b\(5,k\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        +  xc\(5\)*b\(4,k\) + xc\(4\)*b\(3,k\) + xc\(3\)*b\(2,k\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        +  xc\(2\)*b\(1,k\) + xc\(1\)*a1\(k\)\)*temp + v1\(k\)*tdid + x1\(k\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        v1\(k\) = \(vc\(7\)*b\(7,k\) + vc\(6\)*b\(6,k\) + vc\(5\)*b\(5,k\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        +  vc\(4\)*b\(4,k\) + vc\(3\)*b\(3,k\) + vc\(2\)*b\(2,k\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        +  vc\(1\)*b\(1,k\) + a1\(k\)\)*tdid + v1\(k\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Predict new B values to use at the start of the next sequence. The predicted) S
LHL
(c) S
( ) S
(values from the last call are saved as E. The correction, BD, between the) S
LHL
(c) S
( ) S
(actual and predicted values of B is applied in advance as a correction.) S
LHL
0.000 0.000 0.000 FG
(      q = t / tdid) S
LHL
(      q2 = q  * q) S
LHL
(      q3 = q  * q2) S
LHL
(      q4 = q2 * q2) S
LHL
(      q5 = q2 * q3) S
LHL
(      q6 = q3 * q3) S
LHL
(      q7 = q3 * q4) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 4, nv) S
LHL
(        s\(1\) = b\(1,k\) - e\(1,k\)) S
LHL
(        s\(2\) = b\(2,k\) - e\(2,k\)) S
LHL
(        s\(3\) = b\(3,k\) - e\(3,k\)) S
LHL
(        s\(4\) = b\(4,k\) - e\(4,k\)) S
LHL
(        s\(5\) = b\(5,k\) - e\(5,k\)) S
LHL
(        s\(6\) = b\(6,k\) - e\(6,k\)) S
LHL
(        s\(7\) = b\(7,k\) - e\(7,k\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Estimate B values for the next sequence \(Eqs. 13 of Everhart\).) S
LHL
0.000 0.000 0.000 FG
(        e\(1,k\) = q* \(b\(7,k\)* 7.d0 + b\(6,k\)* 6.d0 + b\(5,k\)* 5.d0) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(         +     b\(4,k\)* 4.d0 + b\(3,k\)* 3.d0 + b\(2,k\)*2.d0 + b\(1,k\)\)) S
LHL
(        e\(2,k\) = q2*\(b\(7,k\)*21.d0 + b\(6,k\)*15.d0 + b\(5,k\)*10.d0) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(         +     b\(4,k\)* 6.d0 + b\(3,k\)* 3.d0 + b\(2,k\)\)) S
LHL
(        e\(3,k\) = q3*\(b\(7,k\)*35.d0 + b\(6,k\)*20.d0 + b\(5,k\)*10.d0) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(         +     b\(4,k\)*4.d0  + b\(3,k\)\)) S
LHL
(        e\(4,k\) = q4*\(b\(7,k\)*35.d0 + b\(6,k\)*15.d0 + b\(5,k\)*5.d0 + b\(4,k\)\)) S
LHL
(        e\(5,k\) = q5*\(b\(7,k\)*21.d0 + b\(6,k\)*6.d0  + b\(5,k\)\)) S
LHL
(        e\(6,k\) = q6*\(b\(7,k\)*7.d0  + b\(6,k\)\)) S
LHL
(        e\(7,k\) = q7* b\(7,k\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        b\(1,k\) = e\(1,k\) + s\(1\)) S
LHL
(        b\(2,k\) = e\(2,k\) + s\(2\)) S
LHL
(        b\(3,k\) = e\(3,k\) + s\(3\)) S
LHL
(        b\(4,k\) = e\(4,k\) + s\(4\)) S
LHL
(        b\(5,k\) = e\(5,k\) + s\(5\)) S
LHL
(        b\(6,k\) = e\(6,k\) + s\(6\)) S
LHL
(        b\(7,k\) = e\(7,k\) + s\(7\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      dtflag = 2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MFO_ALL.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 59 59
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4177 def
/PageNumber 59 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4176 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates accelerations on a set of NBOD bodies \(of which NBIG are Big\)) S
LHL
(c) S
( ) S
(due to Newtonian gravitational perturbations, post-Newtonian) S
LHL
(c) S
( ) S
(corrections \(if required\), cometary non-gravitational forces \(if required\)) S
LHL
(c) S
( ) S
(and user-defined forces \(if required\).) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. Input/output must be in coordinates with respect to the central body.) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_all) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,x,v,s,rcrit,a,stat,ngf,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ngflag,opt,nce,ice,jce\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(nce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ice) S
0.000 0.000 0.000 FG
(\(nce\),jce\(nce\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),s\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(ngf) S
0.000 0.000 0.000 FG
(\(4,nbod\),rcrit\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(acor) S
0.000 0.000 0.000 FG
(\(3,NMAX\),acen\(3\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Newtonian gravitational forces) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_grav) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,x,v,a,stat\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Correct for oblateness of the central body) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(jcen\(1\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jcen\(2\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jcen\(3\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_obl) S
0.000 0.000 0.000 FG
( \(jcen,nbod,m,x,acor,acen\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          a\(1,j\) = a\(1,j\) + \(acor\(1,j\) - acen\(1\)\)) S
LHL
(          a\(2,j\) = a\(2,j\) + \(acor\(2,j\) - acen\(2\)\)) S
LHL
(          a\(3,j\) = a\(3,j\) + \(acor\(3,j\) - acen\(3\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Include non-gravitational \(cometary jet\) accelerations if necessary) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_ngf) S
0.000 0.000 0.000 FG
( \(nbod,x,v,acor,ngf\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          a\(1,j\) = a\(1,j\) + acor\(1,j\)) S
LHL
(          a\(2,j\) = a\(2,j\) + acor\(2,j\)) S
LHL
(          a\(3,j\) = a\(3,j\) + acor\(3,j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Include radiation pressure/Poynting-Robertson drag if necessary) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_pr) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,x,v,acor,ngf\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          a\(1,j\) = a\(1,j\) + acor\(1,j\)) S
LHL
(          a\(2,j\) = a\(2,j\) + acor\(2,j\)) S
LHL
(          a\(3,j\) = a\(3,j\) + acor\(3,j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Include post-Newtonian corrections if required) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(7\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_pn) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,x,v,acor\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          a\(1,j\) = a\(1,j\) + acor\(1,j\)) S
LHL
(          a\(2,j\) = a\(2,j\) + acor\(2,j\)) S
LHL
(          a\(3,j\) = a\(3,j\) + acor\(3,j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 60 60
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4249 def
/PageNumber 60 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4248 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Include user-defined accelerations if required) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_user) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,x,v,acor\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          a\(1,j\) = a\(1,j\) + acor\(1,j\)) S
LHL
(          a\(2,j\) = a\(2,j\) + acor\(2,j\)) S
LHL
(          a\(3,j\) = a\(3,j\) + acor\(3,j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MFO_GRAV.FOR    \(ErikSoft   3 October 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates accelerations on a set of NBOD bodies \(NBIG of which are Big\)) S
LHL
(c) S
( ) S
(due to gravitational perturbations by all the other bodies, except that) S
LHL
(c) S
( ) S
(Small bodies do not interact with one another.) S
LHL
(c) S
LHL
(c) S
( ) S
(The positions and velocities are stored in arrays X, V with the format) S
LHL
(c) S
( ) S
(\(x,y,z\) and \(vx,vy,vz\) for each object in succession. The accelerations ) S
LHL
(c) S
( ) S
(are stored in the array A \(ax,ay,az\).) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates and velocities must be with respect to central body!!!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_grav) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,x,v,a,stat\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, stat\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\), a\(3,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(, j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(sx) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(sy) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(sz) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(dx) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(dy) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(dz) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(tmp1) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(tmp2) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(s_1) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(s2) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(s_3) S
0.000 0.000 0.000 FG
(, r3\(NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      sx = 0.d0) S
LHL
(      sy = 0.d0) S
LHL
(      sz = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 2, nbod) S
LHL
(        a\(1,i\) = 0.d0) S
LHL
(        a\(2,i\) = 0.d0) S
LHL
(        a\(3,i\) = 0.d0) S
LHL
(        s2 = x\(1,i\)*x\(1,i\) + x\(2,i\)*x\(2,i\) + x\(3,i\)*x\(3,i\)) S
LHL
(        s_1  = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(s2\)) S
LHL
(        r3\(i\) = s_1 * s_1 * s_1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 2, nbod) S
LHL
(        tmp1 = m\(i\) * r3\(i\)) S
LHL
(        sx = sx  -  tmp1 * x\(1,i\)) S
LHL
(        sy = sy  -  tmp1 * x\(2,i\)) S
LHL
(        sz = sz  -  tmp1 * x\(3,i\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Direct terms) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 2, nbig) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = i + 1, nbod) S
EndPage
EndDSCPage
EndSheet

%%Page: 61 61
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4321 def
/PageNumber 61 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4320 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          dx = x\(1,j\) - x\(1,i\)) S
LHL
(          dy = x\(2,j\) - x\(2,i\)) S
LHL
(          dz = x\(3,j\) - x\(3,i\)) S
LHL
(          s2 = dx*dx + dy*dy + dz*dz) S
LHL
(          s_1 = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(s2\)) S
LHL
(          s_3 = s_1 * s_1 * s_1) S
LHL
(          tmp1 = s_3 * m\(i\)) S
LHL
(          tmp2 = s_3 * m\(j\)) S
LHL
(          a\(1,j\) = a\(1,j\)  -  tmp1 * dx) S
LHL
(          a\(2,j\) = a\(2,j\)  -  tmp1 * dy) S
LHL
(          a\(3,j\) = a\(3,j\)  -  tmp1 * dz) S
LHL
(          a\(1,i\) = a\(1,i\)  +  tmp2 * dx) S
LHL
(          a\(2,i\) = a\(2,i\)  +  tmp2 * dy) S
LHL
(          a\(3,i\) = a\(3,i\)  +  tmp2 * dz) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Indirect terms \(add these on last to reduce roundoff error\)) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 2, nbod) S
LHL
(        tmp1 = m\(1\) * r3\(i\)) S
LHL
(        a\(1,i\) = a\(1,i\)  +  sx  -  tmp1 * x\(1,i\)) S
LHL
(        a\(2,i\) = a\(2,i\)  +  sy  -  tmp1 * x\(2,i\)) S
LHL
(        a\(3,i\) = a\(3,i\)  +  sz  -  tmp1 * x\(3,i\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
PHL
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(     ) S
(MFO_DRCT.FOR    \(ErikSoft   27 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates direct accelerations between bodies in the interaction part) S
LHL
(c) S
( ) S
(of the Hamiltonian of a symplectic integrator that partitions close) S
LHL
(c) S
( ) S
(encounter terms \(e.g. hybrid symplectic algorithms or SyMBA\).) S
LHL
(c) S
( ) S
(The routine calculates accelerations between all pairs of bodies with) S
LHL
(c) S
( ) S
(indices I >= I0.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_drct) S
0.000 0.000 0.000 FG
( \(i0,nbod,nbig,m,x,rcrit,a,stat\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i0) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, stat\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,nbod\), rcrit\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dz) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s_1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s_3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rc) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rc2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q5) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(faci) S
0.000 0.000 0.000 FG
(,facj) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i0) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0\) i0 = 2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = i0, nbig) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = i + 1, nbod) S
LHL
(          dx = x\(1,j\) - x\(1,i\)) S
LHL
(          dy = x\(2,j\) - x\(2,i\)) S
LHL
(          dz = x\(3,j\) - x\(3,i\)) S
LHL
(          s2 = dx * dx  +  dy * dy  +  dz * dz) S
LHL
(          rc = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\(rcrit\(i\), rcrit\(j\)\)) S
LHL
(          rc2 = rc * rc) S
EndPage
EndDSCPage
EndSheet

%%Page: 62 62
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4393 def
/PageNumber 62 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4392 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(s2) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(rc2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            s_1 = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(s2\)) S
LHL
(            tmp2 = s_1 * s_1 * s_1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(s2) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0.01*rc2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            tmp2 = 0.d0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            s_1 = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(s2\)) S
LHL
(            s   = 1.d0 / s_1) S
LHL
(            s_3 = s_1 * s_1 * s_1) S
LHL
(            q = \(s - 0.1d0*rc\) / \(0.9d0 * rc\)) S
LHL
(            q2 = q  * q) S
LHL
(            q3 = q  * q2) S
LHL
(            q4 = q2 * q2) S
LHL
(            q5 = q2 * q3) S
LHL
(            tmp2 = \(10.d0*q3 - 15.d0*q4 + 6.d0*q5\) * s_3) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(          faci = tmp2 * m\(i\)) S
LHL
(          facj = tmp2 * m\(j\)) S
LHL
(          a\(1,j\) = a\(1,j\)  -  faci * dx) S
LHL
(          a\(2,j\) = a\(2,j\)  -  faci * dy) S
LHL
(          a\(3,j\) = a\(3,j\)  -  faci * dz) S
LHL
(          a\(1,i\) = a\(1,i\)  +  facj * dx) S
LHL
(          a\(2,i\) = a\(2,i\)  +  facj * dy) S
LHL
(          a\(3,i\) = a\(3,i\)  +  facj * dz) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(     ) S
(MFO_HY.FOR    \(ErikSoft   2 October 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates accelerations due to the Interaction part of the Hamiltonian ) S
LHL
(c) S
( ) S
(of a hybrid symplectic integrator for a set of NBOD bodies \(NBIG of which ) S
LHL
(c) S
( ) S
(are Big\), where Small bodies do not interact with one another.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_hy) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,rcrit,a,stat\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, stat\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\), ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,nbod\), rcrit\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( k) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(aobl) S
0.000 0.000 0.000 FG
(\(3,NMAX\),acen\(3\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Initialize accelerations to zero) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nbod) S
LHL
(        a\(1,k\) = 0.d0) S
LHL
(        a\(2,k\) = 0.d0) S
LHL
(        a\(3,k\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate direct terms) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_drct) S
0.000 0.000 0.000 FG
( \(2,nbod,nbig,m,x,rcrit,a,stat\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 63 63
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4465 def
/PageNumber 63 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4464 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Add accelerations due to oblateness of the central body) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(jcen\(1\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jcen\(2\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jcen\(3\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_obl) S
0.000 0.000 0.000 FG
( \(jcen,nbod,m,x,aobl,acen\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(          a\(1,k\) = a\(1,k\) + aobl\(1,k\) - acen\(1\)) S
LHL
(          a\(2,k\) = a\(2,k\) + aobl\(2,k\) - acen\(2\)) S
LHL
(          a\(3,k\) = a\(3,k\) + aobl\(3,k\) - acen\(3\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(     ) S
(MFO_HKCE.FOR    \(ErikSoft   27 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates accelerations due to the Keplerian part of the Hamiltonian ) S
LHL
(c) S
( ) S
(of a hybrid symplectic integrator, when close encounters are taking place,) S
LHL
(c) S
( ) S
(for a set of NBOD bodies \(NBIG of which are Big\). Note that Small bodies) S
LHL
(c) S
( ) S
(do not interact with one another.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_hkce) S
0.000 0.000 0.000 FG
( \(time,jcen,nbod,nbig,m,x,v,spin,rcrit,a,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ngf,ngflag,opt,nce,ice,jce\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(nce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ice) S
0.000 0.000 0.000 FG
(\(nce\),jce\(nce\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(rcrit) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(ngf) S
0.000 0.000 0.000 FG
(\(4,nbod\),m\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,nbod\),spin\(3,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(, k) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tmp2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dz) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s_1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s_3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(faci) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(facj) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rc) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rc2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q4) S
0.000 0.000 0.000 FG
(,q5) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Initialize accelerations) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nbod) S
LHL
(        a\(1,j\) = 0.d0) S
LHL
(        a\(2,j\) = 0.d0) S
LHL
(        a\(3,j\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Direct terms) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nce) S
LHL
(        i = ice\(k\)) S
LHL
(        j = jce\(k\)) S
LHL
(        dx = x\(1,j\) - x\(1,i\)) S
LHL
(        dy = x\(2,j\) - x\(2,i\)) S
LHL
(        dz = x\(3,j\) - x\(3,i\)) S
LHL
(        s2 = dx * dx  +  dy * dy  +  dz * dz) S
LHL
(        rc = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
( \(rcrit\(i\), rcrit\(j\)\)) S
LHL
(        rc2 = rc * rc) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(s2) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(rc2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          s_1 = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(s2\)) S
LHL
(          s_3 = s_1 * s_1 * s_1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(s2) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0.01*rc2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            tmp2 = s_3) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 64 64
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4537 def
/PageNumber 64 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4536 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(            s = 1.d0 / s_1) S
LHL
(            q = \(s - 0.1d0*rc\) / \(0.9d0 * rc\)) S
LHL
(            q2 = q * q) S
LHL
(            q3 = q * q2) S
LHL
(            q4 = q2 * q2) S
LHL
(            q5 = q2 * q3) S
LHL
(            tmp2 = \(1.d0 - 10.d0*q3 + 15.d0*q4 - 6.d0*q5\) * s_3) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(          faci = tmp2 * m\(i\)) S
LHL
(          facj = tmp2 * m\(j\)) S
LHL
(          a\(1,j\) = a\(1,j\)  -  faci * dx) S
LHL
(          a\(2,j\) = a\(2,j\)  -  faci * dy) S
LHL
(          a\(3,j\) = a\(3,j\)  -  faci * dz) S
LHL
(          a\(1,i\) = a\(1,i\)  +  facj * dx) S
LHL
(          a\(2,i\) = a\(2,i\)  +  facj * dy) S
LHL
(          a\(3,i\) = a\(3,i\)  +  facj * dz) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Solar terms) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 2, nbod) S
LHL
(        s2 = x\(1,i\)*x\(1,i\) + x\(2,i\)*x\(2,i\) + x\(3,i\)*x\(3,i\)) S
LHL
(        s_1 = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(s2\)) S
LHL
(        tmp2 = m\(1\) * s_1 * s_1 * s_1) S
LHL
(        a\(1,i\) = a\(1,i\)  -  tmp2 * x\(1,i\)) S
LHL
(        a\(2,i\) = a\(2,i\)  -  tmp2 * x\(2,i\)) S
LHL
(        a\(3,i\) = a\(3,i\)  -  tmp2 * x\(3,i\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(     ) S
(MFO_MVS.FOR    \(ErikSoft   2 October 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates accelerations on a set of NBOD bodies \(of which NBIG are Big\)) S
LHL
(c) S
( ) S
(due to gravitational perturbations by all the other bodies.) S
LHL
(c) S
( ) S
(This routine is designed for use with a mixed-variable symplectic) S
LHL
(c) S
( ) S
(integrator using Jacobi coordinates.) S
LHL
(c) S
LHL
(c) S
( ) S
(Based upon routines from Levison and Duncan's SWIFT integrator.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_mvs) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,xj,a,stat\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, stat\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\), ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(xj) S
0.000 0.000 0.000 FG
(\(3,nbod\), a\(3,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,k1) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(fac0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fac1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fac12) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fac2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(minside) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dz) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s_1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s_3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(faci) S
0.000 0.000 0.000 FG
(,facj) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a0) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(a0tp) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(a1) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(a2) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(a3) S
0.000 0.000 0.000 FG
(\(3,NMAX\),aobl\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rj) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rj2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rj3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q5) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q6) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q7) S
0.000 0.000 0.000 FG
(,acen\(3\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Initialize variables) S
LHL
0.000 0.000 0.000 FG
(      a0\(1\) = 0.d0) S
LHL
(      a0\(2\) = 0.d0) S
EndPage
EndDSCPage
EndSheet

%%Page: 65 65
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4609 def
/PageNumber 65 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4608 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      a0\(3\) = 0.d0) S
LHL
(      a1\(1,2\) = 0.d0) S
LHL
(      a1\(2,2\) = 0.d0) S
LHL
(      a1\(3,2\) = 0.d0) S
LHL
(      a2\(1,2\) = 0.d0) S
LHL
(      a2\(2,2\) = 0.d0) S
LHL
(      a2\(3,2\) = 0.d0) S
LHL
(      minside = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate acceleration terms) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 3, nbig) S
LHL
(        k1 = k - 1) S
LHL
(        minside = minside + m\(k1\)) S
LHL
(        r2   = x\(1,k\)  * x\(1,k\)  +  x\(2,k\) * x\(2,k\)  +  x\(3,k\) * x\(3,k\)) S
LHL
(        rj2  = xj\(1,k\) * xj\(1,k\) + xj\(2,k\) * xj\(2,k\) + xj\(3,k\) * xj\(3,k\)) S
LHL
(        r  = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(r2\)) S
LHL
(        rj = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(rj2\)) S
LHL
(        r3  = r  * r  * r) S
LHL
(        rj3 = rj * rj * rj) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        fac0 = m\(k\) * r3) S
LHL
(        fac12 = m\(1\) * rj3) S
LHL
(        fac2 = m\(k\) * fac12 / \(minside + m\(1\)\)) S
LHL
(        q = \(r2 - rj2\) * .5d0 / rj2) S
LHL
(        q2 = q  * q) S
LHL
(        q3 = q  * q2) S
LHL
(        q4 = q2 * q2) S
LHL
(        q5 = q2 * q3) S
LHL
(        q6 = q3 * q3) S
LHL
(        q7 = q3 * q4) S
LHL
(        fac1 = 402.1875d0*q7 - 187.6875d0*q6 + 86.625d0*q5) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(       - 39.375d0*q4 + 17.5d0*q3 - 7.5d0*q2 + 3.d0*q - 1.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Add to A0 term) S
LHL
0.000 0.000 0.000 FG
(        a0\(1\) = a0\(1\)  -  fac0 * x\(1,k\)) S
LHL
(        a0\(2\) = a0\(2\)  -  fac0 * x\(2,k\)) S
LHL
(        a0\(3\) = a0\(3\)  -  fac0 * x\(3,k\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate A1 for this body) S
LHL
0.000 0.000 0.000 FG
(        a1\(1,k\) = fac12 * \(xj\(1,k\) + fac1*x\(1,k\)\)) S
LHL
(        a1\(2,k\) = fac12 * \(xj\(2,k\) + fac1*x\(2,k\)\)) S
LHL
(        a1\(3,k\) = fac12 * \(xj\(3,k\) + fac1*x\(3,k\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate A2 for this body) S
LHL
0.000 0.000 0.000 FG
(        a2\(1,k\) = a2\(1,k1\)  +  fac2 * xj\(1,k\)) S
LHL
(        a2\(2,k\) = a2\(2,k1\)  +  fac2 * xj\(2,k\)) S
LHL
(        a2\(3,k\) = a2\(3,k1\)  +  fac2 * xj\(3,k\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      r2   = x\(1,2\)  * x\(1,2\)  +  x\(2,2\) * x\(2,2\)  +  x\(3,2\) * x\(3,2\)) S
LHL
(      r  = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(r2\)) S
LHL
(      r3  = r  * r  * r) S
LHL
(      fac0 = m\(2\) * r3) S
LHL
(      a0tp\(1\) = a0\(1\)  -  fac0 * x\(1,2\)) S
LHL
(      a0tp\(2\) = a0\(2\)  -  fac0 * x\(2,2\)) S
LHL
(      a0tp\(3\) = a0\(3\)  -  fac0 * x\(3,2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate A3 \(direct terms\)) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(        a3\(1,k\) = 0.d0) S
LHL
(        a3\(2,k\) = 0.d0) S
LHL
(        a3\(3,k\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 2, nbig) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = i + 1, nbig) S
LHL
(          dx = x\(1,j\) - x\(1,i\)) S
LHL
(          dy = x\(2,j\) - x\(2,i\)) S
LHL
(          dz = x\(3,j\) - x\(3,i\)) S
LHL
(          s2 = dx*dx + dy*dy + dz*dz) S
LHL
(          s_1 = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(s2\)) S
LHL
(          s_3 = s_1 * s_1 * s_1) S
LHL
(          faci = m\(i\) * s_3) S
EndPage
EndDSCPage
EndSheet

%%Page: 66 66
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4681 def
/PageNumber 66 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4680 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          facj = m\(j\) * s_3) S
LHL
(          a3\(1,j\) = a3\(1,j\)  -  faci * dx) S
LHL
(          a3\(2,j\) = a3\(2,j\)  -  faci * dy) S
LHL
(          a3\(3,j\) = a3\(3,j\)  -  faci * dz) S
LHL
(          a3\(1,i\) = a3\(1,i\)  +  facj * dx) S
LHL
(          a3\(2,i\) = a3\(2,i\)  +  facj * dy) S
LHL
(          a3\(3,i\) = a3\(3,i\)  +  facj * dz) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(          dx = x\(1,j\) - x\(1,i\)) S
LHL
(          dy = x\(2,j\) - x\(2,i\)) S
LHL
(          dz = x\(3,j\) - x\(3,i\)) S
LHL
(          s2 = dx*dx + dy*dy + dz*dz) S
LHL
(          s_1 = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(s2\)) S
LHL
(          s_3 = s_1 * s_1 * s_1) S
LHL
(          faci = m\(i\) * s_3) S
LHL
(          a3\(1,j\) = a3\(1,j\)  -  faci * dx) S
LHL
(          a3\(2,j\) = a3\(2,j\)  -  faci * dy) S
LHL
(          a3\(3,j\) = a3\(3,j\)  -  faci * dz) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Big-body accelerations) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbig) S
LHL
(        a\(1,k\) = a0\(1\) + a1\(1,k\) + a2\(1,k\) + a3\(1,k\)) S
LHL
(        a\(2,k\) = a0\(2\) + a1\(2,k\) + a2\(2,k\) + a3\(2,k\)) S
LHL
(        a\(3,k\) = a0\(3\) + a1\(3,k\) + a2\(3,k\) + a3\(3,k\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Small-body accelerations) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = nbig + 1, nbod) S
LHL
(        a\(1,k\) = a0tp\(1\) + a3\(1,k\)) S
LHL
(        a\(2,k\) = a0tp\(2\) + a3\(2,k\)) S
LHL
(        a\(3,k\) = a0tp\(3\) + a3\(3,k\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Correct for oblateness of the central body) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(jcen\(1\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jcen\(2\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jcen\(3\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_obl) S
0.000 0.000 0.000 FG
( \(jcen,nbod,m,x,aobl,acen\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(          a\(1,k\) = a\(1,k\) + \(aobl\(1,k\) - acen\(1\)\)) S
LHL
(          a\(2,k\) = a\(2,k\) + \(aobl\(2,k\) - acen\(2\)\)) S
LHL
(          a\(3,k\) = a\(3,k\) + \(aobl\(3,k\) - acen\(3\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MFO_NGF.FOR    \(ErikSoft  29 November 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates accelerations on a set of NBOD bodies due to cometary) S
LHL
(c) S
( ) S
(non-gravitational jet forces. The positions and velocities are stored in) S
LHL
(c) S
( ) S
(arrays X, V with the format \(x,y,z\) and \(vx,vy,vz\) for each object in) S
LHL
(c) S
( ) S
(succession. The accelerations are stored in the array A \(ax,ay,az\). The) S
LHL
(c) S
( ) S
(non-gravitational accelerations follow a force law described by Marsden) S
LHL
(c) S
( ) S
(et al. \(1973\) Astron. J. 211-225, with magnitude determined by the) S
LHL
(c) S
( ) S
(parameters NGF\(1,2,3\) for each object.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates and velocities must be with respect to central body!!!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 67 67
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4753 def
/PageNumber 67 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4752 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_ngf) S
0.000 0.000 0.000 FG
( \(nbod,x,v,a,ngf\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( nbod) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,nbod\), ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(r2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rv) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(g) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ty) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tz) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ny) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nz) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a2) S
0.000 0.000 0.000 FG
(,a3) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        r2 = x\(1,j\)*x\(1,j\) + x\(2,j\)*x\(2,j\) +x\(3,j\)*x\(3,j\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Only calculate accelerations if body is close to the Sun \(R < 9.36 AU\), ) S
LHL
(c) S
( ) S
(or if the non-gravitational force parameters are exceptionally large.) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(r2) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(88.d0) S
0.627 0.125 0.941 FG
(.or.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(ngf\(1,j\)\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(1d-7) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(.or.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(ngf\(2,j\)\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(1d-7) S
0.627 0.125 0.941 FG
(.or.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(ngf\(3,j\)\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(1d-7\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          r = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(r2\)) S
LHL
(          rv = x\(1,j\)*v\(1,j\) + x\(2,j\)*v\(2,j\) + x\(3,j\)*v\(3,j\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate Q = R / R0, where R0 = 2.808 AU) S
LHL
0.000 0.000 0.000 FG
(          q = r * .3561253561253561d0) S
LHL
(          g = .111262d0 * q**\(-2.15d0\) * \(1.d0+q**5.093d0\)**\(-4.6142d0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Within-orbital-plane transverse vector components) S
LHL
0.000 0.000 0.000 FG
(          tx = r2*v\(1,j\) - rv*x\(1,j\)) S
LHL
(          ty = r2*v\(2,j\) - rv*x\(2,j\)) S
LHL
(          tz = r2*v\(3,j\) - rv*x\(3,j\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Orbit-normal vector components) S
LHL
0.000 0.000 0.000 FG
(          nx = x\(2,j\)*v\(3,j\) - x\(3,j\)*v\(2,j\)) S
LHL
(          ny = x\(3,j\)*v\(1,j\) - x\(1,j\)*v\(3,j\)) S
LHL
(          nz = x\(1,j\)*v\(2,j\) - x\(2,j\)*v\(1,j\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Multiplication factors) S
LHL
0.000 0.000 0.000 FG
(          a1 = ngf\(1,j\) * g / r) S
LHL
(          a2 = ngf\(2,j\) * g / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(tx*tx + ty*ty + tz*tz\)) S
LHL
(          a3 = ngf\(3,j\) * g / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(nx*nx + ny*ny + nz*nz\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(X,Y and Z components of non-gravitational acceleration) S
LHL
0.000 0.000 0.000 FG
(          a\(1,j\) = a1*x\(1,j\) + a2*tx + a3*nx) S
LHL
(          a\(2,j\) = a1*x\(2,j\) + a2*ty + a3*ny) S
LHL
(          a\(3,j\) = a1*x\(3,j\) + a2*tz + a3*nz) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          a\(1,j\) = 0.d0) S
LHL
(          a\(2,j\) = 0.d0) S
LHL
(          a\(3,j\) = 0.d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(     ) S
(MFO_OBL.FOR    \(ErikSoft   2 October 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates barycentric accelerations of NBOD bodies due to oblateness of) S
LHL
(c) S
( ) S
(the central body. Also returns the corresponding barycentric acceleration) S
LHL
(c) S
( ) S
(of the central body.) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 68 68
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4825 def
/PageNumber 68 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4824 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(N.B. All coordinates must be with respect to the central body!!!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_obl) S
0.000 0.000 0.000 FG
( \(jcen,nbod,m,x,a,acen\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( nbod) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\), ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,nbod\), acen\(3\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( i) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jr2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jr4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jr6) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r_1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r_2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r_3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u6) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp3) S
0.000 0.000 0.000 FG
(,tmp4) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      acen\(1\) = 0.d0) S
LHL
(      acen\(2\) = 0.d0) S
LHL
(      acen\(3\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 2, nbod) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate barycentric accelerations on the objects) S
LHL
0.000 0.000 0.000 FG
(        r2 = x\(1,i\)*x\(1,i\) + x\(2,i\)*x\(2,i\) + x\(3,i\)*x\(3,i\)) S
LHL
(        r_1 = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(r2\)) S
LHL
(        r_2 = r_1 * r_1) S
LHL
(        r_3 = r_2 * r_1) S
LHL
(        jr2 = jcen\(1\) * r_2) S
LHL
(        jr4 = jcen\(2\) * r_2 * r_2) S
LHL
(        jr6 = jcen\(3\) * r_2 * r_2 * r_2) S
LHL
(        u2 = x\(3,i\) * x\(3,i\) * r_2) S
LHL
(        u4 = u2 * u2) S
LHL
(        u6 = u4 * u2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        tmp1 = m\(1\) * r_3) S
LHL
(        tmp2 =jr2*\(7.5d0*u2 - 1.5d0\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(       +jr4*\(39.375d0*u4 - 26.25d0*u2 + 1.875d0\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(       +jr6*\(187.6875d0*u6 -216.5625d0*u4 +59.0625d0*u2 -2.1875d0\)) S
LHL
(        tmp3 = jr2*3.d0 + jr4*\(17.5d0*u2 - 7.5d0\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(       + jr6*\(86.625d0*u4 - 78.75d0*u2 + 13.125d0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        a\(1,i\) = x\(1,i\) * tmp1 * tmp2) S
LHL
(        a\(2,i\) = x\(2,i\) * tmp1 * tmp2) S
LHL
(        a\(3,i\) = x\(3,i\) * tmp1 * \(tmp2 - tmp3\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate barycentric accelerations on the central body) S
LHL
0.000 0.000 0.000 FG
(        tmp4 = m\(i\) / m\(1\)) S
LHL
(        acen\(1\) = acen\(1\)  -  tmp4 * a\(1,i\)) S
LHL
(        acen\(2\) = acen\(2\)  -  tmp4 * a\(2,i\)) S
LHL
(        acen\(3\) = acen\(3\)  -  tmp4 * a\(3,i\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MFO_PN.FOR    \(ErikSoft   3 October 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(****** To be completed at a later date ******) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates post-Newtonian relativistic corrective accelerations for a set) S
LHL
(c) S
( ) S
(of NBOD bodies \(NBIG of which are Big\).) S
EndPage
EndDSCPage
EndSheet

%%Page: 69 69
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4897 def
/PageNumber 69 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4896 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(This routine should not be called from the symplectic algorithm MAL_MVS) S
LHL
(c) S
( ) S
(or the conservative Bulirsch-Stoer algorithm MAL_BS2.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates and velocities must be with respect to central body!!!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_pn) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,x,v,a\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, nbig) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\), a\(3,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nbod) S
LHL
(        a\(1,j\) = 0.d0) S
LHL
(        a\(2,j\) = 0.d0) S
LHL
(        a\(3,j\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MFO_PR.FOR    \(ErikSoft   3 October 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(****** To be completed at a later date ******) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates radiation pressure and Poynting-Robertson drag for a set) S
LHL
(c) S
( ) S
(of NBOD bodies \(NBIG of which are Big\).) S
LHL
(c) S
LHL
(c) S
( ) S
(This routine should not be called from the symplectic algorithm MAL_MVS) S
LHL
(c) S
( ) S
(or the conservative Bulirsch-Stoer algorithm MAL_BS2.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates and velocities must be with respect to central body!!!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mfo_pr) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,x,v,a,ngf\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, nbig) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(\(3,nbod\), ngf\(4,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nbod) S
LHL
(        a\(1,j\) = 0.d0) S
LHL
(        a\(2,j\) = 0.d0) S
LHL
(        a\(3,j\) = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 70 70
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 4969 def
/PageNumber 70 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
4968 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_C2FL.FOR    \(ErikSoft  1 July 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts a CHARACTER*8 ASCII string into a REAL*8 variable.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. X will lie in the range -1.e112 < X < 1.e112) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_c2fl) S
0.000 0.000 0.000 FG
( \(c\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 mio_c2fl) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ex) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,mio_c2re) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      x = mio_c2re \(c\(1:8\), 0.d0, 1.d0, 7\)) S
LHL
(      x = x * 2.d0 - 1.d0) S
LHL
(      ex = ) S
0.855 0.439 0.839 FG
(ichar) S
0.000 0.000 0.000 FG
(\(c\(8:8\)\) - 32 - 112) S
LHL
(      mio_c2fl = x * \(10.d0**) S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(ex\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_C2RE.FOR    \(ErikSoft  1 July 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts an ASCII string into a REAL*8 variable X, where XMIN <= X < XMAX,) S
LHL
(c) S
( ) S
(using the new format compression:) S
LHL
(c) S
LHL
(c) S
( ) S
(X is assumed to be made up of NCHAR base-224 digits, each one represented) S
LHL
(c) S
( ) S
(by a character in the ASCII string. Each digit is given by the ASCII) S
LHL
(c) S
( ) S
(number of the character minus 32.) S
LHL
(c) S
( ) S
(The first 32 ASCII characters \(CTRL characters\) are avoided, because they) S
LHL
(c) S
( ) S
(cause problems when using some operating systems.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_c2re) S
0.000 0.000 0.000 FG
( \(c,xmin,xmax,nchar\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( nchar) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(xmin) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(xmax) S
0.000 0.000 0.000 FG
(,mio_c2re) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
EndPage
EndDSCPage
EndSheet

%%Page: 71 71
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5041 def
/PageNumber 71 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5040 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 y) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      y = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nchar, 1, -1) S
LHL
(        y = \(y + ) S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(ichar) S
0.000 0.000 0.000 FG
(\(c\(j:j\)\) - 32\)\) / 224.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      mio_c2re = xmin  +  y * \(xmax - xmin\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_CE.FOR    \(ErikSoft   1 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Writes details of close encounter minima to an output file, and decides how) S
LHL
(c) S
( ) S
(to continue the integration depending upon the close-encounter option) S
LHL
(c) S
( ) S
(chosen by the user. Close encounter details are stored until either 100) S
LHL
(c) S
( ) S
(have been accumulated, or a data dump is done, at which point the stored) S
LHL
(c) S
( ) S
(encounter details are also output.) S
LHL
(c) S
LHL
(c) S
( ) S
(For each encounter, the routine outputs the time and distance of closest) S
LHL
(c) S
( ) S
(approach, the identities of the objects involved, and the output) S
LHL
(c) S
( ) S
(variables of the objects at this time. The output variables are:) S
LHL
(c) S
( ) S
(expressed as) S
LHL
(c) S
(  ) S
(r = the radial distance) S
LHL
(c) S
(  ) S
(theta = polar angle) S
LHL
(c) S
(  ) S
(phi = azimuthal angle) S
LHL
(c) S
(  ) S
(fv = 1 / [1 + 2\(ke/be\)^2], where be and ke are the object's binding and) S
LHL
(c) S
(                             ) S
(kinetic energies. \(Note that 0 < fv < 1\).) S
LHL
(c) S
(  ) S
(vtheta = polar angle of velocity vector) S
LHL
(c) S
(  ) S
(vphi = azimuthal angle of the velocity vector) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_ce) S
0.000 0.000 0.000 FG
( \(time,tstart,rcen,rmax,nbod,nbig,m,stat,id,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  nclo,iclo,jclo,opt,stopflag,tclo,dclo,ixvclo,jxvclo,mem,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  lmem,outfile,nstored,ceflush\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(lmem) S
0.000 0.000 0.000 FG
(\(NMESS\),stopflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nclo) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(iclo) S
0.000 0.000 0.000 FG
(\(nclo\),) S
0.722 0.525 0.043 FG
(jclo) S
0.000 0.000 0.000 FG
(\(nclo\),) S
0.722 0.525 0.043 FG
(nstored) S
0.000 0.000 0.000 FG
(,ceflush) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(tclo) S
0.000 0.000 0.000 FG
(\(nclo\),dclo\(nclo\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ixvclo) S
0.000 0.000 0.000 FG
(\(6,nclo\),jxvclo\(6,nclo\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(\(3\),mem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(year) S
0.000 0.000 0.000 FG
(,month) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tmp0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(t1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rfac) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fr) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fv) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(theta) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(phi) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vtheta) S
0.000 0.000 0.000 FG
(,vphi) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 c\(200\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*38 fstop) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mio_fl2c) S
0.000 0.000 0.000 FG
(, mio_re2c) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*6 tstring) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(save) S
0.000 0.000 0.000 FG
( c) S
LHL
0.698 0.133 0.133 FG
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 72 72
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5113 def
/PageNumber 72 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5112 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Scaling factor \(maximum possible range\) for distances) S
LHL
0.000 0.000 0.000 FG
(      rfac = ) S
0.855 0.439 0.839 FG
(log10) S
0.000 0.000 0.000 FG
( \(rmax / rcen\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Store details of each new close-encounter minimum) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nclo) S
LHL
(        nstored = nstored + 1) S
LHL
(        c\(nstored\)\(1:8\)   = mio_fl2c\(tclo\(k\)\)) S
LHL
(        c\(nstored\)\(9:16\)  = mio_re2c\() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(iclo\(k\)-1\),0.d0,11239423.99d0\)) S
LHL
(        c\(nstored\)\(12:19\) = mio_re2c\() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(jclo\(k\)-1\),0.d0,11239423.99d0\)) S
LHL
(        c\(nstored\)\(15:22\) = mio_fl2c\(dclo\(k\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2ov) S
0.000 0.000 0.000 FG
( \(rcen,rmax,m\(1\),0.d0,ixvclo\(1,k\),ixvclo\(2,k\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ixvclo\(3,k\),ixvclo\(4,k\),ixvclo\(5,k\),ixvclo\(6,k\),fr,theta,phi,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    fv,vtheta,vphi\)) S
LHL
(        c\(nstored\)\(23:30\) = mio_re2c \(fr    , 0.d0, rfac\)) S
LHL
(        c\(nstored\)\(27:34\) = mio_re2c \(theta , 0.d0, PI\)) S
LHL
(        c\(nstored\)\(31:38\) = mio_re2c \(phi   , 0.d0, TWOPI\)) S
LHL
(        c\(nstored\)\(35:42\) = mio_re2c \(fv    , 0.d0, 1.d0\)) S
LHL
(        c\(nstored\)\(39:46\) = mio_re2c \(vtheta, 0.d0, PI\)) S
LHL
(        c\(nstored\)\(43:50\) = mio_re2c \(vphi  , 0.d0, TWOPI\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2ov) S
0.000 0.000 0.000 FG
( \(rcen,rmax,m\(1\),0.d0,jxvclo\(1,k\),jxvclo\(2,k\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    jxvclo\(3,k\),jxvclo\(4,k\),jxvclo\(5,k\),jxvclo\(6,k\),fr,theta,phi,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    fv,vtheta,vphi\)) S
LHL
(        c\(nstored\)\(47:54\) = mio_re2c \(fr    , 0.d0, rfac\)) S
LHL
(        c\(nstored\)\(51:58\) = mio_re2c \(theta , 0.d0, PI\)) S
LHL
(        c\(nstored\)\(55:62\) = mio_re2c \(phi   , 0.d0, TWOPI\)) S
LHL
(        c\(nstored\)\(59:66\) = mio_re2c \(fv    , 0.d0, 1.d0\)) S
LHL
(        c\(nstored\)\(63:74\) = mio_re2c \(vtheta, 0.d0, PI\)) S
LHL
(        c\(nstored\)\(67:78\) = mio_re2c \(vphi  , 0.d0, TWOPI\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If required, output the stored close encounter details) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nstored) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(100) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ceflush) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
(  10) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(22, file=outfile\(2\), status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
(\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nstored) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(22,) S
0.737 0.561 0.561 FG
('\(a1,a2,a70\)') S
0.000 0.000 0.000 FG
(\) ) S
0.855 0.439 0.839 FG
(char) S
0.000 0.000 0.000 FG
(\(12\),) S
0.737 0.561 0.561 FG
('6b') S
0.000 0.000 0.000 FG
(,c\(k\)\(1:70\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(22\)) S
LHL
(        nstored = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If new encounter minima have occurred, decide whether to stop integration) S
LHL
0.000 0.000 0.000 FG
(      stopflag = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(nclo) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
(  20) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(23, file=outfile\(3\), status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(20) S
0.000 0.000 0.000 FG
(\)) S
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(If time style is Gregorian date then...) S
LHL
0.000 0.000 0.000 FG
(        tmp0 = tclo\(1\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          fstop = ) S
0.737 0.561 0.561 FG
('\(5a,/,9x,a,i10,1x,i2,1x,f4.1\)') S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_jd2y) S
0.000 0.000 0.000 FG
( \(tmp0,year,month,t1\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,fstop\) mem\(121\)\(1:lmem\(121\)\),mem\(126\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      \(1:lmem\(126\)\),id\(iclo\(1\)\),) S
0.737 0.561 0.561 FG
(',') S
0.000 0.000 0.000 FG
(,id\(jclo\(1\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(71\)\(1:lmem\(71\)\),year,month,t1) S
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Otherwise...) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            tstring = mem\(2\)) S
LHL
(            fstop = ) S
0.737 0.561 0.561 FG
('\(5a,/,9x,a,f14.3,a\)') S
0.000 0.000 0.000 FG
LHL
(            t1 = \(tmp0 - tstart\) / 365.25d0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            tstring = mem\(1\)) S
LHL
(            fstop = ) S
0.737 0.561 0.561 FG
('\(5a,/,9x,a,f14.1,a\)') S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) t1 = tmp0) S
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) t1 = tmp0 - tstart) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,fstop\) mem\(121\)\(1:lmem\(121\)\),mem\(126\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      \(1:lmem\(126\)\),id\(iclo\(1\)\),) S
0.737 0.561 0.561 FG
(',') S
0.000 0.000 0.000 FG
(,id\(jclo\(1\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(71\)\(1:lmem\(71\)\),t1,tstring) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        stopflag = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
(\(23\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 73 73
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5185 def
/PageNumber 73 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5184 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_DUMP.FOR    \(ErikSoft   21 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Writes masses, coordinates, velocities etc. of all objects, and integration) S
LHL
(c) S
( ) S
(parameters, to dump files. Also updates a restart file containing other) S
LHL
(c) S
( ) S
(variables used internally by MERCURY.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_dump) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,tol,jcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rcen,rmax,en,am,cefac,ndump,nfun,nbod,nbig,m,x,v,s,rho,rceh,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  stat,id,ngf,epoch,opt,opflag,dumpfile,mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(opflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ndump) S
0.000 0.000 0.000 FG
(,nfun) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( lmem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstop) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dtout) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(en) S
0.000 0.000 0.000 FG
(\(3\),am\(3\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(cefac) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),v\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(rho) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(rceh) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(ngf) S
0.000 0.000 0.000 FG
(\(4,nbod\),epoch\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(dumpfile) S
0.000 0.000 0.000 FG
(\(4\),mem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(idp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(len) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j1) S
0.000 0.000 0.000 FG
(,j2) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rhocgs) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k_2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rcen_2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rcen_4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rcen_6) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(\(3,NMAX\),v0\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*150 c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      rhocgs = AU * AU * AU * K2 / MSUN) S
LHL
(      k_2 = 1.d0 / K2) S
LHL
(      rcen_2 = 1.d0 / \(rcen * rcen\)) S
LHL
(      rcen_4 = rcen_2 * rcen_2) S
LHL
(      rcen_6 = rcen_4 * rcen_2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If using close-binary star, convert to user coordinates) S
LHL
(c) S
(      ) S
(if \(algor.eq.11\) call mco_h2ub \(time,jcen,nbod,nbig,h0,m,x,v,) S
LHL
(c) S
(     ) S
(%   x0,v0\)) S
LHL
(c) S
LHL
(c) S
( ) S
(Dump to temporary files \(idp=1\) and real dump files \(idp=2\)) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( idp = 1, 2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Dump data for the Big \(i=1\) and Small \(i=2\) bodies) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 1, 2) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(idp) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) c\(1:12\) = ) S
0.737 0.561 0.561 FG
('big.tmp     ') S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) c\(1:12\) = ) S
0.737 0.561 0.561 FG
('small.tmp   ') S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
(  20) S
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(31, file=c\(1:12\), status=) S
0.737 0.561 0.561 FG
('unknown') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(20) S
0.000 0.000 0.000 FG
(\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
(  25) S
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(31, file=dumpfile\(i\), status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(25) S
0.000 0.000 0.000 FG
(\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write header lines, data style \(and epoch for Big bodies\)) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(151+i\)\(1:lmem\(151+i\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            j1 = 2) S
LHL
(            j2 = nbig) S
EndPage
EndDSCPage
EndSheet

%%Page: 74 74
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5257 def
/PageNumber 74 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5256 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            j1 = nbig + 1) S
LHL
(            j2 = nbod) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(154\)\(1:lmem\(154\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(155\)\(1:lmem\(155\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,*\) mem\(156\)\(1:lmem\(156\)\),) S
0.737 0.561 0.561 FG
('Cartesian') S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,*\) mem\(157\)\(1:lmem\(157\)\),time) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(155\)\(1:lmem\(155\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(For each body...) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = j1, j2) S
LHL
(            len = 37) S
LHL
(            c\(1:8\) = id\(j\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(c\(9:37\),) S
0.737 0.561 0.561 FG
('\(1p,a3,e11.5,a3,e11.5\)') S
0.000 0.000 0.000 FG
(\) ) S
0.737 0.561 0.561 FG
(' r=') S
0.000 0.000 0.000 FG
(,rceh\(j\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        ) S
0.737 0.561 0.561 FG
(' d=') S
0.000 0.000 0.000 FG
(,rho\(j\)/rhocgs) S
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(m\(j\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(c\(len+1:len+25\),) S
0.737 0.561 0.561 FG
('\(a3,e22.15\)') S
0.000 0.000 0.000 FG
(\) ) S
0.737 0.561 0.561 FG
(' m=') S
0.000 0.000 0.000 FG
(,m\(j\)*k_2) S
LHL
(              len = len + 25) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 3) S
LHL
(              ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngf\(k,j\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(                ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(c\(len+1:len+16\),) S
0.737 0.561 0.561 FG
('\(a2,i1,a1,e12.5\)') S
0.000 0.000 0.000 FG
(\) ) S
0.737 0.561 0.561 FG
(' a') S
0.000 0.000 0.000 FG
(,k,) S
0.737 0.561 0.561 FG
('=') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(            ngf\(k,j\)) S
LHL
(                len = len + 16) S
LHL
(              ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngf\(4,j\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(c\(len+1:len+15\),) S
0.737 0.561 0.561 FG
('\(a3,e12.5\)') S
0.000 0.000 0.000 FG
(\) ) S
0.737 0.561 0.561 FG
(' b=') S
0.000 0.000 0.000 FG
(,ngf\(4,j\)) S
LHL
(              len = len + 15) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) c\(1:len\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,312\) x0\(1,j\), x0\(2,j\), x0\(3,j\)) S
LHL
(              ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,312\) v0\(1,j\), v0\(2,j\), v0\(3,j\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(              ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,312\) x\(1,j\), x\(2,j\), x\(3,j\)) S
LHL
(              ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,312\) v\(1,j\), v\(2,j\), v\(3,j\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(31,312\) s\(1,j\)*k_2, s\(2,j\)*k_2, s\(3,j\)*k_2) S
LHL
(          ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(31\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Dump the integration parameters) S
LHL
0.373 0.620 0.627 FG
(  40) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(idp) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(33,file=) S
0.737 0.561 0.561 FG
('param.tmp') S
0.000 0.000 0.000 FG
(,status=) S
0.737 0.561 0.561 FG
('unknown') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(40) S
0.000 0.000 0.000 FG
(\)) S
LHL
0.373 0.620 0.627 FG
(  45) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(idp) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(33, file=dumpfile\(3\), status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(45) S
0.000 0.000 0.000 FG
(\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Important parameters) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(151\)\(1:lmem\(151\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(154\)\(1:lmem\(154\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(155\)\(1:lmem\(155\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(158\)\(1:lmem\(158\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(155\)\(1:lmem\(155\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(159\)\(1:lmem\(159\)\),) S
0.737 0.561 0.561 FG
('MVS') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(159\)\(1:lmem\(159\)\),) S
0.737 0.561 0.561 FG
('BS') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(159\)\(1:lmem\(159\)\),) S
0.737 0.561 0.561 FG
('BS2') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(4\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(159\)\(1:lmem\(159\)\),) S
0.737 0.561 0.561 FG
('RADAU') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(10\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(159\)\(1:lmem\(159\)\),) S
0.737 0.561 0.561 FG
('HYBRID') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(159\)\(1:lmem\(159\)\),) S
0.737 0.561 0.561 FG
('CLOSE') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(12\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(159\)\(1:lmem\(159\)\),) S
0.737 0.561 0.561 FG
('WIDE') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(159\)\(1:lmem\(159\)\),) S
0.737 0.561 0.561 FG
('0') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(160\)\(1:lmem\(160\)\),tstart) S
EndPage
EndDSCPage
EndSheet

%%Page: 75 75
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5329 def
/PageNumber 75 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5328 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(161\)\(1:lmem\(161\)\),tstop) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(162\)\(1:lmem\(162\)\),dtout) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(163\)\(1:lmem\(163\)\),h0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(164\)\(1:lmem\(164\)\),tol) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Integration options) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(155\)\(1:lmem\(155\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(165\)\(1:lmem\(165\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(155\)\(1:lmem\(155\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(166\)\(1:lmem\(166\)\),mem\(5\)\(1:lmem\(5\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(166\)\(1:lmem\(166\)\),mem\(6\)\(1:lmem\(6\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(167\)\(1:lmem\(167\)\),mem\(5\)\(1:lmem\(5\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(168\)\(1:lmem\(168\)\),mem\(5\)\(1:lmem\(5\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(167\)\(1:lmem\(167\)\),mem\(6\)\(1:lmem\(6\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(168\)\(1:lmem\(168\)\),mem\(6\)\(1:lmem\(6\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(167\)\(1:lmem\(167\)\),mem\(6\)\(1:lmem\(6\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(168\)\(1:lmem\(168\)\),mem\(5\)\(1:lmem\(5\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(169\)\(1:lmem\(169\)\),mem\(1\)\(1:lmem\(1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(169\)\(1:lmem\(169\)\),mem\(2\)\(1:lmem\(2\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(170\)\(1:lmem\(170\)\),mem\(6\)\(1:lmem\(6\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(170\)\(1:lmem\(170\)\),mem\(5\)\(1:lmem\(5\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(4\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(171\)\(1:lmem\(171\)\),mem\(7\)\(1:lmem\(7\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(4\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(171\)\(1:lmem\(171\)\),mem\(9\)\(1:lmem\(9\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(171\)\(1:lmem\(171\)\),mem\(8\)\(1:lmem\(8\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(172\)\(1:lmem\(172\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(7\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(173\)\(1:lmem\(173\)\),mem\(6\)\(1:lmem\(6\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(173\)\(1:lmem\(173\)\),mem\(5\)\(1:lmem\(5\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(174\)\(1:lmem\(174\)\),mem\(6\)\(1:lmem\(6\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(174\)\(1:lmem\(174\)\),mem\(5\)\(1:lmem\(5\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Infrequently-changed parameters) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(155\)\(1:lmem\(155\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(175\)\(1:lmem\(175\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(155\)\(1:lmem\(155\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(176\)\(1:lmem\(176\)\),rmax) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(177\)\(1:lmem\(177\)\),rcen) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(178\)\(1:lmem\(178\)\),m\(1\) * k_2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(179\)\(1:lmem\(179\)\),jcen\(1\) * rcen_2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(180\)\(1:lmem\(180\)\),jcen\(2\) * rcen_4) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(181\)\(1:lmem\(181\)\),jcen\(3\) * rcen_6) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(182\)\(1:lmem\(182\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(183\)\(1:lmem\(183\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(184\)\(1:lmem\(184\)\),cefac) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(185\)\(1:lmem\(185\)\),ndump) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(33,*\) mem\(186\)\(1:lmem\(186\)\),nfun) S
LHL
(        ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(33\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Create new version of the restart file) S
LHL
0.373 0.620 0.627 FG
(  60) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(idp) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(35, file=) S
0.737 0.561 0.561 FG
('restart.tmp') S
0.000 0.000 0.000 FG
(, status=) S
0.737 0.561 0.561 FG
('unknown') S
0.000 0.000 0.000 FG
(,) S
EndPage
EndDSCPage
EndSheet

%%Page: 76 76
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5401 def
/PageNumber 76 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5400 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    err=60\)) S
LHL
0.373 0.620 0.627 FG
(  65) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(idp) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(35, file=dumpfile\(4\), status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(65) S
0.000 0.000 0.000 FG
(\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(35,) S
0.737 0.561 0.561 FG
('\(1x,i2\)') S
0.000 0.000 0.000 FG
(\) opflag) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(35,*\) en\(1\) * k_2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(35,*\) am\(1\) * k_2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(35,*\) en\(3\) * k_2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(35,*\) am\(3\) * k_2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(35,*\) s\(1,1\) * k_2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(35,*\) s\(2,1\) * k_2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(35,*\) s\(3,1\) * k_2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(35\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.373 0.620 0.627 FG
( 311) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(format) S
0.000 0.000 0.000 FG
( \(1x,a8,1x,a1,1p,e22.15,2\(1x,e11.5\)\)) S
LHL
0.373 0.620 0.627 FG
( 312) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(format) S
0.000 0.000 0.000 FG
( \(1p,3\(1x,e22.15\),1x,i8\)) S
LHL
0.373 0.620 0.627 FG
( 313) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(format) S
0.000 0.000 0.000 FG
( \(1p,1x,e22.15,0p,2x,a\)) S
LHL
0.373 0.620 0.627 FG
( 314) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(format) S
0.000 0.000 0.000 FG
( \(1x,a8,1x,a1,1p,e22.15,4\(1x,e12.5\),1x,e22.15,2\(1x,e11.5\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_ERR.FOR    \(ErikSoft  6 December 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Writes out an error message and terminates Mercury.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(unit,s1,ls1,s2,ls2,s3,ls3,s4,ls4\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(unit) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ls1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ls2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ls3) S
0.000 0.000 0.000 FG
(,ls4) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(s1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s3) S
0.000 0.000 0.000 FG
(,s4) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.737 0.561 0.561 FG
(' ERROR: Programme terminated. See information') S
0.000 0.000 0.000 FG
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ,) S
0.737 0.561 0.561 FG
(' file for details.') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(unit,) S
0.737 0.561 0.561 FG
('\(/,3a,/,2a\)') S
0.000 0.000 0.000 FG
(\) s1\(1:ls1\),s2\(1:ls2\),s3\(1:ls3\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,s4\(1:ls4\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(stop) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_FL2C.FOR    \(ErikSoft  1 July 1998\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts a \(floating point\) REAL*8 variable X, into a CHARACTER*8 ASCII ) S
LHL
(c) S
( ) S
(string, using the new format compression:) S
LHL
(c) S
LHL
(c) S
( ) S
(X is first converted to base 224, and then each base 224 digit is converted ) S
LHL
(c) S
( ) S
(to an ASCII character, such that 0 -> character 32, 1 -> character 33...) S
LHL
(c) S
( ) S
(and 223 -> character 255.) S
LHL
(c) S
( ) S
(The first 7 characters in the string are used to store the mantissa, and the) S
LHL
(c) S
( ) S
(eighth character is used for the exponent.) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 77 77
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5473 def
/PageNumber 77 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5472 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(ASCII characters 0 - 31 \(CTRL characters\) are not used, because they) S
LHL
(c) S
( ) S
(cause problems when using some operating systems.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. X must lie in the range -1.e112 < X < 1.e112) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_fl2c) S
0.000 0.000 0.000 FG
( \(x\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 x) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 mio_fl2c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ex) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(ax) S
0.000 0.000 0.000 FG
(,y) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 mio_re2c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(x) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        y = .5d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ax = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(x\)) S
LHL
(        ex = ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(log10) S
0.000 0.000 0.000 FG
(\(ax\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ax) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(1\) ex = ex + 1) S
LHL
(        y = ax*\(10.d0**\(-ex\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(y) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          y = y * .1d0) S
LHL
(          ex = ex + 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        y = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\(y,x\) *.5d0 + .5d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      mio_fl2c\(1:8\) = mio_re2c \(y, 0.d0, 1.d0\)) S
LHL
(      ex = ex + 112) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ex) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(223\) ex = 223) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ex) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) ex = 0) S
LHL
(      mio_fl2c\(8:8\) = ) S
0.855 0.439 0.839 FG
(char) S
0.000 0.000 0.000 FG
(\(ex+32\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_IN.FOR    \(ErikSoft   4 May 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Reads names, masses, coordinates and velocities of all the bodies,) S
LHL
(c) S
( ) S
(and integration parameters for the MERCURY integrator package. ) S
LHL
(c) S
( ) S
(If DUMPFILE\(4\) exists, the routine assumes this is a continuation of) S
LHL
(c) S
( ) S
(an old integration, and reads all the data from the dump files instead) S
LHL
(c) S
( ) S
(of the input files.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates are with respect to the central body!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_in) S
0.000 0.000 0.000 FG
( \(time,tstart,tstop,dtout,algor,h0,tol,rmax,rcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  jcen,en,am,cefac,ndump,nfun,nbod,nbig,m,x,v,s,rho,rceh,stat,id,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  epoch,ngf,opt,opflag,ngflag,outfile,dumpfile,lmem,mem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 78 78
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5545 def
/PageNumber 78 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5544 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(algor) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),) S
0.722 0.525 0.043 FG
(opflag) S
0.000 0.000 0.000 FG
(,ngflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(lmem) S
0.000 0.000 0.000 FG
(\(NMESS\),) S
0.722 0.525 0.043 FG
(ndump) S
0.000 0.000 0.000 FG
(,nfun) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstop) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dtout) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,jcen\(3\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(en) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(am) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,NMAX\),s\(3,NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rho) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(rceh) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(epoch) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(ngf) S
0.000 0.000 0.000 FG
(\(4,NMAX\),cefac) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(dumpfile) S
0.000 0.000 0.000 FG
(\(4\), mem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(itmp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jtmp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(informat) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(lim) S
0.000 0.000 0.000 FG
(\(2,10\),) S
0.722 0.525 0.043 FG
(nsub) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(year) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(month) S
0.000 0.000 0.000 FG
(,lineno) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(n) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rhocgs) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(t1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp5) S
0.000 0.000 0.000 FG
(,tmp6) S
LHL
0.698 0.133 0.133 FG
(c) S
(      ) S
(real*8 v0\(3,NMAX\),x0\(3,NMAX\)) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(logical) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(test) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(oldflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(flag1) S
0.000 0.000 0.000 FG
(,flag2) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*1 c1) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*3 ) S
0.722 0.525 0.043 FG
(c3) S
0.000 0.000 0.000 FG
(,alg\(60\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(infile) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(filename) S
0.000 0.000 0.000 FG
(,c80) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*150 string) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(data) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(alg) S
0.000 0.000 0.000 FG
(/) S
0.737 0.561 0.561 FG
('MVS') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Mvs') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('mvs') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('mvs') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('mvs') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('BS ') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Bs ') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('bs ') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Bul') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   ) S
0.737 0.561 0.561 FG
('bul') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('BS2') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Bs2') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('bs2') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Bu2') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('bu2') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('RAD') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Rad') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('rad') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('RA ') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   ) S
0.737 0.561 0.561 FG
('ra ') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   ) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   ) S
0.737 0.561 0.561 FG
('xxx') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('TES') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Tes') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('tes') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Tst') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('tst') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('HYB') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Hyb') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('hyb') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('HY ') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   ) S
0.737 0.561 0.561 FG
('hy ') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('CLO') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Clo') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('clo') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('CB ') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('cb ') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('WID') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('Wid') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('wid') S
0.000 0.000 0.000 FG
(,) S
0.737 0.561 0.561 FG
('WB ') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   ) S
0.737 0.561 0.561 FG
('wb ') S
0.000 0.000 0.000 FG
(/) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      rhocgs = AU * AU * AU * K2 / MSUN) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 80) S
LHL
(        filename\(j:j\) = ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 3) S
LHL
(        infile\(j\)   = filename) S
LHL
(        outfile\(j\)  = filename) S
LHL
(        dumpfile\(j\) = filename) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      dumpfile\(4\) = filename) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read in output messages) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=) S
0.737 0.561 0.561 FG
('message.in') S
0.000 0.000 0.000 FG
(, exist=test\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.627 0.125 0.941 FG
(.not.) S
0.000 0.000 0.000 FG
(test\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.737 0.561 0.561 FG
(' ERROR: This file is needed to start') S
0.000 0.000 0.000 FG
(,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ) S
0.737 0.561 0.561 FG
(' the integration:  message.in') S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(stop) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(16, file=) S
0.737 0.561 0.561 FG
('message.in') S
0.000 0.000 0.000 FG
(, status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(\)) S
LHL
0.373 0.620 0.627 FG
(  10) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(16,) S
0.737 0.561 0.561 FG
('\(i3,1x,i2,1x,a80\)') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(20) S
0.000 0.000 0.000 FG
(\) j,lmem\(j\),mem\(j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
(  20) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(16\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read in filenames and check for duplicate filenames) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=) S
0.737 0.561 0.561 FG
('files.in') S
0.000 0.000 0.000 FG
(, exist=test\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.627 0.125 0.941 FG
(.not.) S
0.000 0.000 0.000 FG
(test\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),lmem\(81\),mem\(88\),lmem\(88\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,) S
0.737 0.561 0.561 FG
('files.in') S
0.000 0.000 0.000 FG
(,8\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(15, file=) S
0.737 0.561 0.561 FG
('files.in') S
0.000 0.000 0.000 FG
(, status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input files) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 3) S
LHL
(        ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(15,) S
0.737 0.561 0.561 FG
('\(a150\)') S
0.000 0.000 0.000 FG
(\) string) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(150,string,nsub,lim\)) S
LHL
(        infile\(j\)\(1:\(lim\(2,1\)-lim\(1,1\)+1\)\) = string\(lim\(1,1\):lim\(2,1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, j - 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(infile\(j\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(infile\(k\)\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),lmem\(81\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(89\),lmem\(89\),infile\(j\),80,mem\(86\),lmem\(86\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Output files) S
EndPage
EndDSCPage
EndSheet

%%Page: 79 79
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5617 def
/PageNumber 79 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5616 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 3) S
LHL
(        ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(15,) S
0.737 0.561 0.561 FG
('\(a150\)') S
0.000 0.000 0.000 FG
(\) string) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(150,string,nsub,lim\)) S
LHL
(        outfile\(j\)\(1:\(lim\(2,1\)-lim\(1,1\)+1\)\) = string\(lim\(1,1\):lim\(2,1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, j - 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(outfile\(j\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(outfile\(k\)\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      lmem\(81\),mem\(89\),lmem\(89\),outfile\(j\),80,mem\(86\),lmem\(86\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 3) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(outfile\(j\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(infile\(k\)\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),lmem\(81\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(89\),lmem\(89\),outfile\(j\),80,mem\(86\),lmem\(86\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Dump files) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 4) S
LHL
(        ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(15,) S
0.737 0.561 0.561 FG
('\(a150\)') S
0.000 0.000 0.000 FG
(\) string) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(150,string,nsub,lim\)) S
LHL
(        dumpfile\(j\)\(1:\(lim\(2,1\)-lim\(1,1\)+1\)\) = string\(lim\(1,1\):lim\(2,1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, j - 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(dumpfile\(j\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(dumpfile\(k\)\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      lmem\(81\),mem\(89\),lmem\(89\),dumpfile\(j\),80,mem\(86\),lmem\(86\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 3) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(dumpfile\(j\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(infile\(k\)\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      lmem\(81\),mem\(89\),lmem\(89\),dumpfile\(j\),80,mem\(86\),lmem\(86\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 3) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(dumpfile\(j\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(outfile\(k\)\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      lmem\(81\),mem\(89\),lmem\(89\),dumpfile\(j\),80,mem\(86\),lmem\(86\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(15\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Find out if this is an old integration \(i.e. does the restart file exist\)) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=dumpfile\(4\), exist=oldflag\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check if information file exists, and append a continuation message) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(oldflag\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=outfile\(3\), exist=test\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.627 0.125 0.941 FG
(.not.) S
0.000 0.000 0.000 FG
(test\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),lmem\(81\),mem\(88\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    lmem\(88\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,outfile\(3\),80\)) S
LHL
0.373 0.620 0.627 FG
( 320) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
(\(23,file=outfile\(3\),status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(,access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(320) S
0.000 0.000 0.000 FG
(\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If new integration, check information file doesn't exist, and then create it) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=outfile\(3\), exist=test\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(test\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(6,mem\(81\),lmem\(81\),mem\(87\),lmem\(87\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,outfile\(3\),80\)) S
LHL
0.373 0.620 0.627 FG
( 410) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
(\(23, file = outfile\(3\), status = ) S
0.737 0.561 0.561 FG
('new') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(410) S
0.000 0.000 0.000 FG
(\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(READ  IN  INTEGRATION  PARAMETERS) S
LHL
(c) S
LHL
(c) S
( ) S
(Check if the file containing integration parameters exists, and open it) S
LHL
0.000 0.000 0.000 FG
(      filename = infile\(3\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(oldflag\) filename = dumpfile\(3\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=filename, exist=test\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.627 0.125 0.941 FG
(.not.) S
0.000 0.000 0.000 FG
(test\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(88\),lmem\(88\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,filename,80\)) S
LHL
0.373 0.620 0.627 FG
(  30) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
(  \(13, file=filename, status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(30) S
0.000 0.000 0.000 FG
(\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read integration parameters) S
LHL
0.000 0.000 0.000 FG
(      lineno = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 26) S
LHL
0.373 0.620 0.627 FG
(  40) S
0.000 0.000 0.000 FG
(    lineno = lineno + 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(13,) S
0.737 0.561 0.561 FG
('\(a150\)') S
0.000 0.000 0.000 FG
(\) string) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(string\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('\)') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(40) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(150,string,nsub,lim\)) S
LHL
(        c80\(1:3\) = ) S
0.737 0.561 0.561 FG
('   ') S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 80 80
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5689 def
/PageNumber 80 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5688 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        c80 = string\(lim\(1,nsub\):lim\(2,nsub\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          algor = 0) S
LHL
(           ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 60) S
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c80\(1:3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(alg\(k\)\) algor = \(k + 4\) / 5) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(98\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      lmem\(98\),c80\(lim\(1,nsub\):lim\(2,nsub\)\),lim\(2,nsub\)-) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      lim\(1,nsub\)+1,mem\(85\),lmem\(85\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) tstart) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) tstop) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(4\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) dtout) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(5\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) h0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(6\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) tol) S
LHL
(        c1 = c80\(1:1\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(7) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('y') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('Y') S
0.000 0.000 0.000 FG
(\)\) opt\(1\) = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(8) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('n') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('N') S
0.000 0.000 0.000 FG
(\)\) opt\(2\) = 0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(9) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('y') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('Y') S
0.000 0.000 0.000 FG
(\)\) opt\(2\) = 2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(10) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('d') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('D') S
0.000 0.000 0.000 FG
(\)\) opt\(3\) = 0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('y') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('Y') S
0.000 0.000 0.000 FG
(\)\) opt\(3\) = opt\(3\) + 2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(12\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('l') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('L') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            opt\(4\) = 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(12) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('m') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('M') S
0.000 0.000 0.000 FG
(\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            opt\(4\) = 2) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(12) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('h') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('H') S
0.000 0.000 0.000 FG
(\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            opt\(4\) = 3) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(15) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('y') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c1) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('Y') S
0.000 0.000 0.000 FG
(\)\) opt\(8\) = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(16\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) rmax) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(17\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) rcen) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(18\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) m\(1\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(19\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) jcen\(1\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(20\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) jcen\(2\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(21\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) jcen\(3\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(24\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) cefac) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(25\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) ndump) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(26\) ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(c80,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(661) S
0.000 0.000 0.000 FG
(\) nfun) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      h0 = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(h0\)) S
LHL
(      tol = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(tol\)) S
LHL
(      rmax = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(rmax\)) S
LHL
(      rcen = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(rcen\)) S
LHL
(      cefac = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(cefac\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(13\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Change quantities for central object to suitable units) S
LHL
0.000 0.000 0.000 FG
(      m\(1\) = ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(m\(1\)\) * K2) S
LHL
(      jcen\(1\) = jcen\(1\) * rcen * rcen) S
LHL
(      jcen\(2\) = jcen\(2\) * rcen * rcen * rcen * rcen) S
LHL
(      jcen\(3\) = jcen\(3\) * rcen * rcen * rcen * rcen * rcen * rcen) S
LHL
(      s\(1,1\) = 0.d0) S
LHL
(      s\(2,1\) = 0.d0) S
LHL
(      s\(3,1\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Make sure that RCEN isn't too small, since it is used to scale the output) S
LHL
(c) S
( ) S
(\(Minimum value corresponds to a central body with density 100g/cm^3\).) S
LHL
0.000 0.000 0.000 FG
(      temp = 1.1235d-3 * m\(1\) ** .333333333333333d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(rcen) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(temp\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        rcen = temp) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(13,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) mem\(121\)\(1:lmem\(121\)\),mem\(131\)\(1:lmem\(131\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(READ  IN  DATA  FOR  BIG  AND  SMALL  BODIES) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      nbod = 1) S
EndPage
EndDSCPage
EndSheet

%%Page: 81 81
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5761 def
/PageNumber 81 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5760 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) nbig = nbod) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check if the file containing data for Big bodies exists, and open it) S
LHL
0.000 0.000 0.000 FG
(        filename = infile\(j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(oldflag\) filename = dumpfile\(j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=filename, exist=test\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.627 0.125 0.941 FG
(.not.) S
0.000 0.000 0.000 FG
(test\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(88\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    lmem\(88\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,filename,80\)) S
LHL
0.373 0.620 0.627 FG
( 110) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(11, file=filename, status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(110) S
0.000 0.000 0.000 FG
(\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read data style) S
LHL
0.373 0.620 0.627 FG
( 120) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(11,) S
0.737 0.561 0.561 FG
('\(a150\)') S
0.000 0.000 0.000 FG
(\) string) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(string\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('\)') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(120) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(150,string,nsub,lim\)) S
LHL
(        c3 = string\(lim\(1,nsub\):\(lim\(1,nsub\)+2\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c3) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('Car') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c3) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('car') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c3) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('CAR') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          informat = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c3) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('Ast') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c3) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('ast') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c3) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('AST') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          informat = 2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c3) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('Com') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c3) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('com') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c3) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('COM') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          informat = 3) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(91\),lmem\(91\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(82+j\),lmem\(82+j\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read epoch of Big bodies) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
( ) S
LHL
0.373 0.620 0.627 FG
( 125) S
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(11,) S
0.737 0.561 0.561 FG
('\(a150\)') S
0.000 0.000 0.000 FG
(\) string) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(string\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('\)') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(125) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(150,string,nsub,lim\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(string\(lim\(1,nsub\):lim\(2,nsub\)\),*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(667) S
0.000 0.000 0.000 FG
(\) time) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read information for each object) S
LHL
0.373 0.620 0.627 FG
( 130) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(11,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(140) S
0.000 0.000 0.000 FG
(\) string) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(string\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('\)') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(130) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(150,string,nsub,lim\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(lim\(1,1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-1\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(140) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Determine the name of the object) S
LHL
0.000 0.000 0.000 FG
(        nbod = nbod + 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nbod) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(NMAX\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(90\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    lmem\(90\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,mem\(82\),lmem\(82\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(lim\(2,1\)-lim\(1,1\)\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(7\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,3a\)') S
0.000 0.000 0.000 FG
(\) mem\(121\)\(1:lmem\(121\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(122\)\(1:lmem\(122\)\),string\( lim\(1,1\):lim\(2,1\) \)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        id\(nbod\) = string\( lim\(1,1\):) S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
(\(7+lim\(1,1\),lim\(2,1\)\) \)) S
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Check if another object has the same name) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nbod - 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(id\(k\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(id\(nbod\)\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(103\),lmem\(103\),id\(nbod\),8,) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Default values of mass, close-encounter limit, density etc.) S
LHL
0.000 0.000 0.000 FG
(        m\(nbod\) = 0.d0) S
LHL
(        rceh\(nbod\) = 1.d0) S
LHL
(        rho\(nbod\) = rhocgs) S
LHL
(        epoch\(nbod\) = time) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 4) S
LHL
(          ngf\(k,nbod\) = 0.d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read values of mass, close-encounter limit, density etc.) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 3, nsub, 2) S
LHL
(          c80 = string\(lim\(1,k-1\):lim\(2,k-1\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(string\(lim\(1,k\):lim\(2,k\)\),*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(666) S
0.000 0.000 0.000 FG
(\) temp) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c80\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('m') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c80\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('M') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            m\(nbod\) = temp * K2) S
EndPage
EndDSCPage
EndSheet

%%Page: 82 82
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5833 def
/PageNumber 82 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5832 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c80\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('r') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c80\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('R') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            rceh\(nbod\) = temp) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c80\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('d') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c80\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('D') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            rho\(nbod\) = temp * rhocgs) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(m\(nbod\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(rceh\(nbod\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(rho\(nbod\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(97\),lmem\(97\),id\(nbod\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        8,mem\(82+j\),lmem\(82+j\)\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c80\(1:2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('ep') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c80\(1:2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('EP') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c80\(1:2\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('Ep') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            epoch \(nbod\) = temp) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c80\(1:2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('a1') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c80\(1:2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('A1') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ngf \(1,nbod\) = temp) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c80\(1:2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('a2') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c80\(1:2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('A2') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ngf \(2,nbod\) = temp) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c80\(1:2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('a3') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c80\(1:2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('A3') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ngf \(3,nbod\) = temp) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c80\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('b') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c80\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('B') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ngf \(4,nbod\) = temp) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(666) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If required, read Cartesian coordinates, velocities and spins of the bodies) S
LHL
0.000 0.000 0.000 FG
(        jtmp = 100) S
LHL
0.373 0.620 0.627 FG
( 135) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(11,) S
0.737 0.561 0.561 FG
('\(a150\)') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(666) S
0.000 0.000 0.000 FG
(\) string) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(string\(1:1\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('\)') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(135) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(backspace) S
0.000 0.000 0.000 FG
( 11) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(informat) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(11,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(666) S
0.000 0.000 0.000 FG
(\) x\(1,nbod\),x\(2,nbod\),x\(3,nbod\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      v\(1,nbod\),v\(2,nbod\),v\(3,nbod\),s\(1,nbod\),s\(2,nbod\),s\(3,nbod\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(11,*,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(666) S
0.000 0.000 0.000 FG
(\) a,e,i,p,n,l,s\(1,nbod\),s\(2,nbod\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      s\(3,nbod\)) S
LHL
(          i = i * DR) S
LHL
(          p = \(p + n\) * DR) S
LHL
(          n = n * DR) S
LHL
(          temp = m\(nbod\)  +  m\(1\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Alternatively, read Cometary or asteroidal elements) S
LHL
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(informat) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            q = a) S
LHL
(            a = q / \(1.d0 - e\)) S
LHL
(            l = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(temp/\() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(a*a*a\)\)\) * \(epoch\(nbod\) - l\), TWOPI\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            q = a * \(1.d0 - e\)) S
LHL
(            l = l * DR) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(nbod) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(2\) temp = temp + m\(2\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_el2x) S
0.000 0.000 0.000 FG
( \(temp,q,e,i,p,n,l,x\(1,nbod\),x\(2,nbod\),x\(3,nbod\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      v\(1,nbod\),v\(2,nbod\),v\(3,nbod\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        s\(1,nbod\) = s\(1,nbod\) * K2) S
LHL
(        s\(2,nbod\) = s\(2,nbod\) * K2) S
LHL
(        s\(3,nbod\) = s\(3,nbod\) * K2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(130) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
( 140) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(11\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Set non-gravitational-forces flag, NGFLAG) S
LHL
0.000 0.000 0.000 FG
(      ngflag = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngf\(1,j\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngf\(2,j\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(ngf\(3,j\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ngflag = 1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ngflag = 3) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngf\(4,j\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ngflag = 2) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ngflag = 3) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 83 83
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5905 def
/PageNumber 83 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5904 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(IF  CONTINUING  AN  OLD  INTEGRATION) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(oldflag\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_jd2y) S
0.000 0.000 0.000 FG
( \(time,year,month,t1\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a,i10,i2,f8.5,/\)') S
0.000 0.000 0.000 FG
(\) mem\(62\)\(1:lmem\(62\)\),year,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      month,t1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          t1 = \(time - tstart\) / 365.25d0) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a,f18.7,a,/\)') S
0.000 0.000 0.000 FG
(\) mem\(62\)\(1:lmem\(62\)\),t1,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(2\)\(1:lmem\(2\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) t1 = time) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) t1 = time - tstart) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a,f18.5,a,/\)') S
0.000 0.000 0.000 FG
(\) mem\(62\)\(1:lmem\(62\)\),t1,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      mem\(1\)\(1:lmem\(1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Read in energy and angular momentum variables, and convert to internal units) S
LHL
0.373 0.620 0.627 FG
( 330) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(35, file=dumpfile\(4\), status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(330) S
0.000 0.000 0.000 FG
(\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(35,*\) opflag) S
LHL
(          ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(35,*\) en\(1\),am\(1\),en\(3\),am\(3\)) S
LHL
(          en\(1\) = en\(1\) * K2) S
LHL
(          en\(3\) = en\(3\) * K2) S
LHL
(          am\(1\) = am\(1\) * K2) S
LHL
(          am\(3\) = am\(3\) * K2) S
LHL
(          ) S
0.627 0.125 0.941 FG
(read) S
0.000 0.000 0.000 FG
( \(35,*\) s\(1,1\),s\(2,1\),s\(3,1\)) S
LHL
(          s\(1,1\) = s\(1,1\) * K2) S
LHL
(          s\(2,1\) = s\(2,1\) * K2) S
LHL
(          s\(3,1\) = s\(3,1\) * K2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(35\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) opflag = 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(IF  STARTING  A  NEW  INTEGRATION) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        opflag = -2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write integration parameters to information file) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a\)') S
0.000 0.000 0.000 FG
(\) mem\(11\)\(1:lmem\(11\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) mem\(12\)\(1:lmem\(12\)\)) S
LHL
(        j = algor + 13) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) mem\(13\)\(1:lmem\(13\)\),mem\(j\)\(1:lmem\(j\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(tstart) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(1.d11) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(tstart) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(-1.d10\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a,1p,e19.13,a\)') S
0.000 0.000 0.000 FG
(\) mem\(26\)\(1:lmem\(26\)\),tstart,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(1\)\(1:lmem\(1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a,f19.7,a\)') S
0.000 0.000 0.000 FG
(\) mem\(26\)\(1:lmem\(26\)\),tstart,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(1\)\(1:lmem\(1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(tstop) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(1.d11) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(tstop) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(-1.d10\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,1p,e19.13\)') S
0.000 0.000 0.000 FG
(\) mem\(27\)\(1:lmem\(27\)\),tstop) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,f19.7\)') S
0.000 0.000 0.000 FG
(\) mem\(27\)\(1:lmem\(27\)\),tstop) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,f15.3\)') S
0.000 0.000 0.000 FG
(\) mem\(28\)\(1:lmem\(28\)\),dtout) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(4\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(40\)\(1:lmem\(40\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(7\)\(1:lmem\(7\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(4\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(40\)\(1:lmem\(40\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(8\)\(1:lmem\(8\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(4\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(40\)\(1:lmem\(40\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(9\)\(1:lmem\(9\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a,f10.3,a\)') S
0.000 0.000 0.000 FG
(\) mem\(30\)\(1:lmem\(30\)\),h0,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(1\)\(1:lmem\(1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,1p1e10.4\)') S
0.000 0.000 0.000 FG
(\) mem\(31\)\(1:lmem\(31\)\),tol) S
EndPage
EndDSCPage
EndSheet

%%Page: 84 84
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 5977 def
/PageNumber 84 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
5976 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,1p1e10.4,a\)') S
0.000 0.000 0.000 FG
(\) mem\(32\)\(1:lmem\(32\)\),m\(1\)/K2,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(3\)\(1:lmem\(3\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,1p1e11.4\)') S
0.000 0.000 0.000 FG
(\) mem\(33\)\(1:lmem\(33\)\),jcen\(1\)/rcen**2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,1p1e11.4\)') S
0.000 0.000 0.000 FG
(\) mem\(34\)\(1:lmem\(34\)\),jcen\(2\)/rcen**4) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,1p1e11.4\)') S
0.000 0.000 0.000 FG
(\) mem\(35\)\(1:lmem\(35\)\),jcen\(3\)/rcen**6) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,1p1e10.4,a\)') S
0.000 0.000 0.000 FG
(\) mem\(36\)\(1:lmem\(36\)\),rmax,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem \(4\)\(1:lmem\(4\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,1p1e10.4,a\)') S
0.000 0.000 0.000 FG
(\) mem\(37\)\(1:lmem\(37\)\),rcen,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem \(4\)\(1:lmem\(4\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        itmp = 5) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(opt\(2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) itmp = 6) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) mem\(41\)\(1:lmem\(41\)\),mem\(itmp\)\(1:lmem\(itmp\)\)) S
LHL
(        itmp = 5) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(2\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) itmp = 6) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(42\)\(1:lmem\(42\)\),mem\(itmp\)\(1:lmem\(itmp\)\)) S
LHL
(        itmp = 5) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(7\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) itmp = 6) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(45\)\(1:lmem\(45\)\),mem\(itmp\)\(1:lmem\(itmp\)\)) S
LHL
(        itmp = 5) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) itmp = 6) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(46\)\(1:lmem\(46\)\),mem\(itmp\)\(1:lmem\(itmp\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check that element and close-encounter files don't exist, and create them) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 2) S
LHL
(          ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=outfile\(j\), exist=test\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(test\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(87\),lmem\(87\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,outfile\(j\),80\)) S
LHL
0.373 0.620 0.627 FG
( 430) S
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
(  \(20+j, file=outfile\(j\), status=) S
0.737 0.561 0.561 FG
('new') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(430) S
0.000 0.000 0.000 FG
(\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(20+j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check that dump files don't exist, and then create them) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 4) S
LHL
(          ) S
0.627 0.125 0.941 FG
(inquire) S
0.000 0.000 0.000 FG
( \(file=dumpfile\(j\), exist=test\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(test\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(87\),lmem\(87\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,dumpfile\(j\),80\)) S
LHL
0.373 0.620 0.627 FG
( 450) S
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
(  \(30+j, file=dumpfile\(j\), status=) S
0.737 0.561 0.561 FG
('new') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(450) S
0.000 0.000 0.000 FG
(\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(30+j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write number of Big bodies and Small bodies to information file) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a,i4\)') S
0.000 0.000 0.000 FG
(\) mem\(38\)\(1:lmem\(38\)\), nbig - 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,i4\)') S
0.000 0.000 0.000 FG
(\) mem\(39\)\(1:lmem\(39\)\), nbod - nbig) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate initial energy and angular momentum and write to information file) S
LHL
0.000 0.000 0.000 FG
(        s\(1,1\) = 0.d0) S
LHL
(        s\(2,1\) = 0.d0) S
LHL
(        s\(3,1\) = 0.d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_en) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,v,s,en\(1\),am\(1\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(//,a\)') S
0.000 0.000 0.000 FG
(\) mem\(51\)\(1:lmem\(51\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\)    mem\(52\)\(1:lmem\(52\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,a,1p1e12.5,a\)') S
0.000 0.000 0.000 FG
(\) mem\(53\)\(1:lmem\(53\)\),en\(1\)/K2,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(72\)\(1:lmem\(72\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(a,1p1e12.5,a\)') S
0.000 0.000 0.000 FG
(\)   mem\(54\)\(1:lmem\(54\)\),am\(1\)/K2,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(73\)\(1:lmem\(73\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Initialize lost energy and angular momentum) S
LHL
0.000 0.000 0.000 FG
(        en\(3\) = 0.d0) S
LHL
(        am\(3\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write warning messages if necessary) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(tstop) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(tstart\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) mem\(121\)\(1:lmem\(121\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(123\)\(1:lmem\(123\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nbig) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) mem\(121\)\(1:lmem\(121\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(124\)\(1:lmem\(124\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nbig) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(nbod\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,2a\)') S
0.000 0.000 0.000 FG
(\) mem\(121\)\(1:lmem\(121\)\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(125\)\(1:lmem\(125\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 85 85
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6049 def
/PageNumber 85 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6048 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(  ) S
(CHECK  FOR  ATTEMPTS  TO  DO  INCOMPATIBLE  THINGS) S
LHL
(c) S
LHL
(c) S
( ) S
(If using close-binary algorithm, set radius of central body to be no less) S
LHL
(c) S
( ) S
(than the periastron of binary star.) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        temp = m\(1\) + m\(2\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2el) S
0.000 0.000 0.000 FG
( \(temp,x\(1,2\),x\(2,2\),x\(3,2\),v\(1,2\),v\(2,2\),v\(3,2\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    a,tmp2,tmp3,tmp4,tmp5,tmp6\)) S
LHL
(        rcen = ) S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
( \(rcen, a\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check if non-grav forces are being used with an incompatible algorithm) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ngflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(12\)\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(92\),lmem\(92\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  mem\(85\),lmem\(85\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check if user-defined force routine is being used with wrong algorithm) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(8\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(12\)\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  \(23,mem\(81\),lmem\(81\),mem\(93\),lmem\(93\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,mem\(85\),lmem\(85\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check whether MVS is being used to integrate massive Small bodies,) S
LHL
(c) S
( ) S
(or whether massive Small bodies have different epochs than Big bodies.) S
LHL
0.000 0.000 0.000 FG
(      flag1 = ) S
0.627 0.125 0.941 FG
(.false.) S
0.000 0.000 0.000 FG
LHL
(      flag2 = ) S
0.627 0.125 0.941 FG
(.false.) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(m\(j\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(94\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      lmem\(94\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,mem\(85\),lmem\(85\)\)) S
LHL
(          flag1 = ) S
0.627 0.125 0.941 FG
(.true.) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(epoch\(j\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(time\) flag2 = ) S
0.627 0.125 0.941 FG
(.true.) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(flag1) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(flag2\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(95\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    lmem\(95\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,mem\(84\),lmem\(84\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check if central oblateness is being used with close-binary algorithm) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(algor) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(11) S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(\(jcen\(1\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jcen\(2\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jcen\(3\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\)\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(102\),lmem\(102\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,mem\(85\),lmem\(85\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Check whether RCEN > RMAX or RMAX/RCEN is very large) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(rcen) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(rmax\) ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(105\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  lmem\(105\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,mem\(85\),lmem\(85\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(rmax/rcen) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(1.d12\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(/,2a,/a\)') S
0.000 0.000 0.000 FG
(\) ) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  mem\(121\)\(1:lmem\(121\)\),mem\(106\)\(1:lmem\(106\)\),mem\(85\)\(1:lmem\(85\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(23\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Error reading from the input file containing integration parameters) S
LHL
0.373 0.620 0.627 FG
( 661) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(c3,) S
0.737 0.561 0.561 FG
('\(i3\)') S
0.000 0.000 0.000 FG
(\) lineno) S
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(99\),lmem\(99\),c3,3,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  mem\(85\),lmem\(85\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Error reading from the input file for Big or Small bodies) S
LHL
0.373 0.620 0.627 FG
( 666) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(100\),lmem\(100\),id\(nbod\),8,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  mem\(82+j\),lmem\(82+j\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Error reading epoch of Big bodies) S
LHL
0.373 0.620 0.627 FG
( 667) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_err) S
0.000 0.000 0.000 FG
( \(23,mem\(81\),lmem\(81\),mem\(101\),lmem\(101\),) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
(,1,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  mem\(83\),lmem\(83\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_JD2Y.FOR    \(ErikSoft  7 July 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
EndPage
EndDSCPage
EndSheet

%%Page: 86 86
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6121 def
/PageNumber 86 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6120 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Converts from Julian day number to Julian/Gregorian Calendar dates, assuming) S
LHL
(c) S
( ) S
(the dates are those used by the English calendar.) S
LHL
(c) S
LHL
(c) S
( ) S
(Algorithm taken from `Practical Astronomy with your calculator' \(1988\)) S
LHL
(c) S
( ) S
(by Peter Duffett-Smith, 3rd edition, C.U.P.) S
LHL
(c) S
LHL
(c) S
( ) S
(Algorithm for negative Julian day numbers \(Julian calendar assumed\) by) S
LHL
(c) S
( ) S
(J. E. Chambers.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. The output date is with respect to the Julian Calendar on or before) S
LHL
(c) S
( ) S
(===  4th October 1582, and with respect to the Gregorian Calendar on or ) S
LHL
(c) S
(      ) S
(after 15th October 1582.) S
LHL
(c) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_jd2y) S
0.000 0.000 0.000 FG
( \(jd0,year,month,day\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(year) S
0.000 0.000 0.000 FG
(,month) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jd0) S
0.000 0.000 0.000 FG
(,day) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,g) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jd) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,z) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(jd0) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(50) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      jd = jd0 + 0.5d0) S
LHL
(      i = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(jd\)\), jd \)) S
LHL
(      f = jd - 1.d0*i) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If on or after 15th October 1582) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(2299160\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        temp = \(1.d0*i - 1867216.25d0\) / 36524.25d0) S
LHL
(        a = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
(        temp = .25d0 * a) S
LHL
(        b = i + 1 + a - ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        b = i) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      c = b + 1524) S
LHL
(      temp = \(1.d0*c - 122.1d0\) / 365.25d0) S
LHL
(      d = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
(      temp = 365.25d0 * d) S
LHL
(      e = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
(      temp = \(c-e\) / 30.6001d0) S
LHL
(      g = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      temp = 30.6001d0 * g) S
LHL
(      day = 1.d0*\(c-e\) + f - 1.d0*) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\( ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(dabs) S
0.000 0.000 0.000 FG
(\(temp\)\), temp \)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(g) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(13\) month = g - 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(g) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(13\) month = g - 13) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(month) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(2\) year = d - 4716) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(month) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(2\) year = d - 4715) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(day) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(32\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        day = day - 32) S
LHL
(        month = month + 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(month) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(12\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        month = month - 12) S
LHL
(        year = year + 1) S
EndPage
EndDSCPage
EndSheet

%%Page: 87 87
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6193 def
/PageNumber 87 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6192 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.373 0.620 0.627 FG
(  50) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Algorithm for negative Julian day numbers \(Duffett-Smith doesn't work\)) S
LHL
0.000 0.000 0.000 FG
(      x = jd0 - 2232101.5) S
LHL
(      f = x - ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\(x\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(f) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) f = f + 1.d0) S
LHL
(      y = ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(x,1461.d0\) + 1461.d0\)) S
LHL
(      z = ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(y,365.25d0\)\)) S
LHL
(      month = ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
(\(\(z + 0.5d0\) / 30.61d0\)) S
LHL
(      day = ) S
0.855 0.439 0.839 FG
(dint) S
0.000 0.000 0.000 FG
(\(z + 1.5d0 - 30.61d0*) S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(month\)\) + f) S
LHL
(      month = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(month + 2, 12\) + 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      year = 1399 + ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
( \(x / 365.25d0\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(x) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) year = year - 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(month) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(3\) year = year + 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_LOG.FOR    \(ErikSoft   25 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Writes a progress report to the log file \(or the screen if you are running) S
LHL
(c) S
( ) S
(Mercury interactively\).) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_log) S
0.000 0.000 0.000 FG
( \(time,tstart,en,am,opt,mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(lmem) S
0.000 0.000 0.000 FG
(\(NMESS\), opt\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(en) S
0.000 0.000 0.000 FG
(\(3\), am\(3\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 mem\(NMESS\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(year) S
0.000 0.000 0.000 FG
(, month) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tmp0) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(tmp1) S
0.000 0.000 0.000 FG
(, t1) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*38 flog) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*6 tstring) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        tstring = mem\(1\)) S
LHL
(        flog = ) S
0.737 0.561 0.561 FG
('\(1x,a,f14.1,a,2\(a,1p1e12.5\)\)') S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        flog = ) S
0.737 0.561 0.561 FG
('\(1x,a,i10,1x,i2,1x,f4.1,2\(a,1p1e12.5\)\)') S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        tstring = mem\(2\)) S
LHL
(        flog = ) S
0.737 0.561 0.561 FG
('\(1x,a,f14.3,a,2\(a,1p1e12.5\)\)') S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      tmp0 = 0.d0) S
LHL
(      tmp1 = 0.d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(en\(1\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) tmp0 = \(en\(2\) + en\(3\) - en\(1\)\) / ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(en\(1\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(am\(1\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) tmp1 = \(am\(2\) + am\(3\) - am\(1\)\) / ) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(am\(1\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_jd2y) S
0.000 0.000 0.000 FG
( \(time,year,month,t1\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 88 88
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6265 def
/PageNumber 88 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6264 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,flog\) mem\(64\)\(1:lmem\(64\)\), year, month, t1,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(65\)\(1:lmem\(65\)\), tmp0,mem\(66\)\(1:lmem\(66\)\), tmp1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) t1 = time) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) t1 = time - tstart) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) t1 = \(time - tstart\) / 365.25d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(*,flog\) mem\(63\)\(1:lmem\(63\)\), t1, tstring,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    mem\(65\)\(1:lmem\(65\)\), tmp0, mem\(66\)\(1:lmem\(66\)\), tmp1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_OUT.FOR    \(ErikSoft   13 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Writes output variables for each object to an output file. Each variable) S
LHL
(c) S
( ) S
(is scaled between the minimum and maximum possible values and then) S
LHL
(c) S
( ) S
(written in a compressed format using ASCII characters.) S
LHL
(c) S
( ) S
(The output variables are:) S
LHL
(c) S
(  ) S
(r = the radial distance) S
LHL
(c) S
(  ) S
(theta = polar angle) S
LHL
(c) S
(  ) S
(phi = azimuthal angle) S
LHL
(c) S
(  ) S
(fv = 1 / [1 + 2\(ke/be\)^2], where be and ke are the object's binding and) S
LHL
(c) S
(                             ) S
(kinetic energies. \(Note that 0 < fv < 1\).) S
LHL
(c) S
(  ) S
(vtheta = polar angle of velocity vector) S
LHL
(c) S
(  ) S
(vphi = azimuthal angle of the velocity vector) S
LHL
(c) S
LHL
(c) S
( ) S
(If this is the first output \(OPFLAG = -1\), or the first output since the ) S
LHL
(c) S
( ) S
(number of the objects or their masses have changed \(OPFLAG = 1\), then ) S
LHL
(c) S
( ) S
(the names, masses and spin components of all the objects are also output.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. Each object's distance must lie between RCEN < R < RMAX) S
LHL
(c) S
( ) S
(===  ) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_out) S
0.000 0.000 0.000 FG
( \(time,jcen,rcen,rmax,nbod,nbig,m,xh,vh,s,rho,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  stat,id,opt,opflag,algor,outfile\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\), ) S
0.722 0.525 0.043 FG
(opflag) S
0.000 0.000 0.000 FG
(, algor) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(rcen) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),vh\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),rho\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 outfile) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(len) S
0.000 0.000 0.000 FG
(, nchar) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rhocgs) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k_2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rfac) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rcen_2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fr) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fv) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(theta) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(phi) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vtheta) S
0.000 0.000 0.000 FG
(,vphi) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(header) S
0.000 0.000 0.000 FG
(,c\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mio_fl2c) S
0.000 0.000 0.000 FG
(,mio_re2c) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*5 fout) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      rhocgs = AU * AU * AU * K2 / MSUN) S
LHL
(      k_2 = 1.d0 / K2) S
LHL
(      rcen_2 = 1.d0 / \(rcen * rcen\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Scaling factor \(maximum possible range\) for distances) S
LHL
0.000 0.000 0.000 FG
(      rfac = ) S
0.855 0.439 0.839 FG
(log10) S
0.000 0.000 0.000 FG
( \(rmax / rcen\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 89 89
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6337 def
/PageNumber 89 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6336 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Create the format list, FOUT, used when outputting the orbital elements) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(4\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) nchar = 2) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(4\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) nchar = 4) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(4\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) nchar = 7) S
LHL
(      len = 3  +  6 * nchar) S
LHL
(      fout\(1:5\) = ) S
0.737 0.561 0.561 FG
('\(a  \)') S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(len) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(10\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(fout\(3:3\),) S
0.737 0.561 0.561 FG
('\(i1\)') S
0.000 0.000 0.000 FG
(\) len) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(len) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(10\) ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(fout\(3:4\),) S
0.737 0.561 0.561 FG
('\(i2\)') S
0.000 0.000 0.000 FG
(\) len) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Open the orbital-elements output file) S
LHL
0.373 0.620 0.627 FG
(  10) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(21, file=outfile, status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(, access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(, ) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
(\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(SPECIAL  OUTPUT  PROCEDURE) S
LHL
(c) S
LHL
(c) S
( ) S
(If this is a new integration or a complete output is required \(e.g. because) S
LHL
(c) S
( ) S
(the number of objects has changed\), then output object details & parameters.) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(-1) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(opflag) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Compose a header line with time, number of objects and relevant parameters) S
LHL
0.000 0.000 0.000 FG
(        header\(1:8\)   = mio_fl2c \(time\)) S
LHL
(        header\(9:16\)  = mio_re2c \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(nbig - 1\),   0.d0, 11239423.99d0\)) S
LHL
(        header\(12:19\) = mio_re2c \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(nbod - nbig\),0.d0, 11239423.99d0\)) S
LHL
(        header\(15:22\) = mio_fl2c \(m\(1\) * k_2\)) S
LHL
(        header\(23:30\) = mio_fl2c \(jcen\(1\) * rcen_2\)) S
LHL
(        header\(31:38\) = mio_fl2c \(jcen\(2\) * rcen_2 * rcen_2\)) S
LHL
(        header\(39:46\) = mio_fl2c \(jcen\(3\) * rcen_2 * rcen_2 * rcen_2\)) S
LHL
(        header\(47:54\) = mio_fl2c \(rcen\)) S
LHL
(        header\(55:62\) = mio_fl2c \(rmax\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(For each object, compress its index number, name, mass, spin components) S
LHL
(c) S
( ) S
(and density \(some of these need to be converted to normal units\).) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(          c\(k\)\(1:8\) = mio_re2c \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(k - 1\), 0.d0, 11239423.99d0\)) S
LHL
(          c\(k\)\(4:11\) = id\(k\)) S
LHL
(          c\(k\)\(12:19\) = mio_fl2c \(m\(k\) * k_2\)) S
LHL
(          c\(k\)\(20:27\) = mio_fl2c \(s\(1,k\) * k_2\)) S
LHL
(          c\(k\)\(28:35\) = mio_fl2c \(s\(2,k\) * k_2\)) S
LHL
(          c\(k\)\(36:43\) = mio_fl2c \(s\(3,k\) * k_2\)) S
LHL
(          c\(k\)\(44:51\) = mio_fl2c \(rho\(k\) / rhocgs\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write compressed output to file) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(21,) S
0.737 0.561 0.561 FG
('\(a1,a2,i2,a62,i1\)') S
0.000 0.000 0.000 FG
(\) ) S
0.855 0.439 0.839 FG
(char) S
0.000 0.000 0.000 FG
(\(12\),) S
0.737 0.561 0.561 FG
('6a') S
0.000 0.000 0.000 FG
(,algor,header\(1:62\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    opt\(4\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(          ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(21,) S
0.737 0.561 0.561 FG
('\(a51\)') S
0.000 0.000 0.000 FG
(\) c\(k\)\(1:51\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(  ) S
(NORMAL  OUTPUT  PROCEDURE) S
LHL
(c) S
LHL
(c) S
( ) S
(Compose a header line containing the time and number of objects) S
LHL
0.000 0.000 0.000 FG
(      header\(1:8\)   = mio_fl2c \(time\)) S
LHL
(      header\(9:16\)  = mio_re2c \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(nbig - 1\),    0.d0, 11239423.99d0\)) S
LHL
(      header\(12:19\) = mio_re2c \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(nbod - nbig\), 0.d0, 11239423.99d0\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate output variables for each body and convert to compressed format) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_x2ov) S
0.000 0.000 0.000 FG
( \(rcen,rmax,m\(1\),m\(k\),xh\(1,k\),xh\(2,k\),xh\(3,k\),) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(    vh\(1,k\),vh\(2,k\),vh\(3,k\),fr,theta,phi,fv,vtheta,vphi\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Object's index number and output variables) S
LHL
0.000 0.000 0.000 FG
(        c\(k\)\(1:8\) = mio_re2c \() S
0.855 0.439 0.839 FG
(dble) S
0.000 0.000 0.000 FG
(\(k - 1\), 0.d0, 11239423.99d0\)) S
LHL
(        c\(k\)\(4:11\)                 = mio_re2c \(fr,     0.d0, rfac\)) S
LHL
(        c\(k\)\(4+  nchar:11+  nchar\) = mio_re2c \(theta,  0.d0, PI\)) S
LHL
(        c\(k\)\(4+2*nchar:11+2*nchar\) = mio_re2c \(phi,    0.d0, TWOPI\)) S
LHL
(        c\(k\)\(4+3*nchar:11+3*nchar\) = mio_re2c \(fv,     0.d0, 1.d0\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 90 90
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6409 def
/PageNumber 90 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6408 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        c\(k\)\(4+4*nchar:11+4*nchar\) = mio_re2c \(vtheta, 0.d0, PI\)) S
LHL
(        c\(k\)\(4+5*nchar:11+5*nchar\) = mio_re2c \(vphi,   0.d0, TWOPI\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write compressed output to file) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(21,) S
0.737 0.561 0.561 FG
('\(a1,a2,a14\)') S
0.000 0.000 0.000 FG
(\) ) S
0.855 0.439 0.839 FG
(char) S
0.000 0.000 0.000 FG
(\(12\),) S
0.737 0.561 0.561 FG
('6b') S
0.000 0.000 0.000 FG
(,header\(1:14\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 2, nbod) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(21,fout\) c\(k\)\(1:len\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(21\)) S
LHL
(      opflag = 0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_RE2C.FOR    \(ErikSoft  27 June 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Converts a REAL*8 variable X, where XMIN <= X < XMAX, into an ASCII string) S
LHL
(c) S
( ) S
(of 8 characters, using the new format compression: ) S
LHL
(c) S
LHL
(c) S
( ) S
(X is first converted to base 224, and then each base 224 digit is converted ) S
LHL
(c) S
( ) S
(to an ASCII character, such that 0 -> character 32, 1 -> character 33...) S
LHL
(c) S
( ) S
(and 223 -> character 255.) S
LHL
(c) S
LHL
(c) S
( ) S
(ASCII characters 0 - 31 \(CTRL characters\) are not used, because they) S
LHL
(c) S
( ) S
(cause problems when using some operating systems.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_re2c) S
0.000 0.000 0.000 FG
( \(x,xmin,xmax\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(xmin) S
0.000 0.000 0.000 FG
(,xmax) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 mio_re2c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( j) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,z) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      mio_re2c\(1:8\) = ) S
0.737 0.561 0.561 FG
('        ') S
0.000 0.000 0.000 FG
LHL
(      y = \(x - xmin\) / \(xmax - xmin\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(y) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 8) S
LHL
(          mio_re2c\(j:j\) = ) S
0.855 0.439 0.839 FG
(char) S
0.000 0.000 0.000 FG
(\(255\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(y) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        z = y) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, 8) S
LHL
(          z = ) S
0.855 0.439 0.839 FG
(mod) S
0.000 0.000 0.000 FG
(\(z, 1.d0\) * 224.d0) S
LHL
(          mio_re2c\(j:j\) = ) S
0.855 0.439 0.839 FG
(char) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
(\(z\) + 32\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 91 91
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6481 def
/PageNumber 91 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6480 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MIO_SPL.FOR    \(ErikSoft  14 November 1999\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Given a character string STRING, of length LEN bytes, the routine finds ) S
LHL
(c) S
( ) S
(the beginnings and ends of NSUB substrings present in the original, and ) S
LHL
(c) S
( ) S
(delimited by spaces. The positions of the extremes of each substring are ) S
LHL
(c) S
( ) S
(returned in the array DELIMIT.) S
LHL
(c) S
( ) S
(Substrings are those which are separated by spaces or the = symbol.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_spl) S
0.000 0.000 0.000 FG
( \(len,string,nsub,delimit\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(len) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nsub) S
0.000 0.000 0.000 FG
(,delimit\(2,100\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*1 string\(len\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,k) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*1 c) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      nsub = 0) S
LHL
(      j = 0) S
LHL
(      c = ) S
0.737 0.561 0.561 FG
(' ') S
0.000 0.000 0.000 FG
LHL
(      delimit\(1,1\) = -1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Find the start of string) S
LHL
0.373 0.620 0.627 FG
(  10) S
0.000 0.000 0.000 FG
(  j = j + 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(len\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(99) S
0.000 0.000 0.000 FG
LHL
(      c = string\(j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
(' ') S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(c) S
0.627 0.125 0.941 FG
(.eq.) S
0.737 0.561 0.561 FG
('=') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Find the end of string) S
LHL
0.000 0.000 0.000 FG
(      k = j) S
LHL
0.373 0.620 0.627 FG
(  20) S
0.000 0.000 0.000 FG
(  k = k + 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(k) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(len\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(30) S
0.000 0.000 0.000 FG
LHL
(      c = string\(k\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(c) S
0.627 0.125 0.941 FG
(.ne.) S
0.737 0.561 0.561 FG
(' ') S
0.627 0.125 0.941 FG
(.and.) S
0.000 0.000 0.000 FG
(c) S
0.627 0.125 0.941 FG
(.ne.) S
0.737 0.561 0.561 FG
('=') S
0.000 0.000 0.000 FG
(\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(20) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Store details for this string) S
LHL
0.373 0.620 0.627 FG
(  30) S
0.000 0.000 0.000 FG
(  nsub = nsub + 1) S
LHL
(      delimit\(1,nsub\) = j) S
LHL
(      delimit\(2,nsub\) = k - 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(k) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(len\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        j = k) S
LHL
(        ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.373 0.620 0.627 FG
(  99) S
0.000 0.000 0.000 FG
(  ) S
0.627 0.125 0.941 FG
(continue) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MXX_EJEC.FOR    \(ErikSoft   2 November 2000\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
EndPage
EndDSCPage
EndSheet

%%Page: 92 92
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6553 def
/PageNumber 92 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6552 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculates the distance from the central body of each object with index) S
LHL
(c) S
( ) S
(I >= I0. If this distance exceeds RMAX, the object is flagged for ejection ) S
LHL
(c) S
( ) S
(\(STAT set to -3\). If any object is to be ejected, EJFLAG = 1 on exit,) S
LHL
(c) S
( ) S
(otherwise EJFLAG = 0.) S
LHL
(c) S
LHL
(c) S
( ) S
(Also updates the values of EN\(3\) and AM\(3\)---the change in energy and) S
LHL
(c) S
( ) S
(angular momentum due to collisions and ejections.) S
LHL
(c) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates must be with respect to the central body!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_ejec) S
0.000 0.000 0.000 FG
( \(time,tstart,rmax,en,am,jcen,i0,nbod,nbig,m,x,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  v,s,stat,id,opt,ejflag,outfile,mem,lmem\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i0) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\), ) S
0.722 0.525 0.043 FG
(ejflag) S
0.000 0.000 0.000 FG
(, lmem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(rmax) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(en) S
0.000 0.000 0.000 FG
(\(3\), ) S
0.722 0.525 0.043 FG
(am) S
0.000 0.000 0.000 FG
(\(3\), jcen\(3\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\), s\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(, mem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(year) S
0.000 0.000 0.000 FG
(, month) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(r2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rmax2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(t1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,l) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*38 flost) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*6 tstring) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(i0) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(0\) i0 = 2) S
LHL
(      ejflag = 0) S
LHL
(      rmax2 = rmax * rmax) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Calculate initial energy and angular momentum) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_en) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,v,s,e,l\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Flag each object which is ejected, and set its mass to zero) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = i0, nbod) S
LHL
(        r2 = x\(1,j\)*x\(1,j\) + x\(2,j\)*x\(2,j\) + x\(3,j\)*x\(3,j\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(r2) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(rmax2\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          ejflag = 1) S
LHL
(          stat\(j\) = -3) S
LHL
(          m\(j\) = 0.d0) S
LHL
(          s\(1,j\) = 0.d0) S
LHL
(          s\(2,j\) = 0.d0) S
LHL
(          s\(3,j\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Write message to information file) S
LHL
0.373 0.620 0.627 FG
(  20) S
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
(  \(23,file=outfile,status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(,access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(20) S
0.000 0.000 0.000 FG
(\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mio_jd2y) S
0.000 0.000 0.000 FG
( \(time,year,month,t1\)) S
LHL
(            flost = ) S
0.737 0.561 0.561 FG
('\(1x,a8,a,i10,1x,i2,1x,f8.5\)') S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,flost\) id\(j\),mem\(68\)\(1:lmem\(68\)\),year,month,t1) S
LHL
(          ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              t1 = \(time - tstart\) / 365.25d0) S
LHL
(              tstring = mem\(2\)) S
LHL
(              flost = ) S
0.737 0.561 0.561 FG
('\(1x,a8,a,f18.7,a\)') S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(              ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) t1 = time) S
LHL
(              ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(opt\(3\)) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(2\) t1 = time - tstart) S
LHL
(              tstring = mem\(1\)) S
LHL
(              flost = ) S
0.737 0.561 0.561 FG
('\(1x,a8,a,f18.5,a\)') S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,flost\) id\(j\),mem\(68\)\(1:lmem\(68\)\),t1,tstring) S
EndPage
EndDSCPage
EndSheet

%%Page: 93 93
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6625 def
/PageNumber 93 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6624 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(          ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(23\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If ejections occurred, update ELOST and LLOST) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(ejflag) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_en) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,x,v,s,en\(2\),am\(2\)\)) S
LHL
(        en\(3\) = en\(3\) + \(e - en\(2\)\)) S
LHL
(        am\(3\) = am\(3\) + \(l - am\(2\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MXX_ELIM.FOR    \(ErikSoft   13 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Removes any objects with STAT < 0 \(i.e. those that have been flagged for ) S
LHL
(c) S
( ) S
(removal\) and reindexes all the appropriate arrays for the remaining objects.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_elim) S
0.000 0.000 0.000 FG
( \(nbod,nbig,m,x,v,s,rho,rceh,rcrit,ngf,stat,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  id,mem,lmem,outfile,nelim\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nelim) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(stat) S
0.000 0.000 0.000 FG
(\(nbod\), lmem\(NMESS\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\), ) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,nbod\), s\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(rho) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(rceh) S
0.000 0.000 0.000 FG
(\(nbod\), ) S
0.722 0.525 0.043 FG
(rcrit) S
0.000 0.000 0.000 FG
(\(nbod\), ngf\(4,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*80 ) S
0.722 0.525 0.043 FG
(outfile) S
0.000 0.000 0.000 FG
(, mem\(NMESS\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(nbigelim) S
0.000 0.000 0.000 FG
(, elim\(NMAX+1\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Find out how many objects are to be removed) S
LHL
0.000 0.000 0.000 FG
(      nelim = 0) S
LHL
(      nbigelim = 0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(stat\(j\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(          nelim = nelim + 1) S
LHL
(          elim\(nelim\) = j) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(j) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(nbig\) nbigelim = nbigelim + 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      elim\(nelim+1\) = nbod + 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Eliminate unwanted objects) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, nelim) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = elim\(k\) - k + 1, elim\(k+1\) - k - 1) S
LHL
(          l = j + k) S
LHL
(          x\(1,j\) = x\(1,l\)) S
LHL
(          x\(2,j\) = x\(2,l\)) S
LHL
(          x\(3,j\) = x\(3,l\)) S
LHL
(          v\(1,j\) = v\(1,l\)) S
LHL
(          v\(2,j\) = v\(2,l\)) S
LHL
(          v\(3,j\) = v\(3,l\)) S
LHL
(          m\(j\)   = m\(l\)) S
LHL
(          s\(1,j\) = s\(1,l\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 94 94
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6697 def
/PageNumber 94 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6696 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(          s\(2,j\) = s\(2,l\)) S
LHL
(          s\(3,j\) = s\(3,l\)) S
LHL
(          rho\(j\) = rho\(l\)) S
LHL
(          rceh\(j\) = rceh\(l\)) S
LHL
(          stat\(j\) = stat\(l\)) S
LHL
(          id\(j\) = id\(l\)) S
LHL
(          ngf\(1,j\) = ngf\(1,l\)) S
LHL
(          ngf\(2,j\) = ngf\(2,l\)) S
LHL
(          ngf\(3,j\) = ngf\(3,l\)) S
LHL
(          ngf\(4,j\) = ngf\(4,l\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Update total number of bodies and number of Big bodies) S
LHL
0.000 0.000 0.000 FG
(      nbod = nbod - nelim) S
LHL
(      nbig = nbig - nbigelim) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(If no massive bodies remain, stop the integration) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(nbig) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
(  10) S
0.000 0.000 0.000 FG
(    ) S
0.627 0.125 0.941 FG
(open) S
0.000 0.000 0.000 FG
( \(23,file=outfile,status=) S
0.737 0.561 0.561 FG
('old') S
0.000 0.000 0.000 FG
(,access=) S
0.737 0.561 0.561 FG
('append') S
0.000 0.000 0.000 FG
(,) S
0.627 0.125 0.941 FG
(err) S
0.000 0.000 0.000 FG
(=) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
(\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
( \(23,) S
0.737 0.561 0.561 FG
('\(2a\)') S
0.000 0.000 0.000 FG
(\) mem\(81\)\(1:lmem\(81\)\),mem\(124\)\(1:lmem\(124\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(close) S
0.000 0.000 0.000 FG
( \(23\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(stop) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(     ) S
(MXX_EN.FOR    \(ErikSoft   21 February 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates the total energy and angular-momentum for a system of objects) S
LHL
(c) S
( ) S
(with masses M, coordinates X, velocities V and spin angular momenta S.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates and velocities must be with respect to the central) S
LHL
(c) S
( ) S
(===  body.) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_en) S
0.000 0.000 0.000 FG
(  \(jcen,nbod,nbig,m,xh,vh,s,e,l2\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,nbig) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(vh) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,l2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(iflag) S
0.000 0.000 0.000 FG
(,itmp\(8\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dz) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tmp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ke) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(pe) S
0.000 0.000 0.000 FG
(,l\(3\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(r_1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r_2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r_4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r_6) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u6) S
0.000 0.000 0.000 FG
(,tmp2\(4,NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ke = 0.d0) S
LHL
(      pe = 0.d0) S
LHL
(      l\(1\) = 0.d0) S
LHL
(      l\(2\) = 0.d0) S
LHL
(      l\(3\) = 0.d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Convert to barycentric coordinates and velocities) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2b) S
0.000 0.000 0.000 FG
(\(temp,jcen,nbod,nbig,temp,m,xh,vh,x,v,tmp2,iflag,itmp\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Do the spin angular momenta first \(probably the smallest terms\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 95 95
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6769 def
/PageNumber 95 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6768 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nbod) S
LHL
(        l\(1\) = l\(1\) + s\(1,j\)) S
LHL
(        l\(2\) = l\(2\) + s\(2,j\)) S
LHL
(        l\(3\) = l\(3\) + s\(3,j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Orbital angular momentum and kinetic energy terms) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nbod) S
LHL
(        l\(1\) = l\(1\)  +  m\(j\)*\(x\(2,j\) * v\(3,j\)  -  x\(3,j\) * v\(2,j\)\)) S
LHL
(        l\(2\) = l\(2\)  +  m\(j\)*\(x\(3,j\) * v\(1,j\)  -  x\(1,j\) * v\(3,j\)\)) S
LHL
(        l\(3\) = l\(3\)  +  m\(j\)*\(x\(1,j\) * v\(2,j\)  -  x\(2,j\) * v\(1,j\)\)) S
LHL
(        ke = ke + m\(j\)*\(v\(1,j\)*v\(1,j\)+v\(2,j\)*v\(2,j\)+v\(3,j\)*v\(3,j\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Potential energy terms due to pairs of bodies) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        tmp = 0.d0) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = j + 1, nbod) S
LHL
(          dx = x\(1,k\) - x\(1,j\)) S
LHL
(          dy = x\(2,k\) - x\(2,j\)) S
LHL
(          dz = x\(3,k\) - x\(3,j\)) S
LHL
(          r2 = dx*dx + dy*dy + dz*dz) S
LHL
(          ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(r2) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) tmp = tmp + m\(k\) / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(r2\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        pe = pe  -  tmp * m\(j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Potential energy terms involving the central body) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(        dx = x\(1,j\) - x\(1,1\)) S
LHL
(        dy = x\(2,j\) - x\(2,1\)) S
LHL
(        dz = x\(3,j\) - x\(3,1\)) S
LHL
(        r2 = dx*dx + dy*dy + dz*dz) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(r2) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) pe = pe  -  m\(1\) * m\(j\) / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(r2\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Corrections for oblateness) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(jcen\(1\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jcen\(2\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
(jcen\(3\)) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 2, nbod) S
LHL
(          r2 = xh\(1,j\)*xh\(1,j\) + xh\(2,j\)*xh\(2,j\) + xh\(3,j\)*xh\(3,j\)) S
LHL
(          r_1 = 1.d0 / ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(r2\)) S
LHL
(          r_2 = r_1 * r_1) S
LHL
(          r_4 = r_2 * r_2) S
LHL
(          r_6 = r_4 * r_2) S
LHL
(          u2 = xh\(3,j\) * xh\(3,j\) * r_2) S
LHL
(          u4 = u2 * u2) S
LHL
(          u6 = u4 * u2) S
LHL
(          pe = pe + m\(1\) * m\(j\) * r_1) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(       * \(jcen\(1\) * r_2 * \(1.5d0*u2 - 0.5d0\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(       +  jcen\(2\) * r_4 * \(4.375d0*u4 - 3.75d0*u2 + .375d0\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(       +  jcen\(3\) * r_6) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(       *\(14.4375d0*u6 - 19.6875d0*u4 + 6.5625d0*u2 - .3125d0\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      e = .5d0 * ke  +  pe) S
LHL
(      l2 = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(l\(1\)*l\(1\) + l\(2\)*l\(2\) + l\(3\)*l\(3\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
4 W
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(     ) S
(MXX_JAC.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Calculates the Jacobi constant for massless particles. This assumes that) S
EndPage
EndDSCPage
EndSheet

%%Page: 96 96
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6841 def
/PageNumber 96 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6840 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(there are only 2 massive bodies \(including the central body\) moving on) S
LHL
(c) S
( ) S
(circular orbits.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. All coordinates and velocities must be heliocentric!!) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_jac) S
0.000 0.000 0.000 FG
( \(jcen,nbod,nbig,m,xh,vh,jac\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,nbig) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(xh) S
0.000 0.000 0.000 FG
(\(3,nbod\),vh\(3,nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(itmp) S
0.000 0.000 0.000 FG
(\(8\),iflag) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(v) S
0.000 0.000 0.000 FG
(\(3,NMAX\),) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dz) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(d) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(n) S
0.000 0.000 0.000 FG
(,jac\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 tmp2\(4,NMAX\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_h2b) S
0.000 0.000 0.000 FG
(\(temp,jcen,nbod,nbig,temp,m,xh,vh,x,v,tmp2,iflag,itmp\)) S
LHL
(      dx = x\(1,2\) - x\(1,1\)) S
LHL
(      dy = x\(2,2\) - x\(2,1\)) S
LHL
(      dz = x\(3,2\) - x\(3,1\)) S
LHL
(      a2 = dx*dx + dy*dy + dz*dz) S
LHL
(      n = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(\(m\(1\)+m\(2\)\) / \(a2*) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(a2\)\)\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(        dx = x\(1,j\) - x\(1,1\)) S
LHL
(        dy = x\(2,j\) - x\(2,1\)) S
LHL
(        dz = x\(3,j\) - x\(3,1\)) S
LHL
(        r = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(dx*dx + dy*dy + dz*dz\)) S
LHL
(        dx = x\(1,j\) - x\(1,2\)) S
LHL
(        dy = x\(2,j\) - x\(2,2\)) S
LHL
(        dz = x\(3,j\) - x\(3,2\)) S
LHL
(        d = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(dx*dx + dy*dy + dz*dz\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(        jac\(j\) = .5d0*\(v\(1,j\)*v\(1,j\) + v\(2,j\)*v\(2,j\) + v\(3,j\)*v\(3,j\)\)) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(         - m\(1\)/r - m\(2\)/d - n*\(x\(1,j\)*v\(2,j\) - x\(2,j\)*v\(1,j\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
4 W
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MXX_SORT.FOR    \(ErikSoft 24 May 1997\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Sorts an array X, of size N, using Shell's method. Also returns an array) S
LHL
(c) S
( ) S
(INDEX that gives the original index of every item in the sorted array X.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. The maximum array size is 29523.) S
LHL
(c) S
( ) S
(===) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_sort) S
0.000 0.000 0.000 FG
( \(n,x,index\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(n) S
0.000 0.000 0.000 FG
(,) S
0.855 0.439 0.839 FG
(index) S
0.000 0.000 0.000 FG
(\(n\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 97 97
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6913 def
/PageNumber 97 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6912 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 x\(n\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(inc) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(incarr) S
0.000 0.000 0.000 FG
(\(9\),iy) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 y) S
LHL
(      ) S
0.133 0.545 0.133 FG
(data) S
0.000 0.000 0.000 FG
( incarr/1,4,13,40,121,364,1093,3280,9841/) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 1, n) S
LHL
(        ) S
0.855 0.439 0.839 FG
(index) S
0.000 0.000 0.000 FG
(\(i\) = i) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      m = 0) S
LHL
0.373 0.620 0.627 FG
(  10) S
0.000 0.000 0.000 FG
(  m = m + 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(incarr\(m\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(n\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(10) S
0.000 0.000 0.000 FG
LHL
(      m = m - 1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = m, 1, -1) S
LHL
(        inc = incarr\(i\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, inc) S
LHL
(          ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = inc, n - j, inc) S
LHL
(            y = x\(j+k\)) S
LHL
(            iy = ) S
0.855 0.439 0.839 FG
(index) S
0.000 0.000 0.000 FG
(\(j+k\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( l = j + k - inc, j, -inc) S
LHL
(              ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(x\(l\)) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
(y\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(20) S
0.000 0.000 0.000 FG
LHL
(              x\(l+inc\) = x\(l\)) S
LHL
(              ) S
0.855 0.439 0.839 FG
(index) S
0.000 0.000 0.000 FG
(\(l+inc\) = ) S
0.855 0.439 0.839 FG
(index) S
0.000 0.000 0.000 FG
(\(l\)) S
LHL
(            ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.373 0.620 0.627 FG
(  20) S
0.000 0.000 0.000 FG
(        x\(l+inc\) = y) S
LHL
(            ) S
0.855 0.439 0.839 FG
(index) S
0.000 0.000 0.000 FG
(\(l+inc\) = iy) S
LHL
(          ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
(      ) S
(MXX_SYNC.FOR    \(ErikSoft   2 March 2001\)) S
LHL
(c) S
LHL
(c) S
(%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%) S
LHL
(c) S
LHL
(c) S
( ) S
(Author: John E. Chambers) S
LHL
(c) S
LHL
(c) S
( ) S
(Synchronizes the epochs of NBIG Big bodies \(having a common epoch\) and) S
LHL
(c) S
( ) S
(NBOD-NBIG Small bodies \(possibly having differing epochs\), for an ) S
LHL
(c) S
( ) S
(integration using MERCURY.) S
LHL
(c) S
( ) S
(The Small bodies are picked up in order starting with the one with epoch) S
LHL
(c) S
( ) S
(furthest from the time, TSTART, at which the main integration will begin) S
LHL
(c) S
( ) S
(producing output.) S
LHL
(c) S
LHL
(c) S
( ) S
(N.B. The synchronization integrations use Everhart's RA15 routine.) S
LHL
(c) S
( ) S
(---) S
LHL
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_sync) S
0.000 0.000 0.000 FG
( \(time,tstart,h0,tol,jcen,nbod,nbig,m,x,v,s,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(  rho,rceh,stat,id,epoch,ngf,opt,ngflag\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('mercury.inc') S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Input/Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nbod) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nbig) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ngflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(opt) S
0.000 0.000 0.000 FG
(\(8\),stat\(nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(time) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tstart) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(h0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tol) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(jcen) S
0.000 0.000 0.000 FG
(\(3\),) S
0.722 0.525 0.043 FG
(m) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(\(3,nbod\),v\(3,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(\(3,nbod\),) S
0.722 0.525 0.043 FG
(rceh) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(rho) S
0.000 0.000 0.000 FG
(\(nbod\),) S
0.722 0.525 0.043 FG
(epoch) S
0.000 0.000 0.000 FG
(\(nbod\),ngf\(4,nbod\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 id\(nbod\)) S
LHL
0.698 0.133 0.133 FG
(c) S
EndPage
EndDSCPage
EndSheet

%%Page: 98 98
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 6985 def
/PageNumber 98 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
6984 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Local) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(j) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(k) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(l) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nsml) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nsofar) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(indx) S
0.000 0.000 0.000 FG
(\(NMAX\),) S
0.722 0.525 0.043 FG
(itemp) S
0.000 0.000 0.000 FG
(,jtemp\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(raflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(nce) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ice) S
0.000 0.000 0.000 FG
(\(NMAX\),jce\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(temp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(epsml) S
0.000 0.000 0.000 FG
(\(NMAX\),rtemp\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(h) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(hdid) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(tsmall) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(rphys) S
0.000 0.000 0.000 FG
(\(NMAX\),rcrit\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(character) S
0.000 0.000 0.000 FG
(*8 ctemp\(NMAX\)) S
LHL
(      ) S
0.133 0.545 0.133 FG
(external) S
0.000 0.000 0.000 FG
( mfo_all) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
( ) S
(Reorder Small bodies by epoch so that ep\(1\) is furthest from TSTART) S
LHL
0.000 0.000 0.000 FG
(      nsml = nbod - nbig) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(        epsml\(j-nbig\) = epoch\(j\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mxx_sort) S
0.000 0.000 0.000 FG
( \(nsml,epsml,indx\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(epsml\(1\)-tstart\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(epsml\(nsml\)-tstart\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(        k = nsml + 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml / 2) S
LHL
(          l = k - j) S
LHL
(          temp = epsml\(j\)) S
LHL
(          epsml\(j\) = epsml \(l\)) S
LHL
(          epsml\(l\) = temp) S
LHL
(          itemp = indx\(j\)) S
LHL
(          indx\(j\) = indx \(l\)) S
LHL
(          indx\(l\) = itemp) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(        epoch\(j\) = epsml\(j-nbig\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Reorder the other arrays associated with each Small body) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( k = 1, 3) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(          rtemp\(j\) = x\(k,j+nbig\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(          x\(k,j+nbig\) = rtemp\(indx\(j\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(          rtemp\(j\) = v\(k,j+nbig\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(          v\(k,j+nbig\) = rtemp\(indx\(j\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(          rtemp\(j\) = s\(k,j+nbig\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(          s\(k,j+nbig\) = rtemp\(indx\(j\)\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(        rtemp\(j\) = m\(j+nbig\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(        m\(j+nbig\) = rtemp\(indx\(j\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(        rtemp\(j\) = rceh\(j+nbig\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(        rceh\(j+nbig\) = rtemp\(indx\(j\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(        rtemp\(j\) = rho\(j+nbig\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
EndPage
EndDSCPage
EndSheet

%%Page: 99 99
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7057 def
/PageNumber 99 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7056 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        rho\(j+nbig\) = rtemp\(indx\(j\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(        ctemp\(j\) = id\(j+nbig\)) S
LHL
(        jtemp\(j\) = stat\(j+nbig\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = 1, nsml) S
LHL
(        id\(j+nbig\) = ctemp\(indx\(j\)\)) S
LHL
(        stat\(j+nbig\) = jtemp\(indx\(j\)\)) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
( ) S
(Integrate Small bodies up to the same epoch) S
LHL
0.000 0.000 0.000 FG
(      h = h0) S
LHL
(      tsmall = h0 * 1.d-12) S
LHL
(      raflag = 0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( j = nbig + 1, nbod) S
LHL
(        nsofar = j - 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(while) S
0.000 0.000 0.000 FG
( \() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(time-epoch\(j\)\)) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(tsmall\)) S
LHL
(          temp = epoch\(j\) - time) S
LHL
(          h = ) S
0.855 0.439 0.839 FG
(sign) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(max) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(min) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(temp\),) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(h\)\),tsmall\),temp\)) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mdt_ra15) S
0.000 0.000 0.000 FG
( \(time,h,hdid,tol,jcen,nsofar,nbig,m,x,v,s,rphys,) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(      rcrit,ngf,stat,raflag,ngflag,opt,nce,ice,jce,mfo_all\)) S
LHL
(          time = time + hdid) S
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
(        raflag = 1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(------------------------------------------------------------------------------) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
(                        ) S
(DRIFT_DAN.F) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
( ) S
(This subroutine does the Danby and decides which vbles to use) S
LHL
(c) S
LHL
(c) S
(             ) S
(Input:) S
LHL
(c) S
(                 ) S
(nbod          ==>  number of massive bodies \(int scalar\)) S
LHL
(c) S
(                 ) S
(mass          ==>  mass of bodies \(real array\)) S
LHL
(c) S
(                 ) S
(x0,y0,z0         ==>  initial position in jacobi coord ) S
LHL
(c) S
(                                    ) S
(\(real scalar\)) S
LHL
(c) S
(                 ) S
(vx0,vy0,vz0      ==>  initial position in jacobi coord ) S
LHL
(c) S
(                                    ) S
(\(real scalar\)) S
LHL
(c) S
(                 ) S
(dt0            ==>  time step) S
LHL
(c) S
(             ) S
(Output:) S
LHL
(c) S
(                 ) S
(x0,y0,z0         ==>  final position in jacobi coord ) S
LHL
(c) S
(                                       ) S
(\(real scalars\)) S
LHL
(c) S
(                 ) S
(vx0,vy0,vz0      ==>  final position in jacobi coord ) S
LHL
(c) S
(                                       ) S
(\(real scalars\)) S
LHL
(c) S
(                 ) S
(iflg             ==>  integer flag \(zero if satisfactory\)) S
LHL
(c) S
45 W
(\(non-zero if nonconvergence\)) S
LHL
(c) S
LHL
(c) S
( ) S
(Authors:  Hal Levison & Martin Duncan  ) S
LHL
(c) S
( ) S
(Date:    2/10/93) S
LHL
(c) S
( ) S
(Last revision: April 6/93 - MD adds dt and keeps dt0 unchanged) S
PHL
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_dan) S
0.000 0.000 0.000 FG
(\(mu,x0,y0,z0,vx0,vy0,vz0,dt0,iflg\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs Only: ) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(,dt0) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs and Outputs:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y0) S
0.000 0.000 0.000 FG
(,z0) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(vx0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vy0) S
0.000 0.000 0.000 FG
(,vz0) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Output) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( iflg) S
EndPage
EndDSCPage
EndSheet

%%Page: 100 100
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7129 def
/PageNumber 100 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7128 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(z) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vz) S
0.000 0.000 0.000 FG
(,dt) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(g) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fdot) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c1) S
0.000 0.000 0.000 FG
(,c2) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(c3) S
0.000 0.000 0.000 FG
(,gdot) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(u) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(alpha) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r0) S
0.000 0.000 0.000 FG
(,v0s) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(asq) S
0.000 0.000 0.000 FG
(,en) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dm) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ec) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(es) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(esq) S
0.000 0.000 0.000 FG
(,xkep) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(fchk) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(,c) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Set dt = dt0 to be sure timestep is not altered while solving) S
LHL
(c) S
(...  ) S
(for new coords.) S
LHL
0.000 0.000 0.000 FG
8 W
(dt = dt0) S
LHL
8 W
(iflg = 0) S
LHL
(        r0 = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(x0*x0 + y0*y0 + z0*z0\)) S
LHL
(        v0s = vx0*vx0 + vy0*vy0 + vz0*vz0) S
LHL
(        u = x0*vx0 + y0*vy0 + z0*vz0) S
LHL
(        alpha = 2.0*mu/r0 - v0s) S
PHL
(        ) S
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(alpha) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(           a = mu/alpha) S
LHL
(           asq = a*a) S
LHL
(           en = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(mu/\(a*asq\)\)) S
LHL
(           ec = 1.0d0 - r0/a) S
LHL
(           es = u/\(en*asq\)) S
LHL
11 W
(esq = ec*ec + es*es) S
LHL
11 W
(dm = dt*en - ) S
0.855 0.439 0.839 FG
(int) S
0.000 0.000 0.000 FG
(\(dt*en/TWOPI\)*TWOPI) S
LHL
11 W
(dt = dm/en) S
LHL
11 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(\(dm*dm ) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
( 0.16d0\) ) S
0.627 0.125 0.941 FG
(.or.) S
0.000 0.000 0.000 FG
( \(esq) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0.36d0\)\) ) S
0.627 0.125 0.941 FG
(goto) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
PHL
LHL
11 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(esq*dm*dm ) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
( 0.0016\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
PHL
LHL
(               ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepmd) S
0.000 0.000 0.000 FG
(\(dm,es,ec,xkep,s,c\)) S
LHL
15 W
(fchk = \(xkep - ec*s +es*\(1.-c\) - dm\)) S
PHL
LHL
15 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(fchk*fchk ) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
( DANBYB\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
18 W
(iflg = 1) S
LHL
18 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
15 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
(               fp = 1. - ec*c + es*s) S
LHL
(               f = \(a/r0\) * \(c-1.\) + 1.) S
LHL
(               g = dt + \(s-xkep\)/en) S
LHL
(               fdot = - \(a/\(r0*fp\)\)*en*s) S
LHL
(               gdot = \(c-1.\)/fp + 1.) S
PHL
LHL
(               x = x0*f + vx0*g) S
LHL
(               y = y0*f + vy0*g) S
LHL
(               z = z0*f + vz0*g) S
LHL
(               vx = x0*fdot + vx0*gdot) S
LHL
(               vy = y0*fdot + vy0*gdot) S
LHL
(               vz = z0*fdot + vz0*gdot) S
PHL
LHL
(               x0 = x) S
LHL
(               y0 = y) S
LHL
(               z0 = z) S
LHL
(               vx0 = vx) S
LHL
(               vy0 = vy) S
LHL
(               vz0 = vz) S
PHL
LHL
15 W
(iflg = 0) S
LHL
15 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
PHL
LHL
11 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
(         ) S
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
(             ) S
LHL
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu) S
0.000 0.000 0.000 FG
(\(dt,r0,mu,alpha,u,fp,c1,c2,c3,iflg\)) S
PHL
EndPage
EndDSCPage
EndSheet

%%Page: 101 101
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7201 def
/PageNumber 101 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7200 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(         ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflg ) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(           f = 1.0 - \(mu/r0\)*c2) S
LHL
(           g = dt - mu*c3) S
LHL
(           fdot = -\(mu/\(fp*r0\)\)*c1) S
LHL
(           gdot = 1. - \(mu/fp\)*c2) S
PHL
LHL
(           x = x0*f + vx0*g) S
LHL
(           y = y0*f + vy0*g) S
LHL
(           z = z0*f + vz0*g) S
LHL
(           vx = x0*fdot + vx0*gdot) S
LHL
(           vy = y0*fdot + vy0*gdot) S
LHL
(           vz = z0*fdot + vz0*gdot) S
PHL
LHL
(           x0 = x) S
LHL
(           y0 = y) S
LHL
(           z0 = z) S
LHL
(           vx0 = vx) S
LHL
(           vy0 = vy) S
LHL
(           vz0 = vz) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
(        ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(   ) S
0.698 0.133 0.133 FG
(! ) S
(drift_dan) S
LHL
(c) S
LHL
(c) S
(********************************************************************) S
(#) S
LHL
(c) S
(                  ) S
(DRIFT_KEPMD) S
LHL
(c) S
(********************************************************************) S
(#) S
LHL
(c) S
(  ) S
(Subroutine for solving kepler's equation in difference form for an) S
LHL
(c) S
(  ) S
(ellipse, given SMALL dm and SMALL eccentricity.  See DRIFT_DAN.F) S
LHL
(c) S
(  ) S
(for the criteria.) S
LHL
(c) S
(  ) S
(WARNING - BUILT FOR SPEED : DOES NOT CHECK HOW WELL THE ORIGINAL) S
LHL
(c) S
(  ) S
(EQUATION IS SOLVED! \(CAN DO THAT IN THE CALLING ROUTINE BY) S
LHL
(c) S
(  ) S
(CHECKING HOW CLOSE \(x - ec*s +es*\(1.-c\) - dm\) IS TO ZERO.) S
LHL
(c) S
LHL
(c) S
7 W
(Input:) S
LHL
(c) S
11 W
(dm) S
10 W
(==> increment in mean anomaly M \(real*8 scalar\)) S
LHL
(c) S
11 W
(es,ec       ==> ecc. times sin and cos of E_0 \(real*8 scalars\)) S
LHL
(c) S
LHL
(c) S
(       ) S
(Output:) S
LHL
(c) S
(            ) S
(x          ==> solution to Kepler's difference eqn \(real*8 scalar\)) S
LHL
(c) S
(            ) S
(s,c        ==> sin and cosine of x \(real*8 scalars\)) S
LHL
(c) S
PHL
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepmd) S
0.000 0.000 0.000 FG
(\(dm,es,ec,x,s,c\)) S
PHL
LHL
8 W
0.133 0.545 0.133 FG
(implicit none) S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...    ) S
(Inputs) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dm) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(es) S
0.000 0.000 0.000 FG
(,ec) S
PHL
8 W
LHL
0.698 0.133 0.133 FG
(c) S
(...) S
4 W
(Outputs) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(,c) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...    ) S
(Internals) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(A0) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(A1) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(A2) S
0.000 0.000 0.000 FG
(, ) S
0.722 0.525 0.043 FG
(A3) S
0.000 0.000 0.000 FG
(, A4) S
LHL
(        ) S
0.133 0.545 0.133 FG
(parameter) S
0.000 0.000 0.000 FG
(\() S
0.722 0.525 0.043 FG
(A0) S
0.000 0.000 0.000 FG
( = 39916800.d0, ) S
0.722 0.525 0.043 FG
(A1) S
0.000 0.000 0.000 FG
( = 6652800.d0, ) S
0.722 0.525 0.043 FG
(A2) S
0.000 0.000 0.000 FG
( = 332640.d0\)) S
LHL
8 W
0.133 0.545 0.133 FG
(parameter) S
0.000 0.000 0.000 FG
(\() S
0.722 0.525 0.043 FG
(A3) S
0.000 0.000 0.000 FG
( = 7920.d0, ) S
0.722 0.525 0.043 FG
(A4) S
0.000 0.000 0.000 FG
( = 110.d0\)) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 dx) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(fac1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fac2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,y) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fpp) S
0.000 0.000 0.000 FG
(,fppp) S
PHL
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...    ) S
(calc initial guess for root) S
LHL
0.000 0.000 0.000 FG
8 W
(fac1 = 1.d0/\(1.d0 - ec\)) S
LHL
8 W
(q = fac1*dm) S
LHL
8 W
(fac2 = es*es*fac1 - ec/3.d0) S
LHL
8 W
(x = q*\(1.d0 -0.5d0*fac1*q*\(es -q*fac2\)\)) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(excellent approx. to sin and cos of x for small x.) S
LHL
0.000 0.000 0.000 FG
8 W
(y = x*x) S
LHL
8 W
(s = x*\(A0-y*\(A1-y*\(A2-y*\(A3-y*\(A4-y\)\)\)\)\)/A0) S
LHL
(        c = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(1.d0 - s*s\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 102 102
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7273 def
/PageNumber 102 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7272 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(...    ) S
(Compute better value for the root using quartic Newton method) S
LHL
0.000 0.000 0.000 FG
(        f = x - ec*s + es*\(1.-c\) - dm) S
LHL
(        fp = 1. - ec*c + es*s) S
LHL
(        fpp = ec*s + es*c) S
LHL
(        fppp = ec*c - es*s) S
LHL
(        dx = -f/fp) S
LHL
(        dx = -f/\(fp + 0.5*dx*fpp\)) S
LHL
(        dx = -f/\(fp + 0.5*dx*fpp + 0.16666666666666666*dx*dx*fppp\)) S
LHL
(        x = x + dx) S
PHL
(     ) S
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(excellent approx. to sin and cos of x for small x.) S
LHL
0.000 0.000 0.000 FG
8 W
(y = x*x) S
LHL
8 W
(s = x*\(A0-y*\(A1-y*\(A2-y*\(A3-y*\(A4-y\)\)\)\)\)/A0) S
LHL
(        c = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(1.d0 - s*s\)) S
PHL
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(-----------------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
(                        ) S
(DRIFT_KEPU.F) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
( ) S
(subroutine for solving kepler's equation using universal variables.) S
LHL
(c) S
LHL
(c) S
(             ) S
(Input:) S
LHL
(c) S
(                 ) S
(dt            ==>  time step \(real scalor\)) S
LHL
(c) S
(                 ) S
(r0            ==>  Distance between `Sun' and paritcle) S
LHL
(c) S
(                                     ) S
(\(real scalor\)) S
LHL
(c) S
(                 ) S
(mu            ==>  Reduced mass of system \(real scalor\)) S
LHL
(c) S
(                 ) S
(alpha         ==>  energy \(real scalor\)) S
LHL
(c) S
(                 ) S
(u             ==>  angular momentun  \(real scalor\)) S
LHL
(c) S
(             ) S
(Output:) S
LHL
(c) S
(                 ) S
(fp            ==>  f' from p170  ) S
LHL
(c) S
(                                       ) S
(\(real scalors\)) S
LHL
(c) S
(                 ) S
(c1,c2,c3      ==>  c's from p171-172) S
LHL
(c) S
(                                       ) S
(\(real scalors\)) S
LHL
(c) S
(                 ) S
(iflg          ==>  =0 if converged; !=0 if not) S
LHL
(c) S
LHL
(c) S
( ) S
(Author:  Hal Levison  ) S
LHL
(c) S
( ) S
(Date:    2/3/93) S
LHL
(c) S
( ) S
(Last revision: 2/3/93) S
PHL
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu) S
0.000 0.000 0.000 FG
(\(dt,r0,mu,alpha,u,fp,c1,c2,c3,iflg\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs: ) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dt) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(alpha) S
0.000 0.000 0.000 FG
(,u) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Outputs:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(fp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c2) S
0.000 0.000 0.000 FG
(,c3) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( iflg) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(st) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fo) S
0.000 0.000 0.000 FG
(,fn) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_guess) S
0.000 0.000 0.000 FG
(\(dt,r0,mu,alpha,u,s\)) S
PHL
(         ) S
LHL
(        st = s) S
LHL
0.698 0.133 0.133 FG
(c) S
(..     ) S
(store initial guess for possible use later in) S
LHL
(c) S
(..     ) S
(laguerre's method, in case newton's method fails.) S
PHL
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_new) S
0.000 0.000 0.000 FG
(\(s,dt,r0,mu,alpha,u,fp,c1,c2,c3,iflg\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflg) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(           ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_fchk) S
0.000 0.000 0.000 FG
(\(dt,r0,mu,alpha,u,st,fo\)) S
LHL
(           ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_fchk) S
0.000 0.000 0.000 FG
(\(dt,r0,mu,alpha,u,s,fn\)) S
LHL
(           ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(fo\)) S
0.627 0.125 0.941 FG
(.lt.) S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(fn\)\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(               s = st ) S
EndPage
EndDSCPage
EndSheet

%%Page: 103 103
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7345 def
/PageNumber 103 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7344 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(           ) S
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
LHL
(           ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_lag) S
0.000 0.000 0.000 FG
(\(s,dt,r0,mu,alpha,u,fp,c1,c2,c3,iflg\)) S
LHL
(        ) S
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
(        ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(    ) S
0.698 0.133 0.133 FG
(! ) S
(drift_kepu) S
LHL
(c) S
(----------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
(                        ) S
(DRIFT_KEPU_FCHK.F) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
( ) S
(Returns the value of the function f of which we are trying to find the root) S
LHL
(c) S
( ) S
(in universal variables.) S
LHL
(c) S
LHL
(c) S
(             ) S
(Input:) S
LHL
(c) S
(                 ) S
(dt            ==>  time step \(real scalar\)) S
LHL
(c) S
(                 ) S
(r0            ==>  Distance between `Sun' and particle) S
LHL
(c) S
(                                     ) S
(\(real scalar\)) S
LHL
(c) S
(                 ) S
(mu            ==>  Reduced mass of system \(real scalar\)) S
LHL
(c) S
(                 ) S
(alpha         ==>  Twice the binding energy \(real scalar\)) S
LHL
(c) S
(                 ) S
(u             ==>  Vel. dot radial vector \(real scalar\)) S
LHL
(c) S
(                 ) S
(s             ==>  Approx. root of f ) S
LHL
(c) S
(             ) S
(Output:) S
LHL
(c) S
(                 ) S
(f             ==>  function value \( = 0 if O.K.\) \(integer\)) S
LHL
(c) S
LHL
(c) S
( ) S
(Author:  Martin Duncan  ) S
LHL
(c) S
( ) S
(Date:    March 12/93) S
LHL
(c) S
( ) S
(Last revision: March 12/93) S
PHL
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_fchk) S
0.000 0.000 0.000 FG
(\(dt,r0,mu,alpha,u,s,f\)) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs: ) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dt) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(alpha) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(u) S
0.000 0.000 0.000 FG
(,s) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Outputs:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 f) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8  ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c2) S
0.000 0.000 0.000 FG
(,c3) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
(        x=s*s*alpha) S
LHL
(        ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_stumpff) S
0.000 0.000 0.000 FG
(\(x,c0,c1,c2,c3\)) S
LHL
(        c1=c1*s) S
LHL
(        c2 = c2*s*s) S
LHL
(        c3 = c3*s*s*s) S
LHL
(        f = r0*c1 + u*c2 + mu*c3 - dt) S
PHL
LHL
(        ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(     ) S
0.698 0.133 0.133 FG
(!   ) S
(drift_kepu_fchk) S
LHL
(c) S
(-------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
(                        ) S
(DRIFT_KEPU_GUESS.F) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
( ) S
(Initial guess for solving kepler's equation using universal variables.) S
LHL
(c) S
LHL
(c) S
(             ) S
(Input:) S
LHL
(c) S
(                 ) S
(dt            ==>  time step \(real scalor\)) S
LHL
(c) S
(                 ) S
(r0            ==>  Distance between `Sun' and paritcle) S
LHL
(c) S
(                                     ) S
(\(real scalor\)) S
LHL
(c) S
(                 ) S
(mu            ==>  Reduced mass of system \(real scalor\)) S
LHL
(c) S
(                 ) S
(alpha         ==>  energy \(real scalor\)) S
LHL
(c) S
(                 ) S
(u             ==>  angular momentun  \(real scalor\)) S
LHL
(c) S
(             ) S
(Output:) S
LHL
(c) S
(                 ) S
(s             ==>  initial guess for the value of ) S
LHL
(c) S
(                                    ) S
(universal variable) S
LHL
(c) S
LHL
(c) S
( ) S
(Author:  Hal Levison & Martin Duncan ) S
LHL
(c) S
( ) S
(Date:    3/12/93) S
EndPage
EndDSCPage
EndSheet

%%Page: 104 104
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7417 def
/PageNumber 104 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7416 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
( ) S
(Last revision: April 6/93) S
LHL
(c) S
( ) S
(Modified by JEC: 8/6/98) S
PHL
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_guess) S
0.000 0.000 0.000 FG
(\(dt,r0,mu,alpha,u,s\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs: ) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dt) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(alpha) S
0.000 0.000 0.000 FG
(,u) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs and Outputs:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 s) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( iflg) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(cy) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sigma) S
0.000 0.000 0.000 FG
(,es) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,a) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(en) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ec) S
0.000 0.000 0.000 FG
(,e) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(alpha) S
0.627 0.125 0.941 FG
(.gt.) S
0.000 0.000 0.000 FG
(0.0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
( ) S
LHL
0.698 0.133 0.133 FG
(c) S
(...       ) S
(find initial guess for elliptic motion) S
PHL
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\( dt/r0 ) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
( 0.4\)  ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(              s = dt/r0 - \(dt*dt*u\)/\(2.0*r0*r0*r0\)) S
LHL
14 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(            ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(              a = mu/alpha) S
LHL
(              en = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(mu/\(a*a*a\)\)) S
LHL
(              ec = 1.0 - r0/a) S
LHL
(              es = u/\(en*a*a\)) S
LHL
(              e = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(ec*ec + es*es\)) S
LHL
(              y = en*dt - es) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(              ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sine) S
0.000 0.000 0.000 FG
( \(y,sy,cy\)) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(              sigma = ) S
0.855 0.439 0.839 FG
(dsign) S
0.000 0.000 0.000 FG
(\(1.d0,\(es*cy + ec*sy\)\)) S
LHL
(              x = y + sigma*.85*e) S
LHL
(              s = x/) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(alpha\)) S
LHL
12 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(...       ) S
(find initial guess for hyperbolic motion.) S
LHL
0.000 0.000 0.000 FG
11 W
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_p3solve) S
0.000 0.000 0.000 FG
(\(dt,r0,mu,alpha,u,s,iflg\)) S
LHL
11 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflg) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
14 W
(s = dt/r0) S
LHL
11 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
(        ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(     ) S
0.698 0.133 0.133 FG
(!   ) S
(drift_kepu_guess) S
LHL
(c) S
(-------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
(                        ) S
(DRIFT_KEPU_LAG.F) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
( ) S
(subroutine for solving kepler's equation in universal variables.) S
LHL
(c) S
( ) S
(using LAGUERRE'S METHOD) S
LHL
(c) S
LHL
(c) S
(             ) S
(Input:) S
LHL
(c) S
(                 ) S
(s             ==>  inital value of universal variable) S
LHL
(c) S
(                 ) S
(dt            ==>  time step \(real scalor\)) S
LHL
(c) S
(                 ) S
(r0            ==>  Distance between `Sun' and paritcle) S
LHL
(c) S
(                                     ) S
(\(real scalor\)) S
LHL
(c) S
(                 ) S
(mu            ==>  Reduced mass of system \(real scalor\)) S
LHL
(c) S
(                 ) S
(alpha         ==>  energy \(real scalor\)) S
LHL
(c) S
(                 ) S
(u             ==>  angular momentun  \(real scalor\)) S
LHL
(c) S
(             ) S
(Output:) S
LHL
(c) S
(                 ) S
(s             ==>  final value of universal variable) S
LHL
(c) S
(                 ) S
(fp            ==>  f' from p170  ) S
EndPage
EndDSCPage
EndSheet

%%Page: 105 105
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7489 def
/PageNumber 105 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7488 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(                                       ) S
(\(real scalors\)) S
LHL
(c) S
(                 ) S
(c1,c2,c3      ==>  c's from p171-172) S
LHL
(c) S
(                                       ) S
(\(real scalors\)) S
LHL
(c) S
(                 ) S
(iflgn          ==>  =0 if converged; !=0 if not) S
LHL
(c) S
LHL
(c) S
( ) S
(Author:  Hal Levison  ) S
LHL
(c) S
( ) S
(Date:    2/3/93) S
LHL
(c) S
( ) S
(Last revision: 4/21/93) S
PHL
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_lag) S
0.000 0.000 0.000 FG
(\(s,dt,r0,mu,alpha,u,fp,c1,c2,c3,iflg\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs: ) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dt) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(alpha) S
0.000 0.000 0.000 FG
(,u) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Outputs:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(fp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c2) S
0.000 0.000 0.000 FG
(,c3) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( iflg) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(nc) S
0.000 0.000 0.000 FG
(,ncmax) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ln) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fpp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ds) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c0) S
0.000 0.000 0.000 FG
(,f) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 fdt) S
PHL
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( NTMP) S
LHL
(      ) S
0.133 0.545 0.133 FG
(parameter) S
0.000 0.000 0.000 FG
(\() S
0.722 0.525 0.043 FG
(NTMP) S
0.000 0.000 0.000 FG
(=NLAG2+1\)) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(...    ) S
(To get close approch needed to take lots of iterations if alpha<0) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(alpha) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0.0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(           ncmax = NLAG2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
(           ncmax = NLAG2) S
LHL
(        ) S
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
(        ln = 5.0) S
LHL
0.698 0.133 0.133 FG
(c) S
(...    ) S
(start laguere's method) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( nc =0,ncmax) S
LHL
(           x = s*s*alpha) S
LHL
(           ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_stumpff) S
0.000 0.000 0.000 FG
(\(x,c0,c1,c2,c3\)) S
LHL
(           c1 = c1*s ) S
LHL
(           c2 = c2*s*s ) S
LHL
(           c3 = c3*s*s*s) S
LHL
(           f = r0*c1 + u*c2 + mu*c3 - dt) S
LHL
(           fp = r0*c0 + u*c1 + mu*c2) S
LHL
(           fpp = \(-40.0*alpha + mu\)*c1 + u*c0) S
LHL
(           ds = - ln*f/\(fp + ) S
0.855 0.439 0.839 FG
(dsign) S
0.000 0.000 0.000 FG
(\(1.d0,fp\)*) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(\(ln - 1.0\)*) S
LHL
(     ) S
0.737 0.561 0.561 FG
(&) S
0.000 0.000 0.000 FG
(       \(ln - 1.0\)*fp*fp - \(ln - 1.0\)*ln*f*fpp\)\)\)) S
LHL
(           s = s + ds) S
PHL
LHL
(           fdt = f/dt) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(..        ) S
(quartic convergence) S
LHL
0.000 0.000 0.000 FG
(           ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\( fdt*fdt) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(DANBYB*DANBYB\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
( ) S
LHL
(             iflg = 0) S
LHL
(             ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(           ) S
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(...      ) S
(Laguerre's method succeeded) S
LHL
0.000 0.000 0.000 FG
(        ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
PHL
LHL
(        iflg = 2) S
PHL
LHL
(        ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
PHL
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(    ) S
0.698 0.133 0.133 FG
(!    ) S
(drift_kepu_leg) S
LHL
(c) S
(-----------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(*************************************************************************) S
EndPage
EndDSCPage
EndSheet

%%Page: 106 106
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7561 def
/PageNumber 106 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7560 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(                        ) S
(DRIFT_KEPU_NEW.F) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
( ) S
(subroutine for solving kepler's equation in universal variables.) S
LHL
(c) S
( ) S
(using NEWTON'S METHOD) S
LHL
(c) S
LHL
(c) S
(             ) S
(Input:) S
LHL
(c) S
(                 ) S
(s             ==>  inital value of universal variable) S
LHL
(c) S
(                 ) S
(dt            ==>  time step \(real scalor\)) S
LHL
(c) S
(                 ) S
(r0            ==>  Distance between `Sun' and paritcle) S
LHL
(c) S
(                                     ) S
(\(real scalor\)) S
LHL
(c) S
(                 ) S
(mu            ==>  Reduced mass of system \(real scalor\)) S
LHL
(c) S
(                 ) S
(alpha         ==>  energy \(real scalor\)) S
LHL
(c) S
(                 ) S
(u             ==>  angular momentun  \(real scalor\)) S
LHL
(c) S
(             ) S
(Output:) S
LHL
(c) S
(                 ) S
(s             ==>  final value of universal variable) S
LHL
(c) S
(                 ) S
(fp            ==>  f' from p170  ) S
LHL
(c) S
(                                       ) S
(\(real scalors\)) S
LHL
(c) S
(                 ) S
(c1,c2,c3      ==>  c's from p171-172) S
LHL
(c) S
(                                       ) S
(\(real scalors\)) S
LHL
(c) S
(                 ) S
(iflgn          ==>  =0 if converged; !=0 if not) S
LHL
(c) S
LHL
(c) S
( ) S
(Author:  Hal Levison  ) S
LHL
(c) S
( ) S
(Date:    2/3/93) S
LHL
(c) S
( ) S
(Last revision: 4/21/93) S
LHL
(c) S
( ) S
(Modified by JEC: 31/3/98) S
PHL
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_new) S
0.000 0.000 0.000 FG
(\(s,dt,r0,mu,alpha,u,fp,c1,c2,c3,iflgn\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs: ) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(s) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(dt) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(alpha) S
0.000 0.000 0.000 FG
(,u) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Outputs:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(fp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c2) S
0.000 0.000 0.000 FG
(,c3) S
LHL
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( iflgn) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( nc) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ds) S
0.000 0.000 0.000 FG
(,s2) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fpp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fppp) S
0.000 0.000 0.000 FG
(,fdt) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( nc=0,6) S
LHL
(         s2 = s * s) S
LHL
(         x = s2*alpha) S
LHL
(         ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_stumpff) S
0.000 0.000 0.000 FG
(\(x,c0,c1,c2,c3\)) S
LHL
(         c1 = c1*s ) S
LHL
(         c2 = c2*s2 ) S
LHL
(         c3 = c3*s*s2) S
LHL
(         f = r0*c1 + u*c2 + mu*c3 - dt) S
LHL
(         fp = r0*c0 + u*c1 + mu*c2) S
LHL
(         fpp = \(mu - r0*alpha\)*c1 + u*c0) S
LHL
(         fppp = \(mu - r0*alpha\)*c0 - u*alpha*c1) S
LHL
(         ds = - f/fp) S
LHL
(         ds = - f/\(fp + .5d0*ds*fpp\)) S
LHL
(         ds = -f/\(fp + .5d0*ds*fpp + ds*ds*fppp*.1666666666666667d0\)) S
LHL
(         s = s + ds) S
LHL
(         fdt = f/dt) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(..      ) S
(quartic convergence) S
LHL
0.000 0.000 0.000 FG
(         ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\( fdt*fdt) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(DANBYB*DANBYB\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
( ) S
LHL
(             iflgn = 0) S
LHL
(             ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(         ) S
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(...     ) S
(newton's method succeeded) S
PHL
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(..     ) S
(newton's method failed) S
EndPage
EndDSCPage
EndSheet

%%Page: 107 107
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7633 def
/PageNumber 107 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7632 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
(        iflgn = 1) S
LHL
(        ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
PHL
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(  ) S
0.698 0.133 0.133 FG
(! ) S
(drift_kepu_new) S
LHL
(c) S
(----------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
(                        ) S
(DRIFT_KEPU_P3SOLVE.F) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
( ) S
(Returns the real root of cubic often found in solving kepler) S
LHL
(c) S
( ) S
(problem in universal variables.) S
LHL
(c) S
LHL
(c) S
(             ) S
(Input:) S
LHL
(c) S
(                 ) S
(dt            ==>  time step \(real scalar\)) S
LHL
(c) S
(                 ) S
(r0            ==>  Distance between `Sun' and paritcle) S
LHL
(c) S
(                                     ) S
(\(real scalar\)) S
LHL
(c) S
(                 ) S
(mu            ==>  Reduced mass of system \(real scalar\)) S
LHL
(c) S
(                 ) S
(alpha         ==>  Twice the binding energy \(real scalar\)) S
LHL
(c) S
(                 ) S
(u             ==>  Vel. dot radial vector \(real scalar\)) S
LHL
(c) S
(             ) S
(Output:) S
LHL
(c) S
(                 ) S
(s             ==>  solution of cubic eqn for the  ) S
LHL
(c) S
(                                    ) S
(universal variable) S
LHL
(c) S
(                 ) S
(iflg          ==>  success flag \( = 0 if O.K.\) \(integer\)) S
LHL
(c) S
LHL
(c) S
( ) S
(Author:  Martin Duncan  ) S
LHL
(c) S
( ) S
(Date:    March 12/93) S
LHL
(c) S
( ) S
(Last revision: March 12/93) S
PHL
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_p3solve) S
0.000 0.000 0.000 FG
(\(dt,r0,mu,alpha,u,s,iflg\)) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs: ) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(dt) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(alpha) S
0.000 0.000 0.000 FG
(,u) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Outputs:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( iflg) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 s) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(denom) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(q) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(r) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sq2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sq) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(p1) S
0.000 0.000 0.000 FG
(,p2) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
(denom = \(mu - alpha*r0\)/6.d0) S
LHL
8 W
(a2 = 0.5*u/denom) S
LHL
8 W
(a1 = r0/denom) S
LHL
8 W
(a0 =-dt/denom) S
PHL
LHL
8 W
(q = \(a1 - a2*a2/3.d0\)/3.d0) S
LHL
8 W
(r = \(a1*a2 -3.d0*a0\)/6.d0 - \(a2**3\)/27.d0) S
LHL
8 W
(sq2 = q**3 + r**2) S
PHL
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\( sq2 ) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
( 0.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(sq = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(sq2\)) S
PHL
LHL
11 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(r+sq\) ) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
( 0.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
14 W
(p1 =  -\(-\(r + sq\)\)**\(1.d0/3.d0\)) S
LHL
11 W
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
14 W
(p1 = \(r + sq\)**\(1.d0/3.d0\)) S
LHL
11 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
LHL
11 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(\(r-sq\) ) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
( 0.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
14 W
(p2 =  -\(-\(r - sq\)\)**\(1.d0/3.d0\)) S
LHL
11 W
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
14 W
(p2 = \(r - sq\)**\(1.d0/3.d0\)) S
LHL
11 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
11 W
(iflg = 0) S
LHL
11 W
(s = p1 + p2 - a2/3.d0) S
PHL
LHL
8 W
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
11 W
(iflg = 1) S
LHL
11 W
(s = 0) S
EndPage
EndDSCPage
EndSheet

%%Page: 108 108
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7705 def
/PageNumber 108 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7704 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
(        ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(     ) S
0.698 0.133 0.133 FG
(!   ) S
(drift_kepu_p3solve) S
LHL
(c) S
(-------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
(                        ) S
(DRIFT_KEPU_STUMPFF.F) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
( ) S
(subroutine for the calculation of stumpff functions) S
LHL
(c) S
( ) S
(see Danby p.172  equations 6.9.15) S
LHL
(c) S
LHL
(c) S
(             ) S
(Input:) S
LHL
(c) S
(                 ) S
(x             ==>  argument) S
LHL
(c) S
(             ) S
(Output:) S
LHL
(c) S
(                 ) S
(c0,c1,c2,c3   ==>  c's from p171-172) S
LHL
(c) S
(                                       ) S
(\(real scalors\)) S
LHL
(c) S
( ) S
(Author:  Hal Levison  ) S
LHL
(c) S
( ) S
(Date:    2/3/93) S
LHL
(c) S
( ) S
(Last revision: 2/3/93) S
LHL
(c) S
( ) S
(Modified by JEC: 31/3/98) S
LHL
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_kepu_stumpff) S
0.000 0.000 0.000 FG
(\(x,c0,c1,c2,c3\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs: ) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 x) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Outputs:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(c0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(c2) S
0.000 0.000 0.000 FG
(,c3) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(n) S
0.000 0.000 0.000 FG
(,i) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(xm) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x2) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x4) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x5) S
0.000 0.000 0.000 FG
(,x6) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
(      n = 0) S
LHL
(      xm = 0.1) S
LHL
(      ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( ) S
0.627 0.125 0.941 FG
(while) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(x\)) S
0.627 0.125 0.941 FG
(.ge.) S
0.000 0.000 0.000 FG
(xm\)) S
LHL
(         n = n + 1) S
LHL
(         x = x * .25d0) S
LHL
(      ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      x2 = x  * x) S
LHL
(      x3 = x  * x2) S
LHL
(      x4 = x2 * x2) S
LHL
(      x5 = x2 * x3) S
LHL
(      x6 = x3 * x3) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      c2 = 1.147074559772972d-11*x6 - 2.087675698786810d-9*x5) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   + 2.755731922398589d-7*x4  - 2.480158730158730d-5*x3) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   + 1.388888888888889d-3*x2  - 4.166666666666667d-2*x + .5d0) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      c3 = 7.647163731819816d-13*x6 - 1.605904383682161d-10*x5) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   + 2.505210838544172d-8*x4  - 2.755731922398589d-6*x3) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   + 1.984126984126984d-4*x2  - 8.333333333333333d-3*x) S
LHL
(     ) S
0.737 0.561 0.561 FG
(%) S
0.000 0.000 0.000 FG
(   + 1.666666666666667d-1) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      c1 = 1. - x*c3) S
LHL
(      c0 = 1. - x*c2) S
LHL
0.698 0.133 0.133 FG
(c) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(n) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
(0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(         ) S
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i=n,1,-1) S
LHL
(            c3 = \(c2 + c0*c3\)*.25d0) S
LHL
(            c2 = c1*c1*.5d0) S
LHL
(            c1 = c0*c1) S
LHL
(            c0 = 2.*c0*c0 - 1.) S
LHL
(            x = x * 4.) S
LHL
(          ) S
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 109 109
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7777 def
/PageNumber 109 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7776 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(       ) S
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
(       ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(       ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(     ) S
0.698 0.133 0.133 FG
(!   ) S
(drift_kepu_stumpff) S
LHL
(c) S
(------------------------------------------------------------------) S
LHL
(c) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
(                        ) S
(DRIFT_ONE.F) S
LHL
(c) S
(*************************************************************************) S
LHL
(c) S
( ) S
(This subroutine does the danby-type drift for one particle, using ) S
LHL
(c) S
( ) S
(appropriate vbles and redoing a drift if the accuracy is too poor ) S
LHL
(c) S
( ) S
(\(as flagged by the integer iflg\).) S
LHL
(c) S
LHL
(c) S
(             ) S
(Input:) S
LHL
(c) S
(                 ) S
(nbod          ==>  number of massive bodies \(int scalar\)) S
LHL
(c) S
(                 ) S
(mass          ==>  mass of bodies \(real array\)) S
LHL
(c) S
(                 ) S
(x,y,z         ==>  initial position in jacobi coord ) S
LHL
(c) S
(                                    ) S
(\(real scalar\)) S
LHL
(c) S
(                 ) S
(vx,vy,vz      ==>  initial position in jacobi coord ) S
LHL
(c) S
(                                    ) S
(\(real scalar\)) S
LHL
(c) S
(                 ) S
(dt            ==>  time step) S
LHL
(c) S
(             ) S
(Output:) S
LHL
(c) S
(                 ) S
(x,y,z         ==>  final position in jacobi coord ) S
LHL
(c) S
(                                       ) S
(\(real scalars\)) S
LHL
(c) S
(                 ) S
(vx,vy,vz      ==>  final position in jacobi coord ) S
LHL
(c) S
(                                       ) S
(\(real scalars\)) S
LHL
(c) S
(                 ) S
(iflg          ==>  integer \(zero for successful step\)) S
LHL
(c) S
LHL
(c) S
( ) S
(Authors:  Hal Levison & Martin Duncan ) S
LHL
(c) S
( ) S
(Date:    2/10/93) S
LHL
(c) S
( ) S
(Last revision: 2/10/93) S
LHL
(c) S
PHL
0.000 0.000 0.000 FG
LHL
(      ) S
0.627 0.125 0.941 FG
(subroutine) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_one) S
0.000 0.000 0.000 FG
(\(mu,x,y,z,vx,vy,vz,dt,iflg\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs Only: ) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(mu) S
0.000 0.000 0.000 FG
(,dt) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs and Outputs:) S
LHL
0.000 0.000 0.000 FG
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(y) S
0.000 0.000 0.000 FG
(,z) S
LHL
(      ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(vx) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(vy) S
0.000 0.000 0.000 FG
(,vz) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Output) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( iflg) S
PHL
8 W
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( i) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 dttmp) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
(           ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_dan) S
0.000 0.000 0.000 FG
(\(mu,x,y,z,vx,vy,vz,dt,iflg\)) S
PHL
LHL
11 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflg ) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
( 0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
PHL
12 W
LHL
13 W
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 1,10) S
LHL
15 W
(dttmp = dt/10.d0) S
LHL
(               ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(drift_dan) S
0.000 0.000 0.000 FG
(\(mu,x,y,z,vx,vy,vz,dttmp,iflg\)) S
LHL
15 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflg ) S
0.627 0.125 0.941 FG
(.ne.) S
0.000 0.000 0.000 FG
( 0\) ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
13 W
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
PHL
LHL
11 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
(        ) S
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
(        ) S
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(    ) S
0.698 0.133 0.133 FG
(! ) S
(drift_one) S
LHL
(c) S
(-------------------------------------------------------------------) S
LHL
(c) S
LHL
(*) S
(**********************************************************************) S
LHL
(c) S
(                    ) S
(ORBEL_FGET.F) S
EndPage
EndDSCPage
EndSheet

%%Page: 110 110
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7849 def
/PageNumber 110 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7848 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(*) S
(**********************************************************************) S
LHL
(*) S
(     ) S
(PURPOSE:  Solves Kepler's eqn. for hyperbola using hybrid approach.  ) S
LHL
(*) S
LHL
(*) S
(             ) S
(Input:) S
LHL
(*) S
(                           ) S
(e ==> eccentricity anomaly. \(real scalar\)) S
LHL
(*) S
(                        ) S
(capn ==> hyperbola mean anomaly. \(real scalar\)) S
LHL
(*) S
(             ) S
(Returns:) S
LHL
(*) S
(                  ) S
(orbel_fget ==>  eccentric anomaly. \(real scalar\)) S
LHL
(*) S
LHL
(*) S
(     ) S
(ALGORITHM: Based on pp. 70-72 of Fitzpatrick's book "Principles of) S
LHL
(*) S
(           ) S
(Cel. Mech. ".  Quartic convergence from Danby's book.) S
LHL
(*) S
(     ) S
(REMARKS: ) S
LHL
(*) S
(     ) S
(AUTHOR: M. Duncan ) S
LHL
(*) S
(     ) S
(DATE WRITTEN: May 11, 1992.) S
LHL
(*) S
(     ) S
(REVISIONS: 2/26/93 hfl) S
LHL
(*) S
(     ) S
(Modified by JEC) S
LHL
(*) S
(**********************************************************************) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(orbel_fget) S
0.000 0.000 0.000 FG
(\(e,capn\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs Only: ) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,capn) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,IMAX) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(tmp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(shx) S
0.000 0.000 0.000 FG
(,chx) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(esh) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(ech) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fpp) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fppp) S
0.000 0.000 0.000 FG
(,dx) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(IMAX) S
0.000 0.000 0.000 FG
( = 10\)) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Function to solve "Kepler's eqn" for F \(here called) S
LHL
(c) S
( ) S
(x\) for given e and CAPN. ) S
PHL
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(  ) S
(begin with a guess proposed by Danby) S
1 W
LHL
0.000 0.000 0.000 FG
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\( capn ) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
( 0.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(tmp = -2.d0*capn/e + 1.8d0) S
LHL
11 W
(x = -) S
0.855 0.439 0.839 FG
(log) S
0.000 0.000 0.000 FG
(\(tmp\)) S
LHL
8 W
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
11 W
(tmp = +2.d0*capn/e + 1.8d0) S
LHL
11 W
(x = ) S
0.855 0.439 0.839 FG
(log) S
0.000 0.000 0.000 FG
(\( tmp\)) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
(orbel_fget = x) S
PHL
LHL
8 W
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 1,IMAX) S
LHL
(          ) S
0.627 0.125 0.941 FG
(call) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(mco_sinh) S
0.000 0.000 0.000 FG
( \(x,shx,chx\)) S
LHL
10 W
(esh = e*shx) S
LHL
10 W
(ech = e*chx) S
LHL
10 W
(f = esh - x - capn) S
LHL
0.698 0.133 0.133 FG
(c) S
9 W
(write\(6,*\) 'i,x,f : ',i,x,f) S
LHL
0.000 0.000 0.000 FG
10 W
(fp = ech - 1.d0  ) S
LHL
10 W
(fpp = esh ) S
LHL
10 W
(fppp = ech ) S
LHL
10 W
(dx = -f/fp) S
LHL
10 W
(dx = -f/\(fp + dx*fpp/2.d0\)) S
LHL
10 W
(dx = -f/\(fp + dx*fpp/2.d0 + dx*dx*fppp/6.d0\)) S
LHL
10 W
(orbel_fget = x + dx) S
LHL
0.698 0.133 0.133 FG
(c) S
(   ) S
(If we have converged here there's no point in going on) S
LHL
0.000 0.000 0.000 FG
10 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dx\) ) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
( TINY\) ) S
0.627 0.125 0.941 FG
(RETURN) S
0.000 0.000 0.000 FG
LHL
10 W
(x = orbel_fget) S
LHL
8 W
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
3 W
PHL
LHL
8 W
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
(\(6,*\) ) S
0.737 0.561 0.561 FG
('FGET : RETURNING WITHOUT COMPLETE CONVERGENCE') S
0.000 0.000 0.000 FG
( ) S
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(   ) S
0.698 0.133 0.133 FG
(! ) S
(orbel_fget) S
LHL
(c) S
(------------------------------------------------------------------) S
LHL
(c) S
LHL
(*) S
(**********************************************************************) S
EndPage
EndDSCPage
EndSheet

%%Page: 111 111
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7921 def
/PageNumber 111 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7920 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
(c) S
(                    ) S
(ORBEL_FHYBRID.F) S
LHL
(*) S
(**********************************************************************) S
LHL
(*) S
(     ) S
(PURPOSE:  Solves Kepler's eqn. for hyperbola using hybrid approach.  ) S
LHL
(*) S
LHL
(*) S
(             ) S
(Input:) S
LHL
(*) S
(                           ) S
(e ==> eccentricity anomaly. \(real scalar\)) S
LHL
(*) S
(                           ) S
(n ==> hyperbola mean anomaly. \(real scalar\)) S
LHL
(*) S
(             ) S
(Returns:) S
LHL
(*) S
(               ) S
(orbel_fhybrid ==>  eccentric anomaly. \(real scalar\)) S
LHL
(*) S
LHL
(*) S
(     ) S
(ALGORITHM: For abs\(N\) < 0.636*ecc -0.6 , use FLON ) S
LHL
(*) S
16 W
(For larger N, uses FGET) S
LHL
(*) S
(     ) S
(REMARKS: ) S
LHL
(*) S
(     ) S
(AUTHOR: M. Duncan ) S
LHL
(*) S
(     ) S
(DATE WRITTEN: May 26,1992.) S
LHL
(*) S
(     ) S
(REVISIONS: ) S
LHL
(*) S
(     ) S
(REVISIONS: 2/26/93 hfl) S
LHL
(*) S
(**********************************************************************) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(orbel_fhybrid) S
0.000 0.000 0.000 FG
(\(e,n\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs Only: ) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,n) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 abn) S
LHL
(        ) S
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(orbel_flon) S
0.000 0.000 0.000 FG
(,orbel_fget) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
(abn = n) S
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(n) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0.d0\) abn = -abn) S
PHL
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(abn ) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
( 0.636d0*e -0.6d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
10 W
(orbel_fhybrid = orbel_flon\(e,n\)) S
LHL
8 W
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
( ) S
LHL
10 W
(orbel_fhybrid = orbel_fget\(e,n\)) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
(   ) S
PHL
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(  ) S
0.698 0.133 0.133 FG
(! ) S
(orbel_fhybrid) S
LHL
(c) S
(-------------------------------------------------------------------) S
LHL
(c) S
LHL
(*) S
(**********************************************************************) S
LHL
(c) S
(                    ) S
(ORBEL_FLON.F) S
LHL
(*) S
(**********************************************************************) S
LHL
(*) S
(     ) S
(PURPOSE:  Solves Kepler's eqn. for hyperbola using hybrid approach.  ) S
LHL
(*) S
LHL
(*) S
(             ) S
(Input:) S
LHL
(*) S
(                           ) S
(e ==> eccentricity anomaly. \(real scalar\)) S
LHL
(*) S
(                        ) S
(capn ==> hyperbola mean anomaly. \(real scalar\)) S
LHL
(*) S
(             ) S
(Returns:) S
LHL
(*) S
(                  ) S
(orbel_flon ==>  eccentric anomaly. \(real scalar\)) S
LHL
(*) S
LHL
(*) S
(     ) S
(ALGORITHM: Uses power series for N in terms of F and Newton,s method) S
LHL
(*) S
(     ) S
(REMARKS: ONLY GOOD FOR LOW VALUES OF N \(N < 0.636*e -0.6\)) S
LHL
(*) S
(     ) S
(AUTHOR: M. Duncan ) S
LHL
(*) S
(     ) S
(DATE WRITTEN: May 26, 1992.) S
LHL
(*) S
(     ) S
(REVISIONS: ) S
LHL
(*) S
(**********************************************************************) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(orbel_flon) S
0.000 0.000 0.000 FG
(\(e,capn\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs Only: ) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(e) S
0.000 0.000 0.000 FG
(,capn) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
EndPage
EndDSCPage
EndSheet

%%Page: 112 112
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 7993 def
/PageNumber 112 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
7992 BeginPage
/f0 F
false BG
0.698 0.133 0.133 FG
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( ) S
0.722 0.525 0.043 FG
(iflag) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(i) S
0.000 0.000 0.000 FG
(,IMAX) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(sq) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(biga) S
0.000 0.000 0.000 FG
(,bigb) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,x2) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(f) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(fp) S
0.000 0.000 0.000 FG
(,dx) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 diff) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(a0) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a5) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a7) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(a9) S
0.000 0.000 0.000 FG
(,a11) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(b1) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b3) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b5) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b7) S
0.000 0.000 0.000 FG
(,) S
0.722 0.525 0.043 FG
(b9) S
0.000 0.000 0.000 FG
(,b11) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(IMAX) S
0.000 0.000 0.000 FG
( = 10\)) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(a11) S
0.000 0.000 0.000 FG
( = 156.d0,) S
0.722 0.525 0.043 FG
(a9) S
0.000 0.000 0.000 FG
( = 17160.d0,) S
0.722 0.525 0.043 FG
(a7) S
0.000 0.000 0.000 FG
( = 1235520.d0\)) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(a5) S
0.000 0.000 0.000 FG
( = 51891840.d0,) S
0.722 0.525 0.043 FG
(a3) S
0.000 0.000 0.000 FG
( = 1037836800.d0\)) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(b11) S
0.000 0.000 0.000 FG
( = 11.d0*a11,) S
0.722 0.525 0.043 FG
(b9) S
0.000 0.000 0.000 FG
( = 9.d0*a9,) S
0.722 0.525 0.043 FG
(b7) S
0.000 0.000 0.000 FG
( = 7.d0*a7\)) S
LHL
8 W
0.133 0.545 0.133 FG
(PARAMETER) S
0.000 0.000 0.000 FG
( \() S
0.722 0.525 0.043 FG
(b5) S
0.000 0.000 0.000 FG
( = 5.d0*a5, ) S
0.722 0.525 0.043 FG
(b3) S
0.000 0.000 0.000 FG
( = 3.d0*a3\)) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Function to solve "Kepler's eqn" for F \(here called) S
LHL
(c) S
( ) S
(x\) for given e and CAPN. Only good for smallish CAPN ) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
(iflag = 0) S
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\( capn ) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
( 0.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(iflag = 1) S
LHL
11 W
(capn = -capn) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
(a1 = 6227020800.d0 * \(1.d0 - 1.d0/e\)) S
LHL
8 W
(a0 = -6227020800.d0*capn/e) S
LHL
8 W
(b1 = a1) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(  ) S
(Set iflag nonzero if capn < 0., in which case solve for -capn) S
LHL
(c) S
(  ) S
(and change the sign of the final answer for F.) S
LHL
(c) S
(  ) S
(Begin with a reasonable guess based on solving the cubic for small F) S
1 W
PHL
0.000 0.000 0.000 FG
PHL
LHL
8 W
(a = 6.d0*\(e-1.d0\)/e) S
LHL
8 W
(b = -6.d0*capn/e) S
LHL
8 W
(sq = ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(0.25*b*b +a*a*a/27.d0\)) S
LHL
8 W
(biga = \(-0.5*b + sq\)**0.3333333333333333d0) S
LHL
8 W
(bigb = -\(+0.5*b + sq\)**0.3333333333333333d0) S
LHL
8 W
(x = biga + bigb) S
LHL
0.698 0.133 0.133 FG
(c) S
7 W
(write\(6,*\) 'cubic = ',x**3 +a*x +b) S
LHL
0.000 0.000 0.000 FG
8 W
(orbel_flon = x) S
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(If capn is tiny \(or zero\) no need to go further than cubic even for) S
LHL
(c) S
( ) S
(e =1.) S
LHL
0.000 0.000 0.000 FG
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\( capn ) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
( TINY\) ) S
0.627 0.125 0.941 FG
(go to) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
0.627 0.125 0.941 FG
(do) S
0.000 0.000 0.000 FG
( i = 1,IMAX) S
LHL
10 W
(x2 = x*x) S
LHL
10 W
(f = a0 +x*\(a1+x2*\(a3+x2*\(a5+x2*\(a7+x2*\(a9+x2*\(a11+x2\)\)\)\)\)\)) S
LHL
10 W
(fp = b1 +x2*\(b3+x2*\(b5+x2*\(b7+x2*\(b9+x2*\(b11 + 13.d0*x2\)\)\)\)\)   ) S
LHL
10 W
(dx = -f/fp) S
LHL
0.698 0.133 0.133 FG
(c) S
9 W
(write\(6,*\) 'i,dx,x,f : ') S
LHL
(c) S
9 W
(write\(6,432\) i,dx,x,f) S
LHL
0.373 0.620 0.627 FG
(432) S
0.000 0.000 0.000 FG
7 W
0.627 0.125 0.941 FG
(format) S
0.000 0.000 0.000 FG
(\(1x,i3,3\(2x,1p1e22.15\)\)) S
LHL
10 W
(orbel_flon = x + dx) S
LHL
0.698 0.133 0.133 FG
(c) S
(   ) S
(If we have converged here there's no point in going on) S
LHL
0.000 0.000 0.000 FG
10 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\() S
0.855 0.439 0.839 FG
(abs) S
0.000 0.000 0.000 FG
(\(dx\) ) S
0.627 0.125 0.941 FG
(.le.) S
0.000 0.000 0.000 FG
( TINY\) ) S
0.627 0.125 0.941 FG
(go to) S
0.000 0.000 0.000 FG
( ) S
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
LHL
10 W
(x = orbel_flon) S
LHL
8 W
0.627 0.125 0.941 FG
(enddo) S
0.000 0.000 0.000 FG
3 W
PHL
LHL
0.698 0.133 0.133 FG
(c) S
( ) S
(Abnormal return here - we've gone thru the loop ) S
LHL
(c) S
( ) S
(IMAX times without convergence) S
LHL
0.000 0.000 0.000 FG
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflag ) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
( 1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(orbel_flon = -orbel_flon) S
LHL
11 W
(capn = -capn) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
(\(6,*\) ) S
0.737 0.561 0.561 FG
('FLON : RETURNING WITHOUT COMPLETE CONVERGENCE') S
0.000 0.000 0.000 FG
( ) S
LHL
10 W
(diff = e*) S
0.855 0.439 0.839 FG
(sinh) S
0.000 0.000 0.000 FG
(\(orbel_flon\) - orbel_flon - capn) S
LHL
10 W
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
(\(6,*\) ) S
0.737 0.561 0.561 FG
('N, F, ecc*sinh\(F\) - F - N : ') S
0.000 0.000 0.000 FG
LHL
10 W
0.627 0.125 0.941 FG
(write) S
0.000 0.000 0.000 FG
(\(6,*\) capn,orbel_flon,diff) S
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 113 113
/Lines 8130 def
/PageCount 113 def
1 BeginSheet
BeginDSCPage
/LineNumber 8065 def
/PageNumber 113 def
/HeaderLinesLeft[
 [/h0 (mercury6_2.for)]
 [/h1 (~/PlanetProject/mercury/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (11/03/2015)]
]def
2 SetHeaderLines
8064 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
LHL
0.698 0.133 0.133 FG
(c) S
(  ) S
(Normal return here, but check if capn was originally negative) S
LHL
0.373 0.620 0.627 FG
(100) S
0.000 0.000 0.000 FG
5 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflag ) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
( 1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(orbel_flon = -orbel_flon) S
LHL
11 W
(capn = -capn) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(     ) S
0.698 0.133 0.133 FG
(! ) S
(orbel_flon) S
LHL
(c) S
LHL
(*) S
(**********************************************************************) S
LHL
(c) S
(                    ) S
(ORBEL_ZGET.F) S
LHL
(*) S
(**********************************************************************) S
LHL
(*) S
(     ) S
(PURPOSE:  Solves the equivalent of Kepler's eqn. for a parabola ) S
LHL
(*) S
(          ) S
(given Q \(Fitz. notation.\)) S
LHL
(*) S
LHL
(*) S
(             ) S
(Input:) S
LHL
(*) S
(                           ) S
(q ==>  parabola mean anomaly. \(real scalar\)) S
LHL
(*) S
(             ) S
(Returns:) S
LHL
(*) S
(                  ) S
(orbel_zget ==>  eccentric anomaly. \(real scalar\)) S
LHL
(*) S
LHL
(*) S
(     ) S
(ALGORITHM: p. 70-72 of Fitzpatrick's book "Princ. of Cel. Mech.") S
LHL
(*) S
(     ) S
(REMARKS: For a parabola we can solve analytically.) S
LHL
(*) S
(     ) S
(AUTHOR: M. Duncan ) S
LHL
(*) S
(     ) S
(DATE WRITTEN: May 11, 1992.) S
LHL
(*) S
(     ) S
(REVISIONS: May 27 - corrected it for negative Q and use power) S
LHL
(*) S
13 W
(series for small Q.) S
LHL
(*) S
(**********************************************************************) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.627 0.125 0.941 FG
(function) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 1.000 FG
(orbel_zget) S
0.000 0.000 0.000 FG
(\(q\)) S
PHL
LHL
(      ) S
0.627 0.125 0.941 FG
(include) S
0.000 0.000 0.000 FG
( ) S
0.737 0.561 0.561 FG
('swift.inc') S
0.000 0.000 0.000 FG
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Inputs Only: ) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 q) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(...  ) S
(Internals:) S
LHL
0.000 0.000 0.000 FG
8 W
0.133 0.545 0.133 FG
(integer) S
0.000 0.000 0.000 FG
( iflag) S
LHL
8 W
0.133 0.545 0.133 FG
(real) S
0.000 0.000 0.000 FG
(*8 ) S
0.722 0.525 0.043 FG
(x) S
0.000 0.000 0.000 FG
(,tmp) S
PHL
LHL
0.698 0.133 0.133 FG
(c) S
(----) S
LHL
(c) S
(...  ) S
(Executable code ) S
PHL
0.000 0.000 0.000 FG
LHL
8 W
(iflag = 0) S
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(q) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(0.d0\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
10 W
(iflag = 1) S
LHL
10 W
(q = -q) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
( \(q) S
0.627 0.125 0.941 FG
(.lt.) S
0.000 0.000 0.000 FG
(1.d-3\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
11 W
(orbel_zget = q*\(1.d0 - \(q*q/3.d0\)*\(1.d0 -q*q\)\)) S
LHL
8 W
0.627 0.125 0.941 FG
(else) S
0.000 0.000 0.000 FG
LHL
11 W
(x = 0.5d0*\(3.d0*q + ) S
0.855 0.439 0.839 FG
(sqrt) S
0.000 0.000 0.000 FG
(\(9.d0*\(q**2\) +4.d0\)\)) S
LHL
11 W
(tmp = x**\(1.d0/3.d0\)) S
LHL
11 W
(orbel_zget = tmp - 1.d0/tmp) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
LHL
8 W
0.627 0.125 0.941 FG
(if) S
0.000 0.000 0.000 FG
(\(iflag ) S
0.627 0.125 0.941 FG
(.eq.) S
0.000 0.000 0.000 FG
(1\) ) S
0.627 0.125 0.941 FG
(then) S
0.000 0.000 0.000 FG
LHL
(           orbel_zget = -orbel_zget) S
LHL
11 W
(q = -q) S
LHL
8 W
0.627 0.125 0.941 FG
(endif) S
0.000 0.000 0.000 FG
PHL
8 W
LHL
8 W
0.627 0.125 0.941 FG
(return) S
0.000 0.000 0.000 FG
LHL
8 W
0.627 0.125 0.941 FG
(end) S
0.000 0.000 0.000 FG
(    ) S
0.698 0.133 0.133 FG
(! ) S
(orbel_zget) S
LHL
(c) S
(----------------------------------------------------------------------) S
PHL
EndPage
EndDSCPage
EndSheet

%%Trailer
%%Pages: 113

EndDoc

%%EOF
